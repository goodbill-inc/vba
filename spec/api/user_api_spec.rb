=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::UserApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @api_instance = Vba::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instance of UserApi' do
      expect(@api_instance).to be_instance_of(Vba::UserApi)
    end
  end

  # unit tests for admin_disable_user
  # Admin Disable User
  # Admin request to disable a User.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'admin_disable_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for admin_enable_user
  # Admin Enable User
  # Admin request to enable a User.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'admin_enable_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for admin_resend_confirmation_code
  # Admin Resend Confirmation Code
  # Resends a User a confirmation code.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'admin_resend_confirmation_code test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for admin_resend_welcome_mesasge
  # Admin Resend Welcome Message
  # Resends the invitation message to a user that already exists and resets the expiration on the user&#39;s sign-up window.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'admin_resend_welcome_mesasge test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for confirm_forgot_password
  # Confirm Forgot Password
  # Allows a user to enter a confirmation code to reset a forgotten password.
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param user_confirm_forgot_password_request 
  # @param [Hash] opts the optional parameters
  # @return [UserConfirmForgotPasswordResponseVBAResponse]
  describe 'confirm_forgot_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_users
  # Create User
  # Creates a new User
  # @param vbasoftware_database Target database
  # @param users 
  # @param [Hash] opts the optional parameters
  # @return [UsersVBAResponse]
  describe 'create_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user
  # Delete User
  # Delete a User
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for forgot_password
  # Forgot Password
  # Begin password recovery flow. Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user&#39;s password.
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param user_forgot_password_request 
  # @param [Hash] opts the optional parameters
  # @return [UserForgotPasswordResponseVBAResponse]
  describe 'forgot_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Get User
  # Gets a User by ID
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [UsersVBAResponse]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_users
  # List Users
  # Lists all Users
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [UsersListVBAResponse]
  describe 'list_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for refresh_user_tokens
  # Refresh User Tokens
  # Uses the Refresh Token to obtain new JWT tokens to extend the user&#39;s session.
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param expired_id_token Expired Id Token
  # @param refresh_token Refresh Token
  # @param [Hash] opts the optional parameters
  # @return [UserAuthenticationResponseVBAResponse]
  describe 'refresh_user_tokens test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for submit_mfa_code
  # Submit MFA Code
  # Submits a multi-factor authentication (MFA) code provided by the user and completes the authentication process.
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param submit_mfa_code_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :vbasoftware_machine_id Machine ID (optional)
  # @return [UserAuthenticationResponseVBAResponse]
  describe 'submit_mfa_code test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_users
  # Create or Update Batch Users
  # Create or Update multiple Users at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param users 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user
  # Update User
  # Updates a specific User
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param users 
  # @param [Hash] opts the optional parameters
  # @return [UsersVBAResponse]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for user_authentication
  # User Authentication
  # Starts User Authentication
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :vbasoftware_machine_id Machine ID (optional)
  # @return [UserAuthenticationResponseVBAResponse]
  describe 'user_authentication test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for user_change_password
  # User Change Password
  # User requests to change their password.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_reset_password_request 
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'user_change_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for user_change_temp_password
  # Change Temporary Password
  # Changes a User&#39;s temporary password.
  # @param vbasoftware_client_id Client ID
  # @param vbasoftware_client_code Client Code
  # @param vbasoftware_database Target database
  # @param user_change_temp_password_request 
  # @param [Hash] opts the optional parameters
  # @return [UserChangeTempPasswordResponseVBAResponse]
  describe 'user_change_temp_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for user_reset_password
  # Admin Reset User Password
  # Admin request to reset a User&#39;s password. When an Administrator calls this API, the User&#39;s current password is invalidated and must be changed. If a user tries to sign in after the API is called, the User will get a &#x60;PasswordResetRequired&#x60; message back and should use the &#x60;forgot password&#x60; flow. In addition, if a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'user_reset_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
