=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PolicyStatusesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PolicyStatusesApi' do
  before do
    # run before each test
    @api_instance = Vba::PolicyStatusesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyStatusesApi' do
    it 'should create an instance of PolicyStatusesApi' do
      expect(@api_instance).to be_instance_of(Vba::PolicyStatusesApi)
    end
  end

  # unit tests for create_policy_status
  # Create PolicyStatus
  # Creates a new PolicyStatus
  # @param vbasoftware_database Target database
  # @param policy_status 
  # @param [Hash] opts the optional parameters
  # @return [PolicyStatusVBAResponse]
  describe 'create_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_policy_status
  # Delete PolicyStatus
  # Deletes an PolicyStatus
  # @param vbasoftware_database Target database
  # @param policy_status Policy Status
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_policy_status
  # Get PolicyStatus
  # Gets PolicyStatus
  # @param vbasoftware_database Target database
  # @param policy_status Policy Status
  # @param [Hash] opts the optional parameters
  # @return [PolicyStatusVBAResponse]
  describe 'get_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_policy_status
  # List PolicyStatus
  # Lists all PolicyStatus 
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [PolicyStatusListVBAResponse]
  describe 'list_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_policy_status
  # Create or Update Batch PolicyStatus
  # Create or Update multiple PolicyStatus at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param policy_status 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_policy_status
  # Update PolicyStatus
  # Updates a specific PolicyStatus.
  # @param vbasoftware_database Target database
  # @param policy_status Policy Status
  # @param policy_status2 
  # @param [Hash] opts the optional parameters
  # @return [PolicyStatusVBAResponse]
  describe 'update_policy_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
