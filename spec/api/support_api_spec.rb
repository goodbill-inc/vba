=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::SupportApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SupportApi' do
  before do
    # run before each test
    @api_instance = Vba::SupportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SupportApi' do
    it 'should create an instance of SupportApi' do
      expect(@api_instance).to be_instance_of(Vba::SupportApi)
    end
  end

  # unit tests for create_support_user
  # Create Support User in a client environment
  # This endpoint allows you to create a support user and add them to a specific client&#39;s database.
  # @param vbasoftware_database Support Database
  # @param target_vbasoftware_client_id Target Client ID
  # @param target_vbasoftware_client_code Target Client Code
  # @param target_vbasoftware_database Target Client Database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id_to_clone Client User ID to Clone
  # @option opts [Boolean] :make_admin Make Administrator
  # @return [UsersVBAResponse]
  describe 'create_support_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for disable_support_user
  # Disables the Support User in a client environment
  # This endpoint allows you to disable the currently authenticated Support user within the client&#39;s environment instead of deleting them.
  # @param vbasoftware_database Support Database
  # @param target_vbasoftware_client_id Target Client ID
  # @param target_vbasoftware_client_code Target Client Code
  # @param target_vbasoftware_database Target Client Database
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'disable_support_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_client
  # Get Client
  # Gets the client details for the given client id and client code.
  # @param vbasoftware_database Support Database
  # @param client_id Client ID
  # @param client_code Client Code
  # @param [Hash] opts the optional parameters
  # @return [VBAClientVBAResponse]
  describe 'get_client test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_client_users
  # List of all Users in a client environment
  # 
  # @param vbasoftware_database Support Database
  # @param target_vbasoftware_client_id Target Client ID
  # @param target_vbasoftware_client_code Target Client Code
  # @param target_vbasoftware_database Target Client Database
  # @param [Hash] opts the optional parameters
  # @return [UsersListVBAResponse]
  describe 'list_client_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_clients
  # List All Clients
  # Lists the clients
  # @param vbasoftware_database Support Database
  # @param [Hash] opts the optional parameters
  # @return [VBAClientListVBAResponse]
  describe 'list_clients test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
