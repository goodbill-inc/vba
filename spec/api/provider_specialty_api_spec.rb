=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ProviderSpecialtyApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProviderSpecialtyApi' do
  before do
    # run before each test
    @api_instance = Vba::ProviderSpecialtyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProviderSpecialtyApi' do
    it 'should create an instance of ProviderSpecialtyApi' do
      expect(@api_instance).to be_instance_of(Vba::ProviderSpecialtyApi)
    end
  end

  # unit tests for create_batch_provider_specialty
  # Create Batch ProviderSpecialty
  # Creates multiple ProviderSpecialties at one time.
  # @param vbasoftware_database Target database
  # @param provider_id Provider id
  # @param provider_specialty 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'create_batch_provider_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_provider_specialty
  # Create ProviderSpecialty
  # Creates a new ProviderSpecialty by assigning an existing Specialty to a Provider.
  # @param vbasoftware_database Target database
  # @param provider_id Provider id
  # @param specialty_code Specialty Code
  # @param [Hash] opts the optional parameters
  # @return [ProviderSpecialtyVBAResponse]
  describe 'create_provider_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_provider_specialty
  # Delete ProviderSpecialty
  # Deletes an ProviderSpecialty
  # @param vbasoftware_database Target database
  # @param provider_id Provider id
  # @param specialty_code Specialty Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_provider_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_provider_specialty
  # Get ProviderSpecialty
  # Gets ProviderSpecialty
  # @param vbasoftware_database Target database
  # @param provider_id Provider id
  # @param specialty_code Specialty Code
  # @param [Hash] opts the optional parameters
  # @return [ProviderSpecialtyVBAResponse]
  describe 'get_provider_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_provider_specialties_for_provider
  # List ProviderSpecialty by Provider
  # Gets a List of ProviderSpecialty for a given Provider ID
  # @param vbasoftware_database Target database
  # @param provider_id Provider id
  # @param [Hash] opts the optional parameters
  # @return [ProviderSpecialtyListVBAResponse]
  describe 'list_provider_specialties_for_provider test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
