=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::MultiFactorAuthApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MultiFactorAuthApi' do
  before do
    # run before each test
    @api_instance = Vba::MultiFactorAuthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MultiFactorAuthApi' do
    it 'should create an instance of MultiFactorAuthApi' do
      expect(@api_instance).to be_instance_of(Vba::MultiFactorAuthApi)
    end
  end

  # unit tests for disable_mfa_globally
  # Disable MFA for all Users
  # Disables MFA (Multi-Factor Authentication) for all users in the organization.  If an MFA software token has previously been registered, it will be set to inactive.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'disable_mfa_globally test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for disable_mfa_setup
  # Disable MFA
  # Disables MFA (Multi-Factor Authentication) for a specified user.  If a MFA software token has previously been registered, it is not destroyed, just disabled.
  # @param vbasoftware_database Target database
  # @param disable_mfa_setup_request 
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'disable_mfa_setup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for enable_mfa_globally
  # Enable MFA for all Users
  # Enables MFA (Multi-Factor Authentication) for all users in the organization.  If an MFA software token has previously been registered, it will be re-enabled.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'enable_mfa_globally test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for enable_mfa_setup
  # Enable MFA
  # Enables MFA (Multi-Factor Authentication) for a specified user.  If an MFA software token has previously been registered, it will be re-enabled.
  # @param vbasoftware_database Target database
  # @param enable_mfa_setup_request 
  # @param [Hash] opts the optional parameters
  # @return [StringVBAResponse]
  describe 'enable_mfa_setup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_mfa_status
  # Get Current MFA Status
  # Fetches the current multi-factor authentication (MFA) status for the logged-in user.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [BooleanVBAResponse]
  describe 'get_mfa_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for m_fa_device_setup
  # Request MFA Device Setup
  # Generates a SecretCode and a QR code.  Either can be used for setting up multi-factor authentication (MFA) with an authenticator app.
  # @param vbasoftware_database Target database
  # @param mfa_device_setup_request 
  # @param [Hash] opts the optional parameters
  # @return [MFADeviceSetupResponseVBAResponse]
  describe 'm_fa_device_setup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verify_mfa_device_setup
  # Verify an MFA Device Setup
  # Verifies the registration of a multi-factor authentication (MFA) device for the user by verifying the software token and associating it with the user&#39;s account.
  # @param vbasoftware_database Target database
  # @param verify_mfa_device_setup_request 
  # @param [Hash] opts the optional parameters
  # @return [VerifyMFADeviceSetupResponseVBAResponse]
  describe 'verify_mfa_device_setup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
