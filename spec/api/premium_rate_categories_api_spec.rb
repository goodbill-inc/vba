=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PremiumRateCategoriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PremiumRateCategoriesApi' do
  before do
    # run before each test
    @api_instance = Vba::PremiumRateCategoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PremiumRateCategoriesApi' do
    it 'should create an instance of PremiumRateCategoriesApi' do
      expect(@api_instance).to be_instance_of(Vba::PremiumRateCategoriesApi)
    end
  end

  # unit tests for create_prem_rate_category
  # Create PremRateCategory
  # Creates a new PremRateCategory
  # @param vbasoftware_database Target database
  # @param prem_rate_category 
  # @param [Hash] opts the optional parameters
  # @return [PremRateCategoryVBAResponse]
  describe 'create_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_prem_rate_category
  # Delete PremRateCategory
  # Deletes an PremRateCategory
  # @param vbasoftware_database Target database
  # @param prem_rate_category PremRate Category
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_rate_category
  # Get PremRateCategory
  # Gets PremRateCategory
  # @param vbasoftware_database Target database
  # @param prem_rate_category PremRate Category
  # @param [Hash] opts the optional parameters
  # @return [PremRateCategoryVBAResponse]
  describe 'get_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_rate_category
  # List PremRateCategory
  # Lists all PremRateCategory
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PremRateCategoryListVBAResponse]
  describe 'list_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_prem_rate_category
  # Create or Update Batch PremRateCategory
  # Create or Update multiple PremRateCategory at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param prem_rate_category 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_prem_rate_category
  # Update PremRateCategory
  # Updates a specific PremRateCategory.
  # @param vbasoftware_database Target database
  # @param prem_rate_category PremRate Category
  # @param prem_rate_category2 
  # @param [Hash] opts the optional parameters
  # @return [PremRateCategoryVBAResponse]
  describe 'update_prem_rate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
