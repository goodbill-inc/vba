=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::FundingAccountTypeApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FundingAccountTypeApi' do
  before do
    # run before each test
    @api_instance = Vba::FundingAccountTypeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FundingAccountTypeApi' do
    it 'should create an instance of FundingAccountTypeApi' do
      expect(@api_instance).to be_instance_of(Vba::FundingAccountTypeApi)
    end
  end

  # unit tests for create_funding_account_type
  # Create FundingAccountType
  # Creates a new FundingAccountType
  # @param vbasoftware_database Target database
  # @param funding_account_type 
  # @param [Hash] opts the optional parameters
  # @return [FundingAccountTypeVBAResponse]
  describe 'create_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_funding_account_type
  # Delete FundingAccountType
  # Deletes an FundingAccountType
  # @param vbasoftware_database Target database
  # @param account_type Account Type
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_funding_account_type
  # Get FundingAccountType
  # Gets FundingAccountType
  # @param vbasoftware_database Target database
  # @param account_type Account Type
  # @param [Hash] opts the optional parameters
  # @return [FundingAccountTypeVBAResponse]
  describe 'get_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_funding_account_type
  # List FundingAccountType
  # Lists all FundingAccountType
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [FundingAccountTypeListVBAResponse]
  describe 'list_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_funding_account_type
  # Create or Update Batch FundingAccountType
  # Create or Update multiple FundingAccountType at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param funding_account_type 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_funding_account_type
  # Update FundingAccountType
  # Updates a specific FundingAccountType.
  # @param vbasoftware_database Target database
  # @param account_type Account Type
  # @param funding_account_type 
  # @param [Hash] opts the optional parameters
  # @return [FundingAccountTypeVBAResponse]
  describe 'update_funding_account_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
