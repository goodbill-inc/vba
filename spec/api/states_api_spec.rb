=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::StatesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'StatesApi' do
  before do
    # run before each test
    @api_instance = Vba::StatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StatesApi' do
    it 'should create an instance of StatesApi' do
      expect(@api_instance).to be_instance_of(Vba::StatesApi)
    end
  end

  # unit tests for create_state
  # Create State
  # Creates a new State
  # @param vbasoftware_database Target database
  # @param state 
  # @param [Hash] opts the optional parameters
  # @return [StateVBAResponse]
  describe 'create_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_state
  # Delete State
  # Deletes an State
  # @param vbasoftware_database Target database
  # @param state_abbrev State Abbreviation
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_state
  # Get State
  # Gets State
  # @param vbasoftware_database Target database
  # @param state_abbrev State Abbreviation
  # @param [Hash] opts the optional parameters
  # @return [StateVBAResponse]
  describe 'get_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_state
  # List State
  # Lists all State given a specific 
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [StateListVBAResponse]
  describe 'list_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_state
  # Create or Update Batch State
  # Create or Update multiple State at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param state 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_state
  # Update State
  # Updates a specific State.
  # @param vbasoftware_database Target database
  # @param state_abbrev State Abbreviation
  # @param state 
  # @param [Hash] opts the optional parameters
  # @return [StateVBAResponse]
  describe 'update_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
