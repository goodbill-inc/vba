=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::FeeSchedulesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeeSchedulesApi' do
  before do
    # run before each test
    @api_instance = Vba::FeeSchedulesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeeSchedulesApi' do
    it 'should create an instance of FeeSchedulesApi' do
      expect(@api_instance).to be_instance_of(Vba::FeeSchedulesApi)
    end
  end

  # unit tests for copy_fee_schedule
  # Copy Fee Schedule
  # Copy an existing Fee Schedule to a new Fee Schedule.
  # @param vbasoftware_database Target database
  # @param fee_sched_copy 
  # @param [Hash] opts the optional parameters
  # @return [FeeSchedVBAResponse]
  describe 'copy_fee_schedule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for copy_fee_schedule_adj_disc
  # Copy Fee Schedule and Adjust Discount
  # Copy an existing Fee Schedule to a new Fee Schedule and adjust the resulting discount in the new Fee Schedule.
  # @param vbasoftware_database Target database
  # @param fee_sched_copy 
  # @param [Hash] opts the optional parameters
  # @return [FeeSchedVBAResponse]
  describe 'copy_fee_schedule_adj_disc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_fee_sched
  # Create FeeSched
  # Creates a new FeeSched
  # @param vbasoftware_database Target database
  # @param fee_sched 
  # @param [Hash] opts the optional parameters
  # @return [FeeSchedVBAResponse]
  describe 'create_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_fee_sched
  # Delete FeeSched
  # Deletes an FeeSched
  # @param vbasoftware_database Target database
  # @param fee_sched Fee Sched
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_fee_sched
  # Get FeeSched
  # Gets FeeSched
  # @param vbasoftware_database Target database
  # @param fee_sched Fee Sched
  # @param [Hash] opts the optional parameters
  # @return [FeeSchedVBAResponse]
  describe 'get_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_fee_sched
  # List FeeSched
  # Lists all FeeSched
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [FeeSchedListVBAResponse]
  describe 'list_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_uc_rate
  # List Usual and Customary Rates
  # Lists all UC Rates based on provided criteria.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :claim_type Claim Type
  # @option opts [Time] :service_date Service Date
  # @option opts [String] :zip_start Zip Code From
  # @option opts [String] :zip_end Zip Code Thru
  # @option opts [String] :proc_start Procedure Code From
  # @option opts [String] :proc_end Procedure Code Thru
  # @option opts [String] :modifier Modifier
  # @option opts [Integer] :percentile Percentile
  # @return [UsualCustomaryRateAllPercentileListVBAResponse]
  describe 'list_uc_rate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_fee_sched
  # Create or Update Batch FeeSched
  # Create or Update multiple FeeSched at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param fee_sched 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_fee_sched
  # Update FeeSched
  # Updates a specific FeeSched.
  # @param vbasoftware_database Target database
  # @param fee_sched Fee Sched
  # @param fee_sched2 
  # @param [Hash] opts the optional parameters
  # @return [FeeSchedVBAResponse]
  describe 'update_fee_sched test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
