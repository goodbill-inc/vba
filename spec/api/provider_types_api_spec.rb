=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ProviderTypesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProviderTypesApi' do
  before do
    # run before each test
    @api_instance = Vba::ProviderTypesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProviderTypesApi' do
    it 'should create an instance of ProviderTypesApi' do
      expect(@api_instance).to be_instance_of(Vba::ProviderTypesApi)
    end
  end

  # unit tests for create_provider_types
  # Create ProviderTypes
  # Creates a new ProviderTypes
  # @param vbasoftware_database Target database
  # @param provider_types 
  # @param [Hash] opts the optional parameters
  # @return [ProviderTypesVBAResponse]
  describe 'create_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_provider_types
  # Delete ProviderTypes
  # Deletes an ProviderTypes
  # @param vbasoftware_database Target database
  # @param provider_type Provider Type
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_provider_types
  # Get ProviderTypes
  # Gets ProviderTypes
  # @param vbasoftware_database Target database
  # @param provider_type Provider Type
  # @param [Hash] opts the optional parameters
  # @return [ProviderTypesVBAResponse]
  describe 'get_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_provider_types
  # List ProviderTypes
  # Lists all ProviderTypes 
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [ProviderTypesListVBAResponse]
  describe 'list_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_provider_types
  # Create or Update Batch ProviderTypes
  # Create or Update multiple ProviderTypes at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param provider_types 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_provider_types
  # Update ProviderTypes
  # Updates a specific ProviderTypes.
  # @param vbasoftware_database Target database
  # @param provider_type Provider Type
  # @param provider_types 
  # @param [Hash] opts the optional parameters
  # @return [ProviderTypesVBAResponse]
  describe 'update_provider_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
