=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PlanBenefitMaximumsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PlanBenefitMaximumsApi' do
  before do
    # run before each test
    @api_instance = Vba::PlanBenefitMaximumsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlanBenefitMaximumsApi' do
    it 'should create an instance of PlanBenefitMaximumsApi' do
      expect(@api_instance).to be_instance_of(Vba::PlanBenefitMaximumsApi)
    end
  end

  # unit tests for create_plan_maximum_benefit
  # Create PlanMaximumBenefit
  # Creates a new PlanMaximumBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param max_id Max ID
  # @param included_benefit_code Included Benefit Code
  # @param [Hash] opts the optional parameters
  # @return [PlanMaximumBenefitVBAResponse]
  describe 'create_plan_maximum_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_plan_maximum_benefit
  # Delete PlanMaximumBenefit
  # Deletes an PlanMaximumBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param max_id Max ID
  # @param included_benefit_code Included Benefit Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_plan_maximum_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_plan_maximum_benefit
  # Get PlanMaximumBenefit
  # Gets PlanMaximumBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param max_id Max ID
  # @param included_benefit_code Included Benefit Code
  # @param [Hash] opts the optional parameters
  # @return [PlanMaximumBenefitVBAResponse]
  describe 'get_plan_maximum_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_plan_maximum_benefit
  # List PlanMaximumBenefit
  # Lists all PlanMaximumBenefit for the given planID and benefitCode and maxID
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param max_id Max ID
  # @param [Hash] opts the optional parameters
  # @return [PlanMaximumBenefitListVBAResponse]
  describe 'list_plan_maximum_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_plan_maximum_benefit
  # Create or Update Batch PlanMaximumBenefit
  # Create or Update multiple PlanMaximumBenefit at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param max_id Max ID
  # @param plan_maximum_benefit 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_plan_maximum_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
