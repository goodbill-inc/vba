=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ProviderBenefitAdminFeesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProviderBenefitAdminFeesApi' do
  before do
    # run before each test
    @api_instance = Vba::ProviderBenefitAdminFeesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProviderBenefitAdminFeesApi' do
    it 'should create an instance of ProviderBenefitAdminFeesApi' do
      expect(@api_instance).to be_instance_of(Vba::ProviderBenefitAdminFeesApi)
    end
  end

  # unit tests for create_provider_benefit_admin
  # Create Provider Benefit Admin Fee
  # Creates a new ProviderBenefitAdmin Fee
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param provider_benefit_admin 
  # @param [Hash] opts the optional parameters
  # @return [ProviderBenefitAdminVBAResponse]
  describe 'create_provider_benefit_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_provider_benefit_admin
  # Delete ProviderBenefitAdmin
  # Deletes an ProviderBenefitAdmin
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param benefit_code Benefit Code
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_provider_benefit_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_provider_benefit_admin
  # Get ProviderBenefitAdmin
  # Gets ProviderBenefitAdmin
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param benefit_code Benefit Code
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [ProviderBenefitAdminVBAResponse]
  describe 'get_provider_benefit_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_provider_benefit_admin_fees
  # List Provider Benefit Admin Fees
  # List All Benefit Admin Fees for a given Provider
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param [Hash] opts the optional parameters
  # @return [ProviderBenefitAdminListVBAResponse]
  describe 'list_provider_benefit_admin_fees test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_provider_benefit_admin
  # Update Batch ProviderBenefitAdmin
  # Updates a multiple ProviderBenefitAdmin.
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param provider_benefit_admin 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_provider_benefit_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_provider_benefit_admin
  # Update ProviderBenefitAdmin
  # Updates a specific ProviderBenefitAdmin.
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param benefit_code Benefit Code
  # @param effective_date Effective Date
  # @param provider_benefit_admin 
  # @param [Hash] opts the optional parameters
  # @return [ProviderBenefitAdminVBAResponse]
  describe 'update_provider_benefit_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
