=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::CapitationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CapitationsApi' do
  before do
    # run before each test
    @api_instance = Vba::CapitationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CapitationsApi' do
    it 'should create an instance of CapitationsApi' do
      expect(@api_instance).to be_instance_of(Vba::CapitationsApi)
    end
  end

  # unit tests for capitation_generate
  # Capitation Generate
  # Generates Capitation records and attaches those to a new Capitation Transaction based on entered criteria.
  # @param vbasoftware_database Target database
  # @param capitation_generate 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'capitation_generate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for capitation_generate_assign
  # Capitation Generate Assign
  # Takes selected unassigned list of CapitationKeys and a valid Payee, and attaches them to a newly created Capitation Transaction.
  # @param vbasoftware_database Target database
  # @param capitation_generate 
  # @param [Hash] opts the optional parameters
  # @return [CapitationTransactionVBAResponse]
  describe 'capitation_generate_assign test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for capitation_generate_set_unassigned
  # Capitation Generate Set Unassigned
  # Takes existing unassigned capitation records and attaches them to the chosen Provider on a newly created Capitation Transaction.
  # @param vbasoftware_database Target database
  # @param capitation_generate 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'capitation_generate_set_unassigned test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_capitation
  # Create Capitation
  # Creates a new Capitation
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param capitation 
  # @param [Hash] opts the optional parameters
  # @return [CapitationVBAResponse]
  describe 'create_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_capitation
  # Delete Capitation
  # Deletes an Capitation
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param capitation_key Capitation Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_capitation
  # Get Capitation
  # Gets Capitation
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param capitation_key Capitation Key
  # @param [Hash] opts the optional parameters
  # @return [CapitationVBAResponse]
  describe 'get_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_capitation
  # List Capitation
  # Lists all Capitation for the given capitationTransactionKey
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [CapitationListVBAResponse]
  describe 'list_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_unassigned_capitation
  # List Unassigned Capitation
  # Lists all Capitation that is currently not assigned to a Capitation Transaction
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [CapitationListVBAResponse]
  describe 'list_unassigned_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_capitation
  # Create or Update Batch Capitation
  # Create or Update multiple Capitation at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param capitation 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_capitation
  # Update Capitation
  # Updates a specific Capitation.
  # @param vbasoftware_database Target database
  # @param capitation_transaction_key CapitationTransaction Key
  # @param capitation_key Capitation Key
  # @param capitation 
  # @param [Hash] opts the optional parameters
  # @return [CapitationVBAResponse]
  describe 'update_capitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
