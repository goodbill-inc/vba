=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ObjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ObjectsApi' do
  before do
    # run before each test
    @api_instance = Vba::ObjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ObjectsApi' do
    it 'should create an instance of ObjectsApi' do
      expect(@api_instance).to be_instance_of(Vba::ObjectsApi)
    end
  end

  # unit tests for list_functional_areas
  # List Functional Areas
  # Gets a list of all Functional Areas
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [FunctionalAreaListVBAResponse]
  describe 'list_functional_areas test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_objects
  # List Objects
  # Gets a list of Objects with optional Functional Area and Purpose filters.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :functional_area Functional Area filter
  # @option opts [String] :purpose PurposeArea filter
  # @return [ObjectListListVBAResponse]
  describe 'list_objects test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_purposes
  # List Purposes
  # Gets a list of all Purposes
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [PurposeListVBAResponse]
  describe 'list_purposes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
