=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PlanAuthPenaltiesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PlanAuthPenaltiesApi' do
  before do
    # run before each test
    @api_instance = Vba::PlanAuthPenaltiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlanAuthPenaltiesApi' do
    it 'should create an instance of PlanAuthPenaltiesApi' do
      expect(@api_instance).to be_instance_of(Vba::PlanAuthPenaltiesApi)
    end
  end

  # unit tests for create_plan_auth_penalty
  # Create PlanAuthPenalty
  # Creates a new PlanAuthPenalty
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty 
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyVBAResponse]
  describe 'create_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_plan_auth_penalty
  # Delete PlanAuthPenalty
  # Deletes an PlanAuthPenalty
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_plan_auth_penalty
  # Get PlanAuthPenalty
  # Gets PlanAuthPenalty
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyVBAResponse]
  describe 'get_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_plan_auth_penalty
  # List PlanAuthPenalty
  # Lists all PlanAuthPenalty planID
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyListVBAResponse]
  describe 'list_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_plan_auth_penalty
  # Create or Update Batch PlanAuthPenalty
  # Create or Update multiple PlanAuthPenalty at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_plan_auth_penalty
  # Update PlanAuthPenalty
  # Updates a specific PlanAuthPenalty.
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param plan_auth_penalty 
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyVBAResponse]
  describe 'update_plan_auth_penalty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
