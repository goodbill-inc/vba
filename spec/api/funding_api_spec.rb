=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::FundingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FundingApi' do
  before do
    # run before each test
    @api_instance = Vba::FundingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FundingApi' do
    it 'should create an instance of FundingApi' do
      expect(@api_instance).to be_instance_of(Vba::FundingApi)
    end
  end

  # unit tests for create_funding
  # Create Funding
  # Creates a new Funding
  # @param vbasoftware_database Target database
  # @param funding 
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'create_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_funding
  # Delete Funding
  # Deletes an Funding
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_funding
  # Get Funding
  # Gets Funding
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'get_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for hold_funds
  # Hold Funds
  # Lower the existing funding item by the hold amount and create a new funding for the hold amount.
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param hold_amount 
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'hold_funds test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_funding
  # List Funding
  # Lists all Funding
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [FundingListVBAResponse]
  describe 'list_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reallocate_funds
  # Reacllocate Funds
  # Change the Payor ID and Account Key of an existing funding item.
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param payor_id Payor ID
  # @param account_key Account Key
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'reallocate_funds test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for transfer_funds
  # Transfer Funds
  # Transfer funds from one account to another.  Additionally, can auto-create a premium distribution if a Funding_Key of 0 is sent.
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param funding_transfer_funds 
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'transfer_funds test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_funding
  # Create or Update Batch Funding
  # Create or Update multiple Funding at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param funding 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_funding
  # Update Funding
  # Updates a specific Funding.
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param funding 
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'update_funding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for void_funds
  # Void Funds
  # Void an existing funding item.
  # @param vbasoftware_database Target database
  # @param funding_key Funding Key
  # @param [Hash] opts the optional parameters
  # @return [FundingVBAResponse]
  describe 'void_funds test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
