=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::IDCodeValuesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IDCodeValuesApi' do
  before do
    # run before each test
    @api_instance = Vba::IDCodeValuesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IDCodeValuesApi' do
    it 'should create an instance of IDCodeValuesApi' do
      expect(@api_instance).to be_instance_of(Vba::IDCodeValuesApi)
    end
  end

  # unit tests for create_id_code_value
  # Create IDCodeValue
  # Creates a new IDCodeValue
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param id_code_value 
  # @param [Hash] opts the optional parameters
  # @return [IDCodeValueVBAResponse]
  describe 'create_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_id_code_value
  # Delete IDCodeValue
  # Deletes an IDCodeValue
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param id_code_value_key IDCodeValue Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_id_code_value
  # Get IDCodeValue
  # Gets IDCodeValue
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param id_code_value_key IDCodeValue Key
  # @param [Hash] opts the optional parameters
  # @return [IDCodeValueVBAResponse]
  describe 'get_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_id_code_value
  # List IDCodeValue
  # Lists all IDCodeValue for the given type and idCode
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [IDCodeValueListVBAResponse]
  describe 'list_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_id_code_value_by_source
  # List IDCodeValue based on Source
  # Lists all IDCodeValue for the given type and specific source               Based on IDCodeType we will return different values.                 AUTH                @SourceColumn1 &#x3D; auth_number                 BENEFIT                @SourceColumn1 &#x3D; benefit_code                 CAREPLAN                @SourceColumn1 &#x3D; case_key                 CARRIER                @SourceColumn1 &#x3D; carrier_key                 CASE                @SourceColumn1 &#x3D; case_key                 CLAIM                @SourceColumn1 &#x3D; batch_number                @SourceColumn2 &#x3D; batch_claim                 CLMBTCH                @SourceColumn1 &#x3D; batch_number                 COMMAGENCY                @SourceColumn1 &#x3D; commissionagency_key                 COMMREP                @SourceColumn1 &#x3D; commissionrep_key                 COMPANYDATA                @SourceColumn1 &#x3D; key_value                 CONTRACTRIDER                @SourceColumn1 &#x3D; group_id                @SourceColumn2 &#x3D; division_id                @SourceColumn3 &#x3D; coverage_start                @SourceColumn4 &#x3D; plan_id                @SourceColumn5 &#x3D; benefit_code                 CREDQUESTION                @SourceColumn1 &#x3D; credattestationquestion_key                 DISREASON                @SourceColumn1 &#x3D; reason_id                 FUNDINGACCOUNT                @SourceColumn1 &#x3D; account_key                 GRIEV                @SourceColumn1 &#x3D; grievance_key                 GROUP                @SourceColumn1 &#x3D; group_id                 GROUPDIVISION                @SourceColumn1 &#x3D; group_id                @SourceColumn1 &#x3D; division_id                 GROUPNETWORK                @SourceColumn1 &#x3D; group_id                @SourceColumn2 &#x3D; division_id                @SourceColumn3 &#x3D; coverage_start                @SourceColumn4 &#x3D; networkid                 GROUPPLAN                @SourceColumn1 &#x3D; group_id                @SourceColumn2 &#x3D; division_id                @SourceColumn3 &#x3D; plan_id                 INTRFACE                @SourceColumn1 &#x3D; vbainterface_key                 MEMBER                @SourceColumn1 &#x3D; subscriber_id                @SourceColumn2 &#x3D; member_seq                 NETWORK                @SourceColumn1 &#x3D; networkid                 PAYEE                @SourceColumn1 &#x3D; payee_id                 PAYOR                @SourceColumn1 &#x3D; payor_id                 PLAN                @SourceColumn1 &#x3D; plan_id                 PROV                @SourceColumn1 &#x3D; provider_id                 PROVCRED                @SourceColumn1 &#x3D; providercred_key                 REINS                @SourceColumn1 &#x3D; reinscontract_key                 SUBSCRIBER                @SourceColumn1 &#x3D; subscriber_id                 USER                @SourceColumn1 &#x3D; user_id                  
  # @param vbasoftware_database Target database
  # @param type Type
  # @param column_name1 Column_Name1
  # @param key_value1 Key_Value1
  # @param [Hash] opts the optional parameters
  # @option opts [String] :column_name2 Column_Name2
  # @option opts [String] :key_value2 Key_Value2
  # @option opts [String] :column_name3 Column_Name3
  # @option opts [String] :key_value3 Key_Value3
  # @option opts [String] :column_name4 Column_Name4
  # @option opts [String] :key_value4 Key_Value4
  # @option opts [String] :column_name5 Column_Name5
  # @option opts [String] :key_value5 Key_Value5
  # @return [IDCodeValueResultBySourceListVBAResponse]
  describe 'list_id_code_value_by_source test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_id_code_value
  # Create or Update Batch IDCodeValue
  # Create or Update multiple IDCodeValue at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param id_code_value 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_id_code_value
  # Update IDCodeValue
  # Updates a specific IDCodeValue.
  # @param vbasoftware_database Target database
  # @param type Type
  # @param id_code ID Code
  # @param id_code_value_key IDCodeValue Key
  # @param id_code_value 
  # @param [Hash] opts the optional parameters
  # @return [IDCodeValueVBAResponse]
  describe 'update_id_code_value test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
