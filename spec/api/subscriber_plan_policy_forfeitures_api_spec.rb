=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::SubscriberPlanPolicyForfeituresApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SubscriberPlanPolicyForfeituresApi' do
  before do
    # run before each test
    @api_instance = Vba::SubscriberPlanPolicyForfeituresApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubscriberPlanPolicyForfeituresApi' do
    it 'should create an instance of SubscriberPlanPolicyForfeituresApi' do
      expect(@api_instance).to be_instance_of(Vba::SubscriberPlanPolicyForfeituresApi)
    end
  end

  # unit tests for create_subscriber_forfeiture_status
  # Create SubscriberForfeitureStatus
  # Creates a new SubscriberForfeitureStatus
  # @param vbasoftware_database Target database
  # @param subscriber_forfeiture_status 
  # @param [Hash] opts the optional parameters
  # @return [SubscriberForfeitureStatusVBAResponse]
  describe 'create_subscriber_forfeiture_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_subscriber_forfeiture_status
  # Delete SubscriberForfeitureStatus
  # Deletes an SubscriberForfeitureStatus
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param policy_number Policy Number
  # @param forfeiture_status Forfeiture Status
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_subscriber_forfeiture_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_subscriber_forfeiture_status
  # Get SubscriberForfeitureStatus
  # Gets SubscriberForfeitureStatus
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param policy_number Policy Number
  # @param forfeiture_status Forfeiture Status
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [SubscriberForfeitureStatusVBAResponse]
  describe 'get_subscriber_forfeiture_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_subscriber_forfeiture_status
  # List SubscriberForfeitureStatus
  # Lists all SubscriberForfeitureStatus for the given filters: subscriberID and planID and benefitCode and policyNumber and forfeitureStatus and effectiveDate
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subscriber_id Subscriber ID
  # @option opts [String] :plan_id Plan ID
  # @option opts [String] :benefit_code Benefit Code
  # @option opts [String] :policy_number Policy Number
  # @option opts [String] :forfeiture_status Forfeiture Status
  # @option opts [Time] :effective_date Effective Date
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [SubscriberForfeitureStatusListVBAResponse]
  describe 'list_subscriber_forfeiture_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscriber_policy_forfeiture
  # Subscriber Policy Forfeiture
  # Forfeits a Policy for a given Subscriber ID
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param policy_number Policy Number
  # @param enrollment_policy_forfeiture 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscriber_policy_forfeiture test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_subscriber_forfeiture_status
  # Update SubscriberForfeitureStatus
  # Updates a specific SubscriberForfeitureStatus.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param policy_number Policy Number
  # @param forfeiture_status Forfeiture Status
  # @param effective_date Effective Date
  # @param subscriber_forfeiture_status 
  # @param [Hash] opts the optional parameters
  # @return [SubscriberForfeitureStatusVBAResponse]
  describe 'update_subscriber_forfeiture_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
