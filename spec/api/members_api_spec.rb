=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::MembersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MembersApi' do
  before do
    # run before each test
    @api_instance = Vba::MembersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembersApi' do
    it 'should create an instance of MembersApi' do
      expect(@api_instance).to be_instance_of(Vba::MembersApi)
    end
  end

  # unit tests for auto_assign_priary_care_physician
  # Auto-Assign Primary Care Physician
  # Automatically assigns a Primary care Physician to Members based on the Criteria found in the EnrollmentPCPAutoAssign entity passed in the body.
  # @param vbasoftware_database Target database
  # @param enrollment_pcp_auto_assign 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requesting_user_id Requesting User
  # @return [nil]
  describe 'auto_assign_priary_care_physician test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_members
  # Create Members
  # Creates a new Members
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param members 
  # @param [Hash] opts the optional parameters
  # @return [MembersVBAResponse]
  describe 'create_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_members
  # Delete Members
  # Deletes an Members
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for enrollment_benefit_inquiry
  # Benefit Inquiry
  # Get a consolidated payload of benefit information, accumulator information, and eligility.
  # @param vbasoftware_database Target database
  # @param vba_benefit_inquiry_request 
  # @param [Hash] opts the optional parameters
  # @return [VBABenefitInquiryVBAResponse]
  describe 'enrollment_benefit_inquiry test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_members
  # Get Members
  # Gets Members
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param [Hash] opts the optional parameters
  # @return [MembersVBAResponse]
  describe 'get_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_members_disability_tax_summary
  # Get MembersDisabilityTaxSummary
  # Retrieve the MembersDisabilityTaxSummary for the given year
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param tax_year Tax Year
  # @param [Hash] opts the optional parameters
  # @return [VBAMembersDisabilityTaxSummaryVBAResponse]
  describe 'get_members_disability_tax_summary test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_auto_assign_priary_care_physician_members
  # List Members with Auto-Assign Primary Care Physician
  # Get a list of Members that will be automatically assigned a Primary care Physician.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :run_date Run Date
  # @return [EnrollmentPCPAutoAssignMemberListVBAResponse]
  describe 'list_auto_assign_priary_care_physician_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_members
  # List Members
  # Lists all Members for the given subscriberID
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [MembersListVBAResponse]
  describe 'list_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_plan_year_by_member
  # List Plan Year by Member
  # List Plan Years available for a Member from both Group Plan Year and the Member Plan Year if applicable.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param [Hash] opts the optional parameters
  # @return [GroupPlanYearListVBAResponse]
  describe 'list_plan_year_by_member test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_providers_with_pcp_auto_assign
  # List Providers that are eligible for PCP Auto-Assign
  # Get a list of Providers that are eligible for PCP Auto-Assign for the given Networks and Provider Types.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :networks Networks as a comma separated list of strings
  # @option opts [String] :practice_types Practice Types  as a comma separated list of strings
  # @option opts [Time] :expiration_date Expiration Date
  # @return [EnrollmentPCPAutoAssignProviderListVBAResponse]
  describe 'list_providers_with_pcp_auto_assign test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_members
  # Create or Update Batch Members
  # Create or Update multiple Members at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param members 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_members
  # Update Members
  # Updates a specific Members.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param members 
  # @param [Hash] opts the optional parameters
  # @return [MembersVBAResponse]
  describe 'update_members test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
