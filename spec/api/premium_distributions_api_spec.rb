=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PremiumDistributionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PremiumDistributionsApi' do
  before do
    # run before each test
    @api_instance = Vba::PremiumDistributionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PremiumDistributionsApi' do
    it 'should create an instance of PremiumDistributionsApi' do
      expect(@api_instance).to be_instance_of(Vba::PremiumDistributionsApi)
    end
  end

  # unit tests for create_prem_distribution
  # Create PremDistribution
  # Creates a new PremDistribution
  # @param vbasoftware_database Target database
  # @param prem_distribution 
  # @param [Hash] opts the optional parameters
  # @return [PremDistributionVBAResponse]
  describe 'create_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_prem_distribution
  # Delete PremDistribution
  # Deletes an PremDistribution
  # @param vbasoftware_database Target database
  # @param prem_distribution_key PremDistribution Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_distribution
  # Create Premium Distributions
  # Generate the Premium Distributions for the selected Group and As of Date.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param as_of_date As of Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_distribution_check
  # Create Premium Distributions Checks
  # Generate the Premium Distribution Checks for the selected Payor and Payee.
  # @param vbasoftware_database Target database
  # @param payee_id Payee ID
  # @param payor_id Payor ID
  # @param account_key Account Key
  # @param check_number Check Number
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_distribution_check test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_distribution
  # Get PremDistribution
  # Gets PremDistribution
  # @param vbasoftware_database Target database
  # @param prem_distribution_key PremDistribution Key
  # @param [Hash] opts the optional parameters
  # @return [PremDistributionVBAResponse]
  describe 'get_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_distribution
  # List PremDistribution
  # Lists all PremDistribution
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PremDistributionListVBAResponse]
  describe 'list_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_distribution_available
  # List of Distribution by Group that have not been distributed.
  # List of Distribution by Group that have not been distributed.
  # @param vbasoftware_database Target database
  # @param as_of_date As of Date
  # @param [Hash] opts the optional parameters
  # @return [GetPremDistributionListResultListVBAResponse]
  describe 'list_prem_distribution_available test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_prem_distribution
  # Create or Update Batch PremDistribution
  # Create or Update multiple PremDistribution at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param prem_distribution 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_prem_distribution
  # Update PremDistribution
  # Updates a specific PremDistribution.
  # @param vbasoftware_database Target database
  # @param prem_distribution_key PremDistribution Key
  # @param prem_distribution 
  # @param [Hash] opts the optional parameters
  # @return [PremDistributionVBAResponse]
  describe 'update_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
