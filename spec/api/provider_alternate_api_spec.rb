=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ProviderAlternateApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProviderAlternateApi' do
  before do
    # run before each test
    @api_instance = Vba::ProviderAlternateApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProviderAlternateApi' do
    it 'should create an instance of ProviderAlternateApi' do
      expect(@api_instance).to be_instance_of(Vba::ProviderAlternateApi)
    end
  end

  # unit tests for create_provider_alternate
  # Create ProviderAlternate
  # Creates a new ProviderAlternate
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param provider_alternate 
  # @param [Hash] opts the optional parameters
  # @return [ProviderAlternateVBAResponse]
  describe 'create_provider_alternate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_provider_alternate
  # Delete ProviderAlternate
  # Deletes an ProviderAlternate
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param alternate_provider_id Alternate Provider ID
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_provider_alternate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_provider_alternate
  # Get ProviderAlternate
  # Gets ProviderAlternate
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param alternate_provider_id Alternate Provider ID
  # @param effective_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [ProviderAlternateVBAResponse]
  describe 'get_provider_alternate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_provider_alternates
  # List ProviderAlternate
  # Lists all ProviderAlternate given a specific providerID
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param [Hash] opts the optional parameters
  # @return [ProviderAlternateListVBAResponse]
  describe 'list_provider_alternates test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_provider_alternate
  # Create or Update Batch ProviderAlternate
  # Create or Update multiple ProviderAlternate at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param provider_alternate 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_provider_alternate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_provider_alternate
  # Update ProviderAlternate
  # Updates a specific ProviderAlternate.
  # @param vbasoftware_database Target database
  # @param provider_id Provider ID
  # @param alternate_provider_id Alternate Provider ID
  # @param effective_date Effective Date
  # @param provider_alternate 
  # @param [Hash] opts the optional parameters
  # @return [ProviderAlternateVBAResponse]
  describe 'update_provider_alternate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
