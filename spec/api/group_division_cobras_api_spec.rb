=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::GroupDivisionCobrasApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GroupDivisionCobrasApi' do
  before do
    # run before each test
    @api_instance = Vba::GroupDivisionCobrasApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupDivisionCobrasApi' do
    it 'should create an instance of GroupDivisionCobrasApi' do
      expect(@api_instance).to be_instance_of(Vba::GroupDivisionCobrasApi)
    end
  end

  # unit tests for create_group_division_cobra
  # Create GroupDivisionCobra
  # Creates a new GroupDivisionCobra
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param cobra_division_id Cobra Division ID
  # @param [Hash] opts the optional parameters
  # @return [GroupDivisionCobraVBAResponse]
  describe 'create_group_division_cobra test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_group_division_cobra
  # Delete GroupDivisionCobra
  # Deletes an GroupDivisionCobra
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param cobra_division_id Cobra Division ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_group_division_cobra test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_group_division_cobra
  # Get GroupDivisionCobra
  # Gets GroupDivisionCobra
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param cobra_division_id Cobra Division ID
  # @param [Hash] opts the optional parameters
  # @return [GroupDivisionCobraVBAResponse]
  describe 'get_group_division_cobra test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_group_division_cobra
  # List GroupDivisionCobra
  # Lists all GroupDivisionCobra for the given groupID and divisionID
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [GroupDivisionCobraListVBAResponse]
  describe 'list_group_division_cobra test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_group_division_cobra
  # Create Batch GroupDivisionCobra
  # Create multiple GroupDivisionCobra at once.  If the entity does not exist, it will be created.  If the entity already exists, an error will come back for that item.  These entities are not editable. Delete and recreate to edit.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_division_cobra 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_group_division_cobra test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
