=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::MaritalStatusesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MaritalStatusesApi' do
  before do
    # run before each test
    @api_instance = Vba::MaritalStatusesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MaritalStatusesApi' do
    it 'should create an instance of MaritalStatusesApi' do
      expect(@api_instance).to be_instance_of(Vba::MaritalStatusesApi)
    end
  end

  # unit tests for create_marital_status
  # Create MaritalStatus
  # Creates a new MaritalStatus
  # @param vbasoftware_database Target database
  # @param marital_status 
  # @param [Hash] opts the optional parameters
  # @return [MaritalStatusVBAResponse]
  describe 'create_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_marital_status
  # Delete MaritalStatus
  # Deletes an MaritalStatus
  # @param vbasoftware_database Target database
  # @param marital_status Marital Status
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_marital_status
  # Get MaritalStatus
  # Gets MaritalStatus
  # @param vbasoftware_database Target database
  # @param marital_status Marital Status
  # @param [Hash] opts the optional parameters
  # @return [MaritalStatusVBAResponse]
  describe 'get_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_marital_status
  # List MaritalStatus
  # Lists all MaritalStatus 
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [MaritalStatusListVBAResponse]
  describe 'list_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_marital_status
  # Create or Update Batch MaritalStatus
  # Create or Update multiple MaritalStatus at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param marital_status 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_marital_status
  # Update MaritalStatus
  # Updates a specific MaritalStatus.
  # @param vbasoftware_database Target database
  # @param marital_status Marital Status
  # @param marital_status2 
  # @param [Hash] opts the optional parameters
  # @return [MaritalStatusVBAResponse]
  describe 'update_marital_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
