=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::AdvEnrollmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdvEnrollmentApi' do
  before do
    # run before each test
    @api_instance = Vba::AdvEnrollmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdvEnrollmentApi' do
    it 'should create an instance of AdvEnrollmentApi' do
      expect(@api_instance).to be_instance_of(Vba::AdvEnrollmentApi)
    end
  end

  # unit tests for changesubscriber_id
  # Change Subscriber ID
  # Changes a Subscriber ID globally
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param change_subscriber_id_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'changesubscriber_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for enrollment_benefit_inquiry
  # Benefit Inquiry
  # Get a consolidated payload of benefit information, accumulator information, and eligility.
  # @param vbasoftware_database Target database
  # @param vba_benefit_inquiry_request 
  # @param [Hash] opts the optional parameters
  # @return [VBABenefitInquiryVBAResponse]
  describe 'enrollment_benefit_inquiry test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for i_d_card_request_report_series
  # Set Process Automation for ID Card Requests
  # Takes a list of IDCardRequest_Key values and verifies those against configured process automation settings.
  # @param vbasoftware_database Target database
  # @param id_card_request_report_series_config 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'i_d_card_request_report_series test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_disenroll_adjustment
  # List Billing Adjustments for Disenroll
  # List of Billing Adjustments that would be created based on a Subscriber being disenrolled on the As of Date.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param as_of_date As of Date
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentDisenrollAdjustmentListVBAResponse]
  describe 'list_disenroll_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_enrollment_waiting_period_by_hire_date
  # List Waiting Period Details
  # List of Waiting Period configuration based on the passed in settings (group, division, plan, and/or hire date).
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_id Group ID
  # @option opts [String] :division_id Division ID
  # @option opts [String] :plan_id Plan ID
  # @option opts [Time] :hire_date Hire Date
  # @return [EnrollmentWaitingPeriodByHireDateListVBAResponse]
  describe 'list_enrollment_waiting_period_by_hire_date test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for member_disenroll
  # Member Disenroll
  # Disenrolls a Member from an Enrollment.  A VBAProcess object is returned representing the process state. See VBAProcess area for more information.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param enrollment_disenroll 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'member_disenroll test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for member_reenroll
  # Member Re-enroll
  # Re-enrolls a Member to an Enrollment.  A VBAProcess object is returned representing the process state. See VBAProcess area for more information.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param enrollment_reenroll 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'member_reenroll test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for recalculate_member_teeth
  # Recalculate Member Teeth
  # Recalculate All Teeth for a given Subscriber and Member.  Pass the requestingUserId if this request is being made on behalf of another User.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param member_seq Member Seq
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requesting_user_id Requesting User
  # @return [nil]
  describe 'recalculate_member_teeth test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscriber_add_enrollment
  # Subscriber Add Enrollment
  # Adds enrollments to an existing subscriber. Can add enrollment for the subscriber or subscriber + all members.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param add_enrollment_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscriber_add_enrollment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscriber_division_transfer
  # Subscriber Division Transfer
  # Transfer a Subscriber Enrollment from one Division to another.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_coverage_start Group Coverage Start
  # @param start_date Start Date
  # @param current_enroll_end_date Current Enrollment End Date
  # @param new_enroll_start_date New Enrollment Start Date
  # @param new_enroll_division_id New Enrollment DivisionID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscriber_division_transfer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscriber_recalc_accum
  # Recalculate Subscriber Accumulators
  # Recalculate Accumulators for a given Subscriber ID
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscriber_recalc_accum test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscriber_surrender_policy
  # Subscriber Policy Surrender
  # Surrender an existing Policy under the Policy &amp; Forfeiture area.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param plan_id Plan ID
  # @param benefit_code Benefit Code
  # @param policy_number Policy Number
  # @param cash_value Cash Value
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscriber_surrender_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
