=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::UCNetworkApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UCNetworkApi' do
  before do
    # run before each test
    @api_instance = Vba::UCNetworkApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UCNetworkApi' do
    it 'should create an instance of UCNetworkApi' do
      expect(@api_instance).to be_instance_of(Vba::UCNetworkApi)
    end
  end

  # unit tests for create_uc_network
  # Create UCNetwork
  # Creates a new UCNetwork
  # @param vbasoftware_database Target database
  # @param uc_network 
  # @param [Hash] opts the optional parameters
  # @return [UCNetworkVBAResponse]
  describe 'create_uc_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_uc_network
  # Delete UCNetwork
  # Deletes an UCNetwork
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param plan_id Plan ID
  # @param state State
  # @param fee_sched Fee Sched
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_uc_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_uc_network
  # Get UCNetwork
  # Gets UCNetwork
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param plan_id Plan ID
  # @param state State
  # @param fee_sched Fee Sched
  # @param [Hash] opts the optional parameters
  # @return [UCNetworkVBAResponse]
  describe 'get_uc_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_uc_network
  # List UCNetwork
  # Lists all UCNetwork for the given groupID and divisionID and planID and state and feeSched
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_id Group ID
  # @option opts [String] :division_id Division ID
  # @option opts [String] :plan_id Plan ID
  # @option opts [String] :state State
  # @option opts [String] :fee_sched Fee Sched
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [UCNetworkListVBAResponse]
  describe 'list_uc_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_uc_network
  # Update UCNetwork
  # Updates a specific UCNetwork.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param plan_id Plan ID
  # @param state State
  # @param fee_sched Fee Sched
  # @param uc_network 
  # @param [Hash] opts the optional parameters
  # @return [UCNetworkVBAResponse]
  describe 'update_uc_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
