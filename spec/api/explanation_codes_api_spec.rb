=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::ExplanationCodesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ExplanationCodesApi' do
  before do
    # run before each test
    @api_instance = Vba::ExplanationCodesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ExplanationCodesApi' do
    it 'should create an instance of ExplanationCodesApi' do
      expect(@api_instance).to be_instance_of(Vba::ExplanationCodesApi)
    end
  end

  # unit tests for create_explanation_codes
  # Create ExplanationCodes
  # Creates a new ExplanationCodes
  # @param vbasoftware_database Target database
  # @param explanation_codes 
  # @param [Hash] opts the optional parameters
  # @return [ExplanationCodesVBAResponse]
  describe 'create_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_explanation_codes
  # Delete ExplanationCodes
  # Deletes an ExplanationCodes
  # @param vbasoftware_database Target database
  # @param ex_code Ex Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_explanation_codes
  # Get ExplanationCodes
  # Gets ExplanationCodes
  # @param vbasoftware_database Target database
  # @param ex_code Ex Code
  # @param [Hash] opts the optional parameters
  # @return [ExplanationCodesVBAResponse]
  describe 'get_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_explanation_codes
  # List ExplanationCodes
  # Lists all ExplanationCodes
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [ExplanationCodesListVBAResponse]
  describe 'list_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_explanation_codes
  # Create or Update Batch ExplanationCodes
  # Create or Update multiple ExplanationCodes at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param explanation_codes 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_explanation_codes
  # Update ExplanationCodes
  # Updates a specific ExplanationCodes.
  # @param vbasoftware_database Target database
  # @param ex_code Ex Code
  # @param explanation_codes 
  # @param [Hash] opts the optional parameters
  # @return [ExplanationCodesVBAResponse]
  describe 'update_explanation_codes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
