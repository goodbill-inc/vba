=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PlanAuthPenaltyBenefitsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PlanAuthPenaltyBenefitsApi' do
  before do
    # run before each test
    @api_instance = Vba::PlanAuthPenaltyBenefitsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlanAuthPenaltyBenefitsApi' do
    it 'should create an instance of PlanAuthPenaltyBenefitsApi' do
      expect(@api_instance).to be_instance_of(Vba::PlanAuthPenaltyBenefitsApi)
    end
  end

  # unit tests for create_plan_auth_penalty_benefit
  # Create PlanAuthPenaltyBenefit
  # Creates a new PlanAuthPenaltyBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param plan_auth_penalty_benefit 
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyBenefitVBAResponse]
  describe 'create_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_plan_auth_penalty_benefit
  # Delete PlanAuthPenaltyBenefit
  # Deletes an PlanAuthPenaltyBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param benefit_code Benefit Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_plan_auth_penalty_benefit
  # Get PlanAuthPenaltyBenefit
  # Gets PlanAuthPenaltyBenefit
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param benefit_code Benefit Code
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyBenefitVBAResponse]
  describe 'get_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_plan_auth_penalty_benefit
  # List PlanAuthPenaltyBenefit
  # Lists all PlanAuthPenaltyBenefit for the given planAuthPenaltyKey
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PlanAuthPenaltyBenefitListVBAResponse]
  describe 'list_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_plan_auth_penalty_benefit
  # Create or Update Batch PlanAuthPenaltyBenefit
  # Create or Update multiple PlanAuthPenaltyBenefit at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param plan_auth_penalty_benefit 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_plan_auth_penalty_benefit
  # Update PlanAuthPenaltyBenefit
  # Updates a specific PlanAuthPenaltyBenefit.
  # @param vbasoftware_database Target database
  # @param plan_id Plan ID
  # @param plan_auth_penalty_key PlanAuthPenalty Key
  # @param benefit_code Benefit Code
  # @param plan_auth_penalty_benefit 
  # @param [Hash] opts the optional parameters
  # @return [PlanAuthPenaltyBenefitVBAResponse]
  describe 'update_plan_auth_penalty_benefit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
