=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::CaseReasonsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CaseReasonsApi' do
  before do
    # run before each test
    @api_instance = Vba::CaseReasonsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CaseReasonsApi' do
    it 'should create an instance of CaseReasonsApi' do
      expect(@api_instance).to be_instance_of(Vba::CaseReasonsApi)
    end
  end

  # unit tests for create_case_reason
  # Create CaseReason
  # Creates a new CaseReason
  # @param vbasoftware_database Target database
  # @param case_reason 
  # @param [Hash] opts the optional parameters
  # @return [CaseReasonVBAResponse]
  describe 'create_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_case_reason
  # Delete CaseReason
  # Deletes an CaseReason
  # @param vbasoftware_database Target database
  # @param case_reason Case Reason
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_case_reason
  # Get CaseReason
  # Gets CaseReason
  # @param vbasoftware_database Target database
  # @param case_reason Case Reason
  # @param [Hash] opts the optional parameters
  # @return [CaseReasonVBAResponse]
  describe 'get_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_case_reason
  # List CaseReason
  # Lists all CaseReason
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [CaseReasonListVBAResponse]
  describe 'list_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_case_reason
  # Create or Update Batch CaseReason
  # Create or Update multiple CaseReason at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param case_reason 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_case_reason
  # Update CaseReason
  # Updates a specific CaseReason.
  # @param vbasoftware_database Target database
  # @param case_reason Case Reason
  # @param case_reason2 
  # @param [Hash] opts the optional parameters
  # @return [CaseReasonVBAResponse]
  describe 'update_case_reason test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
