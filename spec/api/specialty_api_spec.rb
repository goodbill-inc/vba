=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::SpecialtyApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SpecialtyApi' do
  before do
    # run before each test
    @api_instance = Vba::SpecialtyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SpecialtyApi' do
    it 'should create an instance of SpecialtyApi' do
      expect(@api_instance).to be_instance_of(Vba::SpecialtyApi)
    end
  end

  # unit tests for create_or_update_batch_specialty
  # Create or Update Batch Specialty
  # Creates or Updates multiple Specialties
  # @param vbasoftware_database Target database
  # @param specialty 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'create_or_update_batch_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_specialty
  # Create Specialty
  # Creates a new Specialty.
  # @param vbasoftware_database Target database
  # @param specialty 
  # @param [Hash] opts the optional parameters
  # @return [SpecialtyVBAResponse]
  describe 'create_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_specialty
  # Delete Specialty
  # Deletes an Specialty
  # @param vbasoftware_database Target database
  # @param specialty_code Specialty Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_specialty
  # Get Specialty
  # Gets Specialty
  # @param vbasoftware_database Target database
  # @param specialty_code Specialty Code
  # @param [Hash] opts the optional parameters
  # @return [SpecialtyVBAResponse]
  describe 'get_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_specialty
  # List Specialties
  # List all Specialties
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [SpecialtyListVBAResponse]
  describe 'list_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_specialty
  # Update Specialty
  # Updates a specific Specialty.
  # @param vbasoftware_database Target database
  # @param specialty_code Specialty Code
  # @param specialty 
  # @param [Hash] opts the optional parameters
  # @return [SpecialtyVBAResponse]
  describe 'update_specialty test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
