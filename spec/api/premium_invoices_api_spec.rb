=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PremiumInvoicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PremiumInvoicesApi' do
  before do
    # run before each test
    @api_instance = Vba::PremiumInvoicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PremiumInvoicesApi' do
    it 'should create an instance of PremiumInvoicesApi' do
      expect(@api_instance).to be_instance_of(Vba::PremiumInvoicesApi)
    end
  end

  # unit tests for create_prem_invoice
  # Create PremInvoice
  # Creates a new PremInvoice
  # @param vbasoftware_database Target database
  # @param prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'create_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_prem_invoice
  # Delete PremInvoice
  # Deletes an PremInvoice
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for finalize_invoice
  # Finalize Invoice
  # This will finalize the selected Invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'finalize_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for full_delete_invoice
  # Delete an Invoice with additional options
  # This process will delete an invoice and remove attached records, update or delete adjustments based on selected options.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param delete_additional_invoices Delete Additional Invoices
  # @param keep_manual_adjustments Keep Manual Adjustments
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'full_delete_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_division
  # Generate Division Invoice
  # Creates a new Premium Billing Invoice for the selected Group/Division.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group
  # Generate Group Invoice
  # Creates a new Premium Billing Invoice for the selected Group.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group_division
  # Generate Group and Division Invoice
  # Creates a new Premium Billing Invoice the selected Group for any Division with the Group Invoice Level AND a separate Invoice for each Division flagged as Division Invoice Level.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_invoice_group_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group_division_captive
  # Generate GroupDivisionCaptive Invoice
  # Creates a new Premium Billing Invoice for the selected GroupDivisionCaptive.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_group_division_captive test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_self_admin_division
  # Generate Self-Admin Division Invoice
  # Creates a new Self-Admin Invoice for the selected Group/Division.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_self_admin_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_self_admin_group
  # Generate Self-Admin Group Invoice
  # Creates a new Self-Admin Invoice for the selected Group.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_self_admin_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_subscriber
  # Generate Subscriber Invoice
  # Creates a new Premium Billing Invoice for the selected Subscriber.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_subscriber test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_invoice
  # Get PremInvoice
  # Gets PremInvoice
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'get_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_invoice_group_summary
  # Get PremInvoice Group Summary
  # Gets PremInvoice Summary for the specified group id and invoice year.  First PremInvoiceSelfAdmin table is checked for the group id, if found the values are aggregated from come from PremInvoiceSelfAdmin; if the group is not found in PremInvoiceSelfAdmin, the PremInvoiceSubscriber table is checked for this group.  If not present in either table, an error is returned.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param invoice_year Invoice Year
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGroupSummaryVBAResponse]
  describe 'get_prem_invoice_group_summary test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_invoice_summary
  # Get PremInvoice Summary
  # Gets PremInvoice Summary for the specified invoice.  First PremInvoiceSelfAdmin table is checked for the invoice key, if found the values are aggregated from come from PremInvoiceSelfAdmin; if the invoice key is not found in PremInvoiceSelfAdmin, the PremInvoiceSubscriber table is checked.  If not present in either table, an error is returned.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGroupSummaryVBAResponse]
  describe 'get_prem_invoice_summary test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_clear_applied
  # Clear Applied on Invoice
  # Clear Applied data on invoice.  Delete received records.  Update Received Amounts.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'invoice_clear_applied test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice
  # List PremInvoice
  # Lists all PremInvoice.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PremInvoiceListVBAResponse]
  describe 'list_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice_generate
  # List Invoices to be Generated
  # List of Invoices to be generated based on the selected Invoice Date.
  # @param vbasoftware_database Target database
  # @param invoice_date Invoice Date
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGenerateInvListListVBAResponse]
  describe 'list_prem_invoice_generate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice_generate_self_admin
  # List Self-Admin Invoices to be Generated
  # List of Self-Admin Invoices to be generated based on the selected Invoice Date.
  # @param vbasoftware_database Target database
  # @param invoice_date Invoice Date
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGenerateSelfAdminInvListListVBAResponse]
  describe 'list_prem_invoice_generate_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice_slim
  # List PremInvoiceSlim
  # Gets a &#39;Slim&#39; list of PremInvoices.  The Slim model has a limited subset of fields intended for quick loading.  You may provide the GroupID and/or Invoice Year to filter the list to include only those Invoices in which the Group/Invoice Year match an invoice with the same Group/Invoice Year wihtin the PremInvoiceSubscriber and PremInvoiceSelfAdmin tables.
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_id Group ID
  # @option opts [Integer] :invoice_year Invoice Year
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PremInvoiceSlimListVBAResponse]
  describe 'list_prem_invoice_slim test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_header_adjustment
  # PremInvoice Apply Payments by Header Adjustment
  # PremInvoice Apply Payments by Header Adjustment
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_header_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_self_admin
  # PremInvoice Apply Payments for Self-Admin
  # PremInvoice Apply Payments for Self-Admin
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber
  # PremInvoice Apply Payments by Subscriber
  # PremInvoice Apply Payments by Subscriber
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber_payor_id
  # PremInvoice Apply Payments by Subscriber and Payor ID
  # PremInvoice Apply Payments by Subscriber and Payor ID
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber_payor_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber_plan_type
  # PremInvoice Apply Payments by Subscriber and Plan Type
  # PremInvoice Apply Payments by Subscriber and Plan Type
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber_plan_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_auto_apply
  # PremInvoice Auto-Apply
  # Auto-Apply all payements to the selected invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_auto_apply test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_auto_apply_self_admin
  # PremInvoice Auto-Apply for Self-Admin
  # Auto-Apply all payements to the selected Self-Admin invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_auto_apply_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for regenerate_invoice
  # Regenerate Invoice
  # This will delete the invoice, remove attached adjustments, payments, etc. Then Regenerate the Invoice using the same Invoice Key.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'regenerate_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reset_self_admin_invoice
  # Reset Self-Admin Invoice
  # Reset a Self-Admin Invoice removing received amounts, adjustments applied, etc.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'reset_self_admin_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_prem_invoice
  # Create or Update Batch PremInvoice
  # Create or Update multiple PremInvoice at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_prem_invoice
  # Update PremInvoice
  # Updates a specific PremInvoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'update_prem_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
