=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::PremiumPaymentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PremiumPaymentsApi' do
  before do
    # run before each test
    @api_instance = Vba::PremiumPaymentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PremiumPaymentsApi' do
    it 'should create an instance of PremiumPaymentsApi' do
      expect(@api_instance).to be_instance_of(Vba::PremiumPaymentsApi)
    end
  end

  # unit tests for create_prem_payment
  # Create PremPayment
  # Creates a new PremPayment
  # @param vbasoftware_database Target database
  # @param prem_payment 
  # @param [Hash] opts the optional parameters
  # @return [PremPaymentVBAResponse]
  describe 'create_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_prem_payment
  # Delete PremPayment
  # Deletes an PremPayment
  # @param vbasoftware_database Target database
  # @param prem_payment_key PremPayment Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_prem_payment
  # Get PremPayment
  # Gets PremPayment
  # @param vbasoftware_database Target database
  # @param prem_payment_key PremPayment Key
  # @param [Hash] opts the optional parameters
  # @return [PremPaymentVBAResponse]
  describe 'get_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_apply_payment_category
  # List Premium for Payment Application
  # List Invoice Detail that can have premimum applied based on payment information and applied payment category.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param subscriber_id Subscriber ID
  # @param invoice_level Invoice Level
  # @param [Hash] opts the optional parameters
  # @return [PremApplyPaymentCategoryResultListVBAResponse]
  describe 'list_prem_apply_payment_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_payment
  # List PremPayment
  # Lists all PremPayment
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [PremPaymentListVBAResponse]
  describe 'list_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for process_invoice_tolerance
  # Process or Check Invoice Tolerance
  # Given an Invoice and amount due, either check if an Invoice falls withing Tolerance range to performan a write-off, or go ahead and perform the write-off.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param amount_due Amount Due
  # @param verify_only Verify Only
  # @param [Hash] opts the optional parameters
  # @return [BooleanVBAResponse]
  describe 'process_invoice_tolerance test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for process_payment_file
  # Process Payment File
  # Import a defined Payment File in .csv format to then have payments created and, optionally, attached to invoices.
  # @param vbasoftware_database Target database
  # @param vba_process_payment_file 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessPaymentFileResponseVBAResponse]
  describe 'process_payment_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for undo_premium_payment
  # Undo an Applied Premium Payment
  # Based on the supplied PremPayment_Key, remove this payment from any invoice it is attached, and then recalc the received on each affected invoice.
  # @param vbasoftware_database Target database
  # @param prem_payment_key PremPayment Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'undo_premium_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_prem_payment
  # Create or Update Batch PremPayment
  # Create or Update multiple PremPayment at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param prem_payment 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_prem_payment
  # Update PremPayment
  # Updates a specific PremPayment.
  # @param vbasoftware_database Target database
  # @param prem_payment_key PremPayment Key
  # @param prem_payment 
  # @param [Hash] opts the optional parameters
  # @return [PremPaymentVBAResponse]
  describe 'update_prem_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
