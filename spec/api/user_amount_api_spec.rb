=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::UserAmountApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserAmountApi' do
  before do
    # run before each test
    @api_instance = Vba::UserAmountApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserAmountApi' do
    it 'should create an instance of UserAmountApi' do
      expect(@api_instance).to be_instance_of(Vba::UserAmountApi)
    end
  end

  # unit tests for create_user_amount
  # Create UserAmount
  # Creates a new UserAmount
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_amount 
  # @param [Hash] opts the optional parameters
  # @return [UserAmountVBAResponse]
  describe 'create_user_amount test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_amount
  # Delete UserAmount
  # Deletes an UserAmount
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_amount_key UserAmount Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_amount test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_amount
  # Get UserAmount
  # Gets UserAmount
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_amount_key UserAmount Key
  # @param [Hash] opts the optional parameters
  # @return [UserAmountVBAResponse]
  describe 'get_user_amount test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_user_amounts
  # List UserAmount
  # Lists all UserAmount given a specific userID
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [UserAmountListVBAResponse]
  describe 'list_user_amounts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_user_amount
  # Create or Update Batch UserAmount
  # Create or Update multiple UserAmount at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_amount 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_user_amount test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_amount
  # Update UserAmount
  # Updates a specific UserAmount.
  # @param vbasoftware_database Target database
  # @param user_id User ID
  # @param user_amount_key UserAmount Key
  # @param user_amount 
  # @param [Hash] opts the optional parameters
  # @return [UserAmountVBAResponse]
  describe 'update_user_amount test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
