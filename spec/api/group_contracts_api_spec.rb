=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::GroupContractsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GroupContractsApi' do
  before do
    # run before each test
    @api_instance = Vba::GroupContractsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupContractsApi' do
    it 'should create an instance of GroupContractsApi' do
      expect(@api_instance).to be_instance_of(Vba::GroupContractsApi)
    end
  end

  # unit tests for add_next_group_contract
  # Add Next GroupContract
  # Adds the next GroupContract, starting the day after that existing contract. A VBAProcess object is returned representing the process state. See VBAProcess area for more information.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_add_contract 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'add_next_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for change_coverage_start_group_contract
  # Change GroupContract Coverage Start
  # Changes the Coverage Start for a contract. A VBAProcess object is returned representing the process state. See VBAProcess area for more information.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_change_coverage_start 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'change_coverage_start_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for copy_network_config_to_division
  # Copy GroupNetwork information
  # Take an existing configuration of GroupNetwork and copy that to any number of destination Divisions with the same Contract.
  # @param vbasoftware_database Target database
  # @param group_contract_copy_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'copy_network_config_to_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for copy_tier_config_to_division
  # Copy GroupContractTier information
  # Take an existing configuration of GroupContractTier and copy that to any number of destination Divisions with the same Contract.
  # @param vbasoftware_database Target database
  # @param group_contract_copy_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'copy_tier_config_to_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_group_contract
  # Create GroupContract
  # Creates a new GroupContract
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_contract 
  # @param [Hash] opts the optional parameters
  # @return [GroupContractVBAResponse]
  describe 'create_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_group_contract
  # Delete GroupContract
  # Deletes an GroupContract
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param coverage_start Coverage Start
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_group_contract
  # Get GroupContract
  # Gets GroupContract
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param coverage_start Coverage Start
  # @param [Hash] opts the optional parameters
  # @return [GroupContractVBAResponse]
  describe 'get_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_group_contract
  # List GroupContract
  # Lists all GroupContract for the given groupID and divisionID
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [GroupContractListVBAResponse]
  describe 'list_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_vba_group_contract
  # List VBA_GroupContract
  # Lists all VBA_GroupContract for the given groupID and divisionID
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param [Hash] opts the optional parameters
  # @return [VBAGroupContractListVBAResponse]
  describe 'list_vba_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_coverage_group_contract
  # Set GroupContract Coverage End
  # Changes the Coverage End for a contract. A VBAProcess object is returned representing the process state. See VBAProcess area for more information.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_contract 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessVBAResponse]
  describe 'set_coverage_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_group_contract
  # Create or Update Batch GroupContract
  # Create or Update multiple GroupContract at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param group_contract 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_group_contract
  # Update GroupContract
  # Updates a specific GroupContract.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param coverage_start Coverage Start
  # @param group_contract 
  # @param [Hash] opts the optional parameters
  # @return [GroupContractVBAResponse]
  describe 'update_group_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
