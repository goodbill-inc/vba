=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::CoverageTypesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CoverageTypesApi' do
  before do
    # run before each test
    @api_instance = Vba::CoverageTypesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CoverageTypesApi' do
    it 'should create an instance of CoverageTypesApi' do
      expect(@api_instance).to be_instance_of(Vba::CoverageTypesApi)
    end
  end

  # unit tests for create_coverage_type
  # Create CoverageType
  # Creates a new CoverageType
  # @param vbasoftware_database Target database
  # @param coverage_type 
  # @param [Hash] opts the optional parameters
  # @return [CoverageTypeVBAResponse]
  describe 'create_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_coverage_type
  # Delete CoverageType
  # Deletes an CoverageType
  # @param vbasoftware_database Target database
  # @param coverage_type Coverage Type
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_coverage_type
  # Get CoverageType
  # Gets CoverageType
  # @param vbasoftware_database Target database
  # @param coverage_type Coverage Type
  # @param [Hash] opts the optional parameters
  # @return [CoverageTypeVBAResponse]
  describe 'get_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_coverage_type
  # List CoverageType
  # Lists all CoverageType 
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @return [CoverageTypeListVBAResponse]
  describe 'list_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_coverage_type
  # Create or Update Batch CoverageType
  # Create or Update multiple CoverageType at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param coverage_type 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_coverage_type
  # Update CoverageType
  # Updates a specific CoverageType.
  # @param vbasoftware_database Target database
  # @param coverage_type Coverage Type
  # @param coverage_type2 
  # @param [Hash] opts the optional parameters
  # @return [CoverageTypeVBAResponse]
  describe 'update_coverage_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
