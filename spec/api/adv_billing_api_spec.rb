=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::AdvBillingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdvBillingApi' do
  before do
    # run before each test
    @api_instance = Vba::AdvBillingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdvBillingApi' do
    it 'should create an instance of AdvBillingApi' do
      expect(@api_instance).to be_instance_of(Vba::AdvBillingApi)
    end
  end

  # unit tests for add_prem_rate_from_template
  # Add Rate from Template
  # Create a new Premium Rate based on the selected Template Rate.
  # @param vbasoftware_database Target database
  # @param prem_rate_key PremRate Key
  # @param billing_add_rate_from_template_config 
  # @param [Hash] opts the optional parameters
  # @return [PremRateVBAResponse]
  describe 'add_prem_rate_from_template test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_apply_payment_category
  # Billing Apply Payment Category
  # Using the ListPremApplyPaymentCategory Operation to get a list of payments and additional configuration, have On Accout and PremPayment information updated.
  # @param vbasoftware_database Target database
  # @param billing_apply_payment_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_apply_payment_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_apply_payment_on_account_category
  # Billing Apply Payment On Account Category
  # Using the PremPaymentOnAccount List as a basis for configuration, have On Accout and PremPayment information updated.
  # @param vbasoftware_database Target database
  # @param billing_apply_payment_on_account_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_apply_payment_on_account_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_auto_apply
  # Billing Auto-Apply
  # Auto Apply Payment based on specified configuration options.
  # @param vbasoftware_database Target database
  # @param billing_auto_apply_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_auto_apply test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_rate_change
  # Change Premium Rates
  # Take a list of Rates and a set of configuration options and change those rates.
  # @param vbasoftware_database Target database
  # @param billing_rate_modify_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_rate_change test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_rate_copy
  # Copy Premium Rates
  # Take a list of Rates and a set of configuration options and copy those rates.
  # @param vbasoftware_database Target database
  # @param billing_rate_modify_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_rate_copy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for billing_refund
  # Billing Refund
  # Generate the necessary Billing adjustments for an Invoice refund and create a Distribution if needed.
  # @param vbasoftware_database Target database
  # @param billing_refund 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'billing_refund test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for finalize_invoice
  # Finalize Invoice
  # This will finalize the selected Invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'finalize_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for full_delete_invoice
  # Delete an Invoice with additional options
  # This process will delete an invoice and remove attached records, update or delete adjustments based on selected options.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param delete_additional_invoices Delete Additional Invoices
  # @param keep_manual_adjustments Keep Manual Adjustments
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'full_delete_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_distribution
  # Create Premium Distributions
  # Generate the Premium Distributions for the selected Group and As of Date.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param as_of_date As of Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_distribution test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_distribution_check
  # Create Premium Distributions Checks
  # Generate the Premium Distribution Checks for the selected Payor and Payee.
  # @param vbasoftware_database Target database
  # @param payee_id Payee ID
  # @param payor_id Payor ID
  # @param account_key Account Key
  # @param check_number Check Number
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_distribution_check test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_division
  # Generate Division Invoice
  # Creates a new Premium Billing Invoice for the selected Group/Division.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group
  # Generate Group Invoice
  # Creates a new Premium Billing Invoice for the selected Group.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group_division
  # Generate Group and Division Invoice
  # Creates a new Premium Billing Invoice the selected Group for any Division with the Group Invoice Level AND a separate Invoice for each Division flagged as Division Invoice Level.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_prem_invoice_group_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_group_division_captive
  # Generate GroupDivisionCaptive Invoice
  # Creates a new Premium Billing Invoice for the selected GroupDivisionCaptive.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_group_division_captive test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_self_admin_division
  # Generate Self-Admin Division Invoice
  # Creates a new Self-Admin Invoice for the selected Group/Division.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_self_admin_division test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_self_admin_group
  # Generate Self-Admin Group Invoice
  # Creates a new Self-Admin Invoice for the selected Group.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_self_admin_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_prem_invoice_subscriber
  # Generate Subscriber Invoice
  # Creates a new Premium Billing Invoice for the selected Subscriber.
  # @param vbasoftware_database Target database
  # @param generate_prem_invoice 
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceVBAResponse]
  describe 'generate_prem_invoice_subscriber test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_clear_applied
  # Clear Applied on Invoice
  # Clear Applied data on invoice.  Delete received records.  Update Received Amounts.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'invoice_clear_applied test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_disenroll_adjustment
  # List Billing Adjustments for Disenroll
  # List of Billing Adjustments that would be created based on a Subscriber being disenrolled on the As of Date.
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param as_of_date As of Date
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentDisenrollAdjustmentListVBAResponse]
  describe 'list_disenroll_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_apply_payment_category
  # List Premium for Payment Application
  # List Invoice Detail that can have premimum applied based on payment information and applied payment category.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param subscriber_id Subscriber ID
  # @param invoice_level Invoice Level
  # @param [Hash] opts the optional parameters
  # @return [PremApplyPaymentCategoryResultListVBAResponse]
  describe 'list_prem_apply_payment_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice_generate
  # List Invoices to be Generated
  # List of Invoices to be generated based on the selected Invoice Date.
  # @param vbasoftware_database Target database
  # @param invoice_date Invoice Date
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGenerateInvListListVBAResponse]
  describe 'list_prem_invoice_generate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_prem_invoice_generate_self_admin
  # List Self-Admin Invoices to be Generated
  # List of Self-Admin Invoices to be generated based on the selected Invoice Date.
  # @param vbasoftware_database Target database
  # @param invoice_date Invoice Date
  # @param [Hash] opts the optional parameters
  # @return [PremInvoiceGenerateSelfAdminInvListListVBAResponse]
  describe 'list_prem_invoice_generate_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_retro_adjustment
  # List Retro Adjustments
  # List Retro Adjustments based on a provided Group, Division, Subscriber, and Eff Date.
  # @param vbasoftware_database Target database
  # @param group_id Group ID
  # @param division_id Division ID
  # @param subscriber_id Subscriber ID
  # @param eff_date Effective Date
  # @param [Hash] opts the optional parameters
  # @return [GetTempRetroPremInvoiceAdjustmentsResultListVBAResponse]
  describe 'list_retro_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_subscriber_disenroll_adjustment
  # List Subscriber Disenroll Adjustments
  # List Disenroll Adjustments based on a provided Subscriber ID and As of Date (Disenroll Date).
  # @param vbasoftware_database Target database
  # @param subscriber_id Subscriber ID
  # @param eff_date Effective Date
  # @param show_closed Show Closed
  # @param [Hash] opts the optional parameters
  # @return [GetSubscriberDisenrollAdjustmentsResultListVBAResponse]
  describe 'list_subscriber_disenroll_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_header_adjustment
  # PremInvoice Apply Payments by Header Adjustment
  # PremInvoice Apply Payments by Header Adjustment
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_header_adjustment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_self_admin
  # PremInvoice Apply Payments for Self-Admin
  # PremInvoice Apply Payments for Self-Admin
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber
  # PremInvoice Apply Payments by Subscriber
  # PremInvoice Apply Payments by Subscriber
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber_payor_id
  # PremInvoice Apply Payments by Subscriber and Payor ID
  # PremInvoice Apply Payments by Subscriber and Payor ID
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber_payor_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_apply_payment_subscriber_plan_type
  # PremInvoice Apply Payments by Subscriber and Plan Type
  # PremInvoice Apply Payments by Subscriber and Plan Type
  # @param vbasoftware_database Target database
  # @param prem_invoice_apply_payment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_apply_payment_subscriber_plan_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_auto_apply
  # PremInvoice Auto-Apply
  # Auto-Apply all payements to the selected invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_auto_apply test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for prem_invoice_auto_apply_self_admin
  # PremInvoice Auto-Apply for Self-Admin
  # Auto-Apply all payements to the selected Self-Admin invoice.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'prem_invoice_auto_apply_self_admin test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for process_invoice_tolerance
  # Process or Check Invoice Tolerance
  # Given an Invoice and amount due, either check if an Invoice falls withing Tolerance range to performan a write-off, or go ahead and perform the write-off.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param amount_due Amount Due
  # @param verify_only Verify Only
  # @param [Hash] opts the optional parameters
  # @return [BooleanVBAResponse]
  describe 'process_invoice_tolerance test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for process_payment_file
  # Process Payment File
  # Import a defined Payment File in .csv format to then have payments created and, optionally, attached to invoices.
  # @param vbasoftware_database Target database
  # @param vba_process_payment_file 
  # @param [Hash] opts the optional parameters
  # @return [VBAProcessPaymentFileResponseVBAResponse]
  describe 'process_payment_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for regenerate_invoice
  # Regenerate Invoice
  # This will delete the invoice, remove attached adjustments, payments, etc. Then Regenerate the Invoice using the same Invoice Key.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'regenerate_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for report_series_process_generate_invoice
  # Generate Invoice Process Automation
  # This will trigger Generate Invoice Process Automation.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'report_series_process_generate_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reset_self_admin_invoice
  # Reset Self-Admin Invoice
  # Reset a Self-Admin Invoice removing received amounts, adjustments applied, etc.
  # @param vbasoftware_database Target database
  # @param invoice_key Invoice Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'reset_self_admin_invoice test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for undo_premium_payment
  # Undo an Applied Premium Payment
  # Based on the supplied PremPayment_Key, remove this payment from any invoice it is attached, and then recalc the received on each affected invoice.
  # @param vbasoftware_database Target database
  # @param prem_payment_key PremPayment Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'undo_premium_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
