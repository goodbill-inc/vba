=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Vba::FiltersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FiltersApi' do
  before do
    # run before each test
    @api_instance = Vba::FiltersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FiltersApi' do
    it 'should create an instance of FiltersApi' do
      expect(@api_instance).to be_instance_of(Vba::FiltersApi)
    end
  end

  # unit tests for create_filter
  # Create Filter
  # Creates a new Filter
  # @param vbasoftware_database Target database
  # @param filter 
  # @param [Hash] opts the optional parameters
  # @return [FilterVBAResponse]
  describe 'create_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_filter
  # Delete Filter
  # Deletes an Filter
  # @param vbasoftware_database Target database
  # @param filter_key Filter Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_filter
  # Get Filter
  # Gets Filter
  # @param vbasoftware_database Target database
  # @param filter_key Filter Key
  # @param [Hash] opts the optional parameters
  # @return [FilterVBAResponse]
  describe 'get_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_filter
  # List Filter
  # Lists all Filter
  # @param vbasoftware_database Target database
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page
  # @option opts [Integer] :page_size Page Size
  # @option opts [String] :sort_by Comma separated string to sort by. Each sort field can be followed by :asc or :desc to specify sort direction, ascending is default. E.g., &#39;Property1:desc,Property2:asc,Property3:asc&#39; sorts Property1 in descending order, Property2 in ascending, and Property3 in ascending.
  # @return [FilterListVBAResponse]
  describe 'list_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_batch_filter
  # Create or Update Batch Filter
  # Create or Update multiple Filter at once.  If the entity exists, it will be updated.  If the entity does not exist, it will be created.
  # @param vbasoftware_database Target database
  # @param filter 
  # @param [Hash] opts the optional parameters
  # @return [MultiCodeResponseListVBAResponse]
  describe 'update_batch_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_filter
  # Update Filter
  # Updates a specific Filter.
  # @param vbasoftware_database Target database
  # @param filter_key Filter Key
  # @param filter 
  # @param [Hash] opts the optional parameters
  # @return [FilterVBAResponse]
  describe 'update_filter test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
