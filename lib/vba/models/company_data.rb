=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'date'
require 'time'

module Vba
  class CompanyData
    # This value is always 1 and there can only be a single record in the CompanyData table. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :key_value

    # Default APC Schedule to be used
    attr_accessor :ap_c_schedule

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :as_o_percentage

    # When a Diagnosis Code is marked as an Accident, or a Plan Benefit is marked as an accident and the Diagnosis Code is not marked as an accident, trigger this Ex Code
    attr_accessor :accident_review_ex_code

    # When a Plan Benefit is marked as an accident and the Diagnosis Code is not marked as an accident, trigger this Ex Code
    attr_accessor :accident_review_plan_benefit_ex_code

    # No longer used in the system Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :additional_invoice_rates

    # Address of the Company.
    attr_accessor :address

    # Line 2 of the Client's address.
    attr_accessor :address2

    # Requires passwords to have 3 of the following: Uppercase Letter, Lowercase Letter, Number, Special Character Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :adv_password_req

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :age_disenroll_reason

    # Whether or not the Apostrophe is allowed in Provider or Member names Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :allow_apostrophe_in_name

    # This option will allow for post dated checks. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :allow_checks_post_date

    # Allows Benefit Override Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :allow_claim_benefit_override

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :allow_max_at_subscriber

    # When selected, OOP will be calculated even when overridden Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :allow_oop_on_override

    # This options allows claims to be process with a '0.00' billed amount.
    attr_accessor :allow_zero_billed

    # When selected, use the matching under Anesthesia for Fee Schedules when an Anastesia Procedure Code/Modifier is present. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :anesthesia_by_fee_sched

    # The precision of rounding used for Anesthesia Units Note: The database will apply a default value of `0` for this field if a value is not provided.
    attr_accessor :anesthesia_round_precision

    # The type of rounding used for Anesthesia Units
    attr_accessor :anesthesia_round_type

    # If Ex Code is set and all benefits match, set to the first benefit code and set the Ex Code.  If Apply_Multiple_Benefit_ExCode_Manual is set to 1 (checked) then the ex code is applied as a Manual ex code, which is not cleared on future adjudications and requires a client to manually clear it Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :apply_multiple_benefit_ex_code_manual

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :auth_review_full_path

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :auth_review_object

    # If after processing a claim, there are no more remaining units left for an Auth that was used on the claim, set the Auth Code on the Auth to this Code
    attr_accessor :auth_code_closed

    # When a claim with an auth has a payable amount of zero
    attr_accessor :auth_code_pay_amt_zero

    # If after returning a claim to batch, if there are remaining units left for an Auth that was used on the claim, set the Auth Code on the Auth to this Code
    attr_accessor :auth_code_reopen

    # When a claim with an auth has a payable amount under the approved amount on the auth
    attr_accessor :auth_code_under_auth_amt

    # Ex Code to use when spliting Authorizations
    attr_accessor :auth_over_unit_split_ex_code

    # If filled out and an Auth Penalty is found, insert the Ex Code
    attr_accessor :auth_penalty_ex_code

    # This flag indicates claims being returned to batch will be automatically adjudicated. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :auto_adj_return_to_batch

    # Auto pays Capitated claims and Creates a Check Batch Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :auto_pay_capitated_claims

    # Whether or not to automatically process the Backout of a claim after an adjustment Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :auto_process_adjustment_backout

    # This is a flag indicating that when a Gateway request for coverage is confirmed, if the member has an existing plan of the same plan type, it will be termed. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :auto_term_plan_on_gateway_request

    # For Bold Reports integration, this identifies the Domain Name.  Used only by VBA developers, not for client use.
    attr_accessor :b_r_domain_name

    # For Bold Reports integration, this identifies the Site Name. Used only by VBA developers, not for client use.
    attr_accessor :b_r_site_name

    # For Bold Reports integration, this identifies the Site Secret. Used only by VBA developers, not for client use.
    attr_accessor :b_r_site_secret

    # For Bold Reports integration, this identifies the Site User. Used only by VBA developers, not for client use.
    attr_accessor :b_r_site_user

    # Whether or not BaseLoad is turned on
    attr_accessor :base_load_fg

    # BaseLoad Password
    attr_accessor :base_load_pass

    # This flag denotes whether or not to include the Service Date within the BaseLoad XML sent to BaseLoad Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :base_load_service_date_flag

    # BaseLoad URL
    attr_accessor :base_load_url

    # BaseLoad User ID
    attr_accessor :base_load_user

    # Minimum Age for a Beneficiary
    attr_accessor :beneficiary_age_limit

    # This pend code will be applied when the beneficiary age defined on the enrollment is invalid.
    attr_accessor :beneficiary_age_ex_code

    # This Informational Ex Code will be applied to a claim detail line when the benefit is defined as cascading in the plan and the necessary criteria have been met to cascade the benefits.
    attr_accessor :benefit_cascade_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :benefit_length

    # This pend code will be applied when the tooth number on the claim is found to have been previously bridged.
    attr_accessor :bridged_tooth_ex_code

    # This flag indicates that the adjudication benefit matching will use custom logic for CAS assignments from inbound 837 files.  This option is set and controlled by VBA developers and not for client use. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :ca_s_segment_ben_match

    # This Denial Ex Code will deny a claim when a CLIA certificate is required and the provider record does not have CLIA certification.
    attr_accessor :cli_a_certificate_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :cm_o_installed

    # Claim will error if number of the Claim has Mixed Capitation Service Lines unless this is checked. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :cap_by_service_line

    # Default Capitation Disenroll Adjustment reason
    attr_accessor :cap_disenroll_adj_reason

    # Default Capitation Enroll Adjustment reason
    attr_accessor :cap_enroll_adj_reason

    # This setting defines the Enrollment date the application uses for Calculating a Capitated Providers payment.
    attr_accessor :cap_enrolled_by

    # This setting defines the Enrollment date the application uses for Calculating a Capitated Providers payment.
    attr_accessor :cap_enrolled_thru

    # Not used in system configuration. Used on external and/or custom procedures. Note: The database will apply a default value of `False` for this field if a value is not provided.
    attr_accessor :cap_in_accum

    # This Informational Ex Code will be applied to a claim detail line when services are Capitated.
    attr_accessor :capitated_service_ex_code

    # The Default Case Report when using the Case Report functionality from Case Update Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :case_default_report

    # Default Issue Duratoin Value for Cash Type
    attr_accessor :cash_value_default

    # When selected, if the payee address is not filled out, error the claim Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :check_payee_address_flag

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :check_stock_location

    # Adds an error during the Check Wizard if the Check Date exceeds the threshold set here
    attr_accessor :checks_max_post_date

    # City of the Company's address.
    attr_accessor :city

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_upload_date

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_upload_file_location

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_upload_schedule

    # This Denial Ex Code will deny a claim in which the age definitions of the plan are exceeded.
    attr_accessor :claim_age_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_allowed_billed_ex_code

    # This pend code will be applied when the claim billed amount exceeds the user max defined on the user information.
    attr_accessor :claim_amt_ex_code

    # If Filled out and an Auth Status is Denied, insert the Ex Code
    attr_accessor :claim_auth_denied_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_auth_details_err_ex

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_auth_diff_mem_ex

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_auth_diff_prov_ex

    # If Filled out and the Auth has exceeded the Approved, insert the Ex Code
    attr_accessor :claim_auth_exceeded_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_auth_invalid_date_ex

    # If Filled out and an Auth status is Not Approved, insert the Ex Code
    attr_accessor :claim_auth_not_approved_ex

    # If filled out and the number of Approved Procedure Units is exceeded, insert the Ex Code
    attr_accessor :claim_auth_proc_exceeded_ex_code

    # If filled out and an Auth is required, insert the Ex Code
    attr_accessor :claim_auth_reqd_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_ben_not_found_ex_code

    # Checking this indicates the Benefit is covered only when services are rendered using an In-Network provider.
    attr_accessor :claim_cov_in_net_only_ex_code

    # Number of claim days allowed.
    attr_accessor :claim_days_allowed

    # This Denial Ex Code will deny a claim for a member whose enrollment record indicates they are deceased.
    attr_accessor :claim_dead_ex_code

    # This Ex Code is used when Deductible Credit is used for the claim Out of Network
    attr_accessor :claim_ded_credit_oon_used_ex_code

    # This Ex Code is used when Deductible Credit is used for the claim in Network
    attr_accessor :claim_ded_credit_ppo_used_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_denied_ex_code

    # This Ex Code is used when the Age is outside the range for the Diagnosis
    attr_accessor :claim_diagnosis_age_ex_code

    # This Ex Code is used when the Gender is not a valid Gender for the Diagnosis
    attr_accessor :claim_diagnosis_gender_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_dup_error_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_error_ex_code

    # if the CoPay has been adjusted due to previous CoPay amounts, Trigger this Ex Code
    attr_accessor :claim_exceed_daily_co_pay_max_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_exceed_injury_ex_code

    # This Ex Code is used when the claim exceeds a Lifetime Max Payable
    attr_accessor :claim_exceed_lifetime_ex_code

    # This Ex Code is used when the Lifetime Max Payable Out of Network has been exceeded
    attr_accessor :claim_exceed_lifetime_oon_ex_code

    # This Ex Code is used when the Lifetime Max Payable In Network has been exceeded
    attr_accessor :claim_exceed_lifetime_ppo_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_exceed_maximum_ex_code

    # This Informational Ex Code will be applied to a claim when the Per-Diem amount defined on the provider record has been exceeded.
    attr_accessor :claim_exceed_per_diem_ex_code

    # This pend code will be applied to a claim when the provider record indicates a fee schedule is required but no fee schedule is assigned to the provider.
    attr_accessor :claim_fee_sched_error_ex

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_lag_error_ex_code

    # This Denial Ex Code will deny a claim that exceeds the timely filing limits set.
    attr_accessor :claim_late_ex_code

    # This Ex Code is used when the Life Claim exceeds the Benefits Maximum
    attr_accessor :claim_life_benefit_met_ex_code

    # This Ex Code is used when the Life Claim exceeds the Plan Maximum
    attr_accessor :claim_life_plan_met_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_no_prov_fee_sched

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_no_rate_fee_ex_code

    # This pend code will be applied to a claim when the date of service exceeds the date on the enrollment record for dependent coverage.
    attr_accessor :claim_not_adult_dependent

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_not_at_place_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :claim_not_by_prov_ex_code

    # This Denial Ex Code will deny a non-covered claim.
    attr_accessor :claim_not_cov_ex_code

    # This Denial Ex Code will deny a claim that comes in for a member that is not enrolled for the date of service.
    attr_accessor :claim_not_enrolled_ex_code

    # When selected, instead of using the Not Enrolled Ex Code, put the Pre and Post Enrolled Ex Codes instead Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :claim_not_enrolled_ex_code_null_use_pre_post

    # This Denial Ex Code will deny a claim if services are after the enrollment date.
    attr_accessor :claim_not_enrolled_post_ex_code

    # This Denial Ex Code will deny a claim if services are prior to the enrollment date.
    attr_accessor :claim_not_enrolled_pre_ex_code

    # This pend code will be applied to a claim when the date of service exceeds the date on the enrollment record for student coverage.
    attr_accessor :claim_not_student_ex_code

    # This Ex Code is used when the Authorization has Other Coverage Primary selected
    attr_accessor :claim_other_coverage_ex_code

    # This Ex Code is used when the claim exceeds an Annual Max Payable
    attr_accessor :claim_over_max_ex_code

    # This Ex Code is used when the Annual Max Payable Out of Network has been exceeded
    attr_accessor :claim_over_max_oon_ex_code

    # This Ex Code is used when the Annual Max Payable In Network has been exceeded
    attr_accessor :claim_over_max_ppo_ex_code

    # Trigger the Claim Age Ex Code when the Age of the Patient is above this value
    attr_accessor :claim_pend_age_max

    # Trigger the Claim Age Ex Code when the Age of the Patient is below this value
    attr_accessor :claim_pend_age_min

    # Trigger the Claim Amt Ex Code when the Claim Payable exceeds this amount
    attr_accessor :claim_pend_amount

    # This Denial Ex Code will deny a claim when the procedure code/diagnosis code is defined for a specific age.
    attr_accessor :claim_procedure_age_ex_code

    # This Denial Ex Code will deny a claim when the procedure code/diagnosis code is defined for a specific gender.
    attr_accessor :claim_procedure_gender_ex_code

    # If outside the payable date range (this value represents days ahead from date of adjudication), error
    attr_accessor :claim_service_date_range

    # When a Service Thru date happens outside the normal plan end date
    attr_accessor :claim_service_outside_enrollment_ex_code

    # This Ex Code is used when multiple Plan Years found
    attr_accessor :claim_splits_plan_year_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :class_length

    # A flag indicating that any Auth Penalty Ex Code will be removed from a claim line if it has an auth associated. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :clear_auth_penalty_ex_code

    # Client's 3 character ID
    attr_accessor :client_id

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :client_name

    # This Informational Ex Code will be applied to a claim when the Subscriber level Coinsurance has been met for the family. An Info code must be applied as a claim detail line may have a partial denial. A deny code will deny the entire line.
    attr_accessor :co_ins_max_ex_code

    # This Informational Ex Code will be applied to a claim when the Member Coinsurance has been satisfied. An Info code must be applied as a claim detail line may have a partial denial. A Deny code would deny the entire detail line.
    attr_accessor :co_ins_max_ex_code_member

    # Co-Pay based on Billed Amount rather than Plan_Price Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :co_pay_by_billed

    # The app client ID associated with the user pool.  Exclusively for use in VBASoftware and VBAPI Cognito integration with AWS.
    attr_accessor :cogito_app_client_id

    # The app client Secret associated with the user pool. Exclusively for use in VBASoftware and VBAPI Cognito integration with AWS.
    attr_accessor :cogito_app_client_secret

    # The ID of the Amazon Cognito user pool.  Exclusively for use in VBASoftware and VBAPI Cognito integration with AWS.
    attr_accessor :cogito_user_pool_id

    # When this flag is set to yes, the notes report from the Notes screen will remove the page breaks Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :combined_notes_report_fg

    # Default Commisssion Disenroll Adjustment Reason
    attr_accessor :comm_disenroll_adj_reason

    # Default Commisssion Enroll Adjustment Reason
    attr_accessor :comm_enroll_adj_reason

    # Default Commisssion Enrolled By value
    attr_accessor :comm_enrolled_by

    # Default Commisssion Enrolled Thru value
    attr_accessor :comm_enrolled_thru

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :company_length

    # Client ID of the Client
    attr_accessor :company_short

    # The date used to avoid using data prior to the date the company starts with VBA.
    attr_accessor :company_start_date

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_clm_ucr_pct

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_clm_ucr_pct_oon

    # The type of Fee for Context4 Pricing
    attr_accessor :context4_fee_selector

    # The type of Fee for Context4 Pricing when OON
    attr_accessor :context4_fee_selector_oon

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_medicare_pct

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_medicare_pct_oon

    # The Password for Context4 Pricing
    attr_accessor :context4_password

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_payor_type

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_payor_type_oon

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_pct_of_chg

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :context4_pct_of_chg_oon

    # When set, if Plan Price exceeds Billed Price, set Plan Price equal to Billed Price for Context4 Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :context4_plan_price_not_greater_billed_fg

    # Whether or not the Billing Address information is sent to Context4 Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :context4_send_billing_address_fg

    # The User ID for Context4 Pricing
    attr_accessor :context4_user_id

    # The WebURI for Context4 Pricing
    attr_accessor :context4_web_uri

    # The Delete WebURI for Context4 Pricing
    attr_accessor :context4_web_uri_delete

    # The Ex Code to apply when adjudicating a claim that has a copay greater than zero.
    attr_accessor :copay_ex_code

    # Default Country
    attr_accessor :country_id

    # Flag to create a row in office location of the provider's practice with data from the corresponding payee record instead of provider. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :credential_by_payee

    # When selected, turn on Credentialing
    attr_accessor :credentialing

    # This pend code will be applied when the tooth number on the claim is found to have been previously crowned.
    attr_accessor :crowned_tooth_ex_code

    # Used for currency format when saving to Excel in Formatted
    attr_accessor :currency_format

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :d_b_version_date

    # Selection this option will set the default DRG schedule.
    attr_accessor :dr_g_schedule

    # Stores the latest Release Version
    attr_accessor :database_version

    # Date format used when saving reports as formatted Excel
    attr_accessor :date_format

    # The Ex Code to apply when adjudicating a claim that has a deductible greater than zero.
    attr_accessor :deductible_ex_code

    # This Informational Ex Code will be applied to a claim when the Subscriber level deductible has been met for the family. An Info code must be applied as a claim detail line may have a partial denial. A deny code will deny the entire line.
    attr_accessor :deductible_max_ex_code

    # This Informational Ex Code will be applied to a claim when the Member Deductible has been satisfied. An Info code must be applied as a claim detail line may have a partial denial. A Deny code would deny the entire detail line.
    attr_accessor :deductible_max_ex_code_member

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :default_1099_flag

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :default_auth_code

    # Defines the default check stock.
    attr_accessor :default_check_stock

    # Default Currency to be used
    attr_accessor :default_currency_id

    # Defines the default EOB report.
    attr_accessor :default_eob_report

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :default_federal_tax

    # Default limit to when Federal Tax applies
    attr_accessor :default_federal_tax_day_limit

    # The default Federal Tax percentage
    attr_accessor :default_federal_tax_pct

    # Default limit to the amount of wages that can be used to calculate Federal Tax
    attr_accessor :default_federal_wage_limit

    # Indicates the desired default format for generated IDs.
    attr_accessor :default_id_card_request_type

    # A part of invoice Process Automation
    attr_accessor :default_invoice_report_definition_key

    # Sets the default login sound.
    attr_accessor :default_login_sound

    # Default limit to when Medicare Tax applies
    attr_accessor :default_medicare_tax_day_limit

    # Default limit to the amount of wages that can be used to calculate Medicare Tax
    attr_accessor :default_medicare_wage_limit

    # Used to calculate the Check Paid Date
    attr_accessor :default_pay_date_range

    # Payor ID that is defaulted to.
    attr_accessor :default_payor_id

    # Default limit to when Social Security Tax applies
    attr_accessor :default_ss_tax_day_limit

    # Default limit to the amount of wages that can be used to calculate Social Security Tax
    attr_accessor :default_ss_wage_limit

    # Default limit to when State Tax applies
    attr_accessor :default_state_tax_day_limit

    # Default limit to the amount of wages that can be used to calculate State Tax
    attr_accessor :default_state_wage_limit

    # Holds the selected setting for ATP Paid Date on Dental Claims (Standard or by Processed Date)
    attr_accessor :dental_atp_paid_date_type

    # Default Diagnostic Code Type for Disability and Life claims Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :diagnostic_code_type_default

    # This flag disallows special characters to be used in the Plan ID column. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :disallow_spec_char_in_plan_id

    # This is a flag indicating that when viewing notes from Call Tracking, provider and claim notes associated with the call record will not be displayed. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :disconnect_call_notes_from_claim_provider

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :disenroll_adj_reason

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :disenroll_auth_code

    # When selected, if the claim is Out of Network, show zero dollars in the PPO Discount Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :display_ppo_null_network

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :division_length

    # Sets the number of days before a password may be duplicated (reused).
    attr_accessor :dup_password_days

    # Choose the applicable duplicate rule for the application. See Duplicate Sets in Claim Services > Claim Configuration to maintain the Duplicate Rule options.
    attr_accessor :duplicate_master_key

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :ed_i_installed

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :eo_b_disclaimer

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :eo_b_report_location

    # Choose the applicable place of service for emergency room services.
    attr_accessor :e_r_place_of_service

    # Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :enforce_mfa

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :enroll_adj_reason

    # Date when the record was added to the system.
    attr_accessor :entry_date

    # User that first added the record to the system.
    attr_accessor :entry_user

    # Checking this box will cause claims to error if an invalid Diagnosis Code is billed. Left unchecked with a deny Ex Code selected the line item will automatically deny. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :error_invalid_diag

    # Checking this box will cause claims to error if an invalid Procedure Code is billed. Left unchecked with a deny Ex Code selected the line item will automatically deny. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :error_invalid_proc

    # When selected, if there are multiple Plan Years found, error instead of triggering Claim Splits Plan Year Ex Code Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :error_multiple_plan_years

    # If selected and there's no Payee assigned to the Provider, set Send_Check_To Provider Note: The database will apply a default value of `False` for this field if a value is not provided.
    attr_accessor :error_paid_to_provider

    # Checking this box will cause claims to error if a Termed Provider is selected. Left unchecked with a deny Ex Code selected the claim will automatically deny. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :error_termed_provider

    # This Ex Code is used when the Service Date exceeds the Exhause Date on a Disability Claim
    attr_accessor :exceed_exhaust_date_ex_code

    # This pend code will be applied when the claim date of service exceeds the date defined as the return to work day on the disability claim.
    attr_accessor :exceed_return_to_work_ex_code

    # This pend code will be applied when the claim date of service exceeds the paid through date defined on the member record.
    attr_accessor :exceeds_paid_through_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :extended_term_default

    # Country Code for the fax number of the Subscriber.
    attr_accessor :fax_country_code

    # Fax number of the Client.
    attr_accessor :fax_number

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :federal_id

    # No longer used in the system Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :fee_sched_match_claim_year

    # When this is checked, Fee Schedule Ex Codes from the FeeSched and FeeSchedDetail tables will be added as MANUAL ex codes.  This means adjudication will not wipe these away at the start of adjudication. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :fee_schedule_ex_codes_manual

    # Whether or not the Modifiers of a Fee Schedule have to match exact Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :fee_schedule_exact_match_fg

    # Ex Code to set when the member has Filled a Tooth
    attr_accessor :filled_tooth_ex_code

    # Ex code that is added when a benefit code is automatically selected on a claim detail where multiple benefit codes all match with equivalent payment details
    attr_accessor :first_benefit_auto_selected_ex_code

    # This Ex Code is used when a Flex Claim is submitted after the Grace period
    attr_accessor :flex_claim_after_grace_period_ex_code

    # This Ex Code is used when a Flex Claim is submitted after the Submission period
    attr_accessor :flex_claim_after_submit_period_ex_code

    # This Ex Code is used when the Flex Claim has exceeded the balance
    attr_accessor :flex_claim_funds_exhausted_ex_code

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :force_call_track_note

    # If selected, the claim must have a Received_Date,             ELSE it will Error Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :force_claim_rec_date

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :force_claim_sub_id

    # Use Latest Enrollment Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :force_latest_enrollment

    # If selected and the procedure code is only 3 length, add a zero to verify the procedure code Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :force_leading_zero_on_rev_code

    # When selected, Add all the backout Distribution records when voiding a check Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :full_backout_on_void_distribution

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :full_month_billing

    # Used to stop other users from generating invoices while another user is generating commissions.
    attr_accessor :generate_comm_date

    # Used to stop other users from generating invoices while another user is generating commissions.
    attr_accessor :generate_comm_user

    # Used to stop other users from generating invoices while another user is generating invoices
    attr_accessor :generate_inv_date

    # Used to stop other users from generating invoices while another user is generating invoices
    attr_accessor :generate_inv_user

    # Check this checkbox to allow for a negative invoice to create. This will also allow a $0 invoice to create. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :generate_negative_inv

    # When Generating Invoices, look for distributions after this date
    attr_accessor :generate_prem_dist_after

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :global_cmu_id

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :grace_logins

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :group_length

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :i_d_card_location

    # Country Code for IVR or Customer Service number.
    attr_accessor :iv_r_cs_country_code

    # IVR or Customer Service number of the Client.
    attr_accessor :iv_r_cs_phone_number

    # Overrides Case Manager Hierarchy and allows the assigning of cases up or down Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :ignore_care_management_hierarchy_fg

    # This is a flag indicating that when changing a claims status in Claim Funding, no message will display warning the user of the existing status. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :ignore_claim_funding_status_change_msg

    # When a claim has a Provider using a Payee that is marked as inactive
    attr_accessor :inactive_payee_ex_code

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :include_invalid_enrollments

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :inv_grace_period

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :inv_grace_period_type

    # This Ex Code is used when the Diagnosis Code is invalid
    attr_accessor :invalid_diag_ex_code

    # This Ex Code is used when the Procedure Code is invalid
    attr_accessor :invalid_proc_ex_code

    # Default reason for Invoice Closed
    attr_accessor :invoice_close_adj_reason

    # Date used when configuring Enrolled By Date for Invoices Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :invoice_enrolled_by

    # Date used when configuring Enrolled Thru Date for Invoices
    attr_accessor :invoice_enrolled_thru

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :invoice_grace_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :invoice_grace_period

    # Default Invoice Remit Account
    attr_accessor :invoice_remit_account_key

    # Default Invoice Remit Address
    attr_accessor :invoice_remit_address1

    # Default Invoice Remit Address2
    attr_accessor :invoice_remit_address2

    # Default Invoice Remit City
    attr_accessor :invoice_remit_city

    # Default Invoice Remit Country Code
    attr_accessor :invoice_remit_country_code

    # Default Invoice Remit Country
    attr_accessor :invoice_remit_country_id

    # Default Invoice Remit Name
    attr_accessor :invoice_remit_name

    # Default Invoice Remit Phone Number
    attr_accessor :invoice_remit_phone_number

    # Default Invoice Remit State
    attr_accessor :invoice_remit_state

    # Default Invoice Remit Zip Code
    attr_accessor :invoice_remit_zip_code

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :lag_time

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_age_disenroll

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_authorization

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_billing

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_case_number

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_check_batch

    # Used to determine the next Claim Number
    attr_accessor :last_claim_number

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_day_worked_range

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :last_encounter

    # Filled out after an Invoice is generated, likely used for reporting or as a reference
    attr_accessor :last_invoice

    # If selected, only the user that created the Auth Review can update the Auth Review Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :lock_auth_review

    # When this is checked, Auth Reviews cannot be updated or modified by anyone.  They can still be added. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :lock_auth_review_all

    # Flag that enables the logging of calls to Baseload for provider information Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :log_base_load_call

    # Stores the file location for logos.
    attr_accessor :logo_file

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :long_state_names

    # Client's e-mail server AuthMode (Not sure, just passed in as general settings)
    attr_accessor :mail_auth_mode

    # Client's e-mail server Password
    attr_accessor :mail_password

    # Client's e-mail server Port
    attr_accessor :mail_port

    # Client's e-mail server
    attr_accessor :mail_server

    # Client's e-mail server SSL setting Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :mail_use_ssl

    # Client's e-mail server User Name
    attr_accessor :mail_user

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :medicare_on_benefit

    # This flag indicates if a full address and date of birth are not required when creating a new member Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :member_address_dob_not_reqd

    # When selected, adjudication will attempt to match a patient on their First Name, Last Name and Birth Date Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :member_match_by_name_birth_date

    # This Denial Ex Code will deny a claim when the modifier entered is not listed as active on the modifier table.
    attr_accessor :modifier_not_eff_ex_code

    # If filled out and there are multiple Auths that are valid, insert the Ex Code
    attr_accessor :multiple_auth_ex_code

    # Name of the Company.
    attr_accessor :name

    # When the Network ID on the claim does not match what the system would have selected, throw this ex code
    attr_accessor :network_does_not_match_repriced_network_ex_code

    # Reason for the new Member.
    attr_accessor :new_member_reason

    # If selected, Note Attachments will be saved to the Database instead of in a local file location Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :note_attachment_db

    # Indicates the local location for note attachments. When a note attachment is opened, it will make a copy from the remote location to the local location before opening the file.
    attr_accessor :note_attachment_local_default

    # Indicates the remote location where note attachments will be saved. A network location should be populated at this location.
    attr_accessor :note_attachment_remote_default

    # This Ex Code is used when the claim exceeds the OOP Maximum
    attr_accessor :oo_p_max_ex_code

    # This Informational Ex Code will be applied to a claim when the Member level out of pocket has been exceeded.
    attr_accessor :oo_p_max_ex_code_member

    # This Informational Ex Code will be applied to all claims processed as out of network.
    attr_accessor :out_of_net_ex_code

    # Override's the default Deduction Type of 502
    attr_accessor :overpayment_deduction_type

    # This Ex Code is used when a Benefit is marked PCP Only and the Member does not have a valid PCP
    attr_accessor :pc_p_only_ex_code

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :partial_cap

    # Sets the number of days before password expiration.
    attr_accessor :password_expiration

    # Sets the minimum length required for application passwords.
    attr_accessor :password_minimum

    # This date is used to calculate the Bill From and Bill Thru dates for invoices using the Calendar Payroll type of Billing Cycle.
    attr_accessor :pay_period_start_date

    # Whether or not invoices will be prorated Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :payment_proration

    # Country Code for the phone number of the Subscriber.
    attr_accessor :phone_country_code

    # Phone format used when saving reports as formatted Excel
    attr_accessor :phone_format

    # Phone number of the Client.
    attr_accessor :phone_number

    # This Ex Code is used when a Place Code is not valid for an Auth, Benefit, Co Ins or Co Pay
    attr_accessor :place_code_not_setup_ex_code

    # When Always Pay In Network is checked, if this is filled out and the claim is currently out of network, change the Network ID to this value.
    attr_accessor :plan_benefit_override_network_id

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :plan_length

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :policy_forfeiture_grace_period

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :policy_forfeiture_grace_period_type

    # This flag denotes whether or not Premiums will be prorated when a Member Disenrolls Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :premium_proration

    # Flag to prevent the same user that processed a claim from releasing it from Claim Suspended status. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :prevent_suspense_release_by_process_user

    # This defines the primary bank account.
    attr_accessor :primary_account_key

    # When this flag is set to yes, adjudication will process Auths on Pended claims. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :process_auths_when_pended

    # Identifies that the check run process will now create Auto-COB claims if the Secondary member information is configured on a MemberInsruance record. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :process_auto_cob

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :processing_mode

    # Holds the selected setting for ATP Paid Date on Professional Claims (Standard or by Processed Date)
    attr_accessor :prof_atp_paid_date_type

    # Ex Code to set when the member has used a Prosthesis Tooth
    attr_accessor :prosthesis_tooth_ex_code

    # This flag indicates the alternate ID on the member update screen cannot be changed Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :protect_alternate_id

    # If a provider is exempt from Authorizations, throw this ex code
    attr_accessor :provider_auth_exempt_procedure_ex_code

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :provider_not_active_auth_code

    # This pend code will be applied when the tooth number on the claim is found to have been previously pulled.
    attr_accessor :pulled_tooth_ex_code

    # Ex Code to be applied to claims that use QPA Method 1
    attr_accessor :qp_a_method_1_ex_code

    # Ex Code to be applied to claims that use QPA Method 2
    attr_accessor :qp_a_method_2_ex_code

    # Default value for an RX Claim's Paid Date: Service Date, Fill Date or Prescription Date
    attr_accessor :r_x_atp_paid_date_type

    # Default Issue Duratoin Value for RPU Type
    attr_accessor :reduced_paid_up_default

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :reins_split_claim

    # If set to yes, bring up the list of Repetitive Payments on a timer
    attr_accessor :repetitive_payment

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :repriced_line

    # If checked, when the user updates a member record, prompt the user if they want to request a new ID Card. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :request_id_card_prompt_enrollment

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :request_provider_email

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :request_reassess_email

    # This flag indicates the NPI and Federal ID fields on a Provider record have length restrictions of 10/9 characters respectively Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :restrict_npi_federal_id

    # Defined Return to Work Range for a disability claim
    attr_accessor :return_to_work_range

    # Indicates the file location where scanned images are kept.
    attr_accessor :scanned_images_folder

    # If selected, set the Paid Through Date once an invoice is closed Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :set_paid_through

    # If selected put all refunds into the same Check Batch Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :single_refund_check_batch

    # State of the Company's address.
    attr_accessor :state

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :subscriber_id_format

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :subscriber_length

    # Enter the time, in seconds, that will be allowed to elapse before the application closes.
    attr_accessor :system_idle

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :tax_control_location

    # Whether Tax is calculated on date of adjudication or Service Date of claim Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :tax_on_adjudcation_date_fg

    # How many rows in the criteria table to temporarily save
    attr_accessor :temporary_save_criteria_count

    # This Ex Code is used when the Provider's Term Date is before the Service Date
    attr_accessor :termed_provider_ex_code

    # Country Code for the toll free phone number of the Client.
    attr_accessor :toll_free_country_code

    # Toll free phone number of the Client.
    attr_accessor :toll_free_phone_number

    # This pend code will be applied when the tooth number on the claim is found to have previous tooth activity.
    attr_accessor :tooth_activity_ex_code

    # Choose the applicable tooth chart for the application.
    attr_accessor :tooth_chart_type

    # Holds the selected setting for ATP Paid Date on Institutional Claims (Standard or by Processed Date)
    attr_accessor :u_b92_atp_paid_date_type

    # This Ex Code is used when Usual and Customary is used.
    attr_accessor :u_c_price_used_ex_code

    # Whether or not the Plan Price is multiplied by number of units for Usual and Customary Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :u_c_unit_mulitply

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :unassigned_provider

    # Date when the record was last updated in the system.
    attr_accessor :update_date

    # User that last updated the record in the system.
    attr_accessor :update_user

    # Whether or not to validate User Amount Limits for Payable or Total Payable Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_greater_user_amount_limit_fg

    # Whether or not to split Authorizations Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_auth_over_unit_split

    # No longer used in the system Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_change_data_capture

    # Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_commission_cluster_hierarchy

    # Whether or not to use the Default Currency Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_currency

    # When selected, Disability Claims will be verified to be within the payable date range and if not, the claim will not process. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_disability_from_date

    # Fills out NoteReference among other things for Notes Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_expanded_notes

    # Use first Fee Schedule match found Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_first_match_pricing

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :use_other_name

    # If selected, during Age Restrictions, only look at the left most Diag Pointer on a Claim Line Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_primary_diag_match

    # When determining Include Excludes for Capitation Diagnosis Codes, if set to yes, only look at the first pointer. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_primary_diag_match_capitation

    # Not used in system configuration. Used on external and/or custom procedures. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_salary

    # Whether or not to use the Tax Control object rather than adjudication Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_tax_control

    # Notes that this client is no longer utilizing Legacy VBASoftware. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_vba_software_2

    # This is a flag indicating if this database (client) is utilizing new serverless adjudication.  This flag will drive old adjudication to not pickup claims for example, or tell VBASoftware that the \"Adjudicate\" button on claims goes a different route. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_vb_adjudicate_2

    # Whether or not Zip Code with auto poulate city/state based on Zip Code Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :use_zip_code_auto_populate

    # Whether or not VBADataintegration is on or not Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vba_data_integration

    # DBMS setup information for VBA Data Integration
    attr_accessor :vba_data_integration_dbms

    # DBMS setup information for VBA Data Integration
    attr_accessor :vba_data_integration_db_parm

    # Database setup information for VBA Data Integration
    attr_accessor :vba_data_integration_database

    # Server setup information for VBA Data Integration
    attr_accessor :vba_data_integration_server

    # Whether or not this is a Gateway client Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vba_gateway

    # Gateway's DBMS
    attr_accessor :vba_gateway_dbms

    # Gateway's Database Parameters
    attr_accessor :vba_gateway_db_parm

    # Gateway's Database
    attr_accessor :vba_gateway_database

    # Gateway's SFTP Host
    attr_accessor :vba_gateway_sftp_host

    # Gateway's SFTP LogFile
    attr_accessor :vba_gateway_sftp_log_file

    # Gateway's SFTP MLST Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vba_gateway_sftp_mlst

    # Gateway's SFTP Passive Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vba_gateway_sftp_passive

    # Gateway's SFTP Password
    attr_accessor :vba_gateway_sftp_password

    # Gateway's SFTP Port
    attr_accessor :vba_gateway_sftp_port

    # Gateway's SFTP Protocol
    attr_accessor :vba_gateway_sftp_protocol

    # Gateway's SFTP User ID
    attr_accessor :vba_gateway_sftp_user

    # Gateway's Server
    attr_accessor :vba_gateway_server

    # System Configuration Values used by VBA Engineers.
    attr_accessor :vbap_i_adjudicate_client_code

    # System Configuration Values used by VBA Engineers.
    attr_accessor :vbap_i_adjudicate_client_id

    # System Configuration Values used by VBA Engineers.
    attr_accessor :vbap_i_adjudicate_database

    # For internal Developer use only.
    attr_accessor :vbap_i_claim_queue_url

    # For internal Developer use only.
    attr_accessor :vbap_i_client_code

    # Identifies if Field Masking is enabled.  This is a VBAPI setting so does not impact Legacy VBASoftware. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vbap_i_field_masking_enabled

    # Indicates if the client has IP Whitelisting enabled for accessing APIs. If enabled, IP Addresses will be added to the IPWhitelist table. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vbap_i_ip_whitelist

    # Timer for kicking off VBA Report to see if an Event is ready to be Processed
    attr_accessor :vba_report_event_timer

    # Client's Process Automation Auth Mode (Not sure, just passed in as general settings)
    attr_accessor :vba_report_mail_auth_mode

    # Client's Process Automation Password
    attr_accessor :vba_report_mail_password

    # Client's Process Automation server Port
    attr_accessor :vba_report_mail_port

    # Client's Process Automation server
    attr_accessor :vba_report_mail_server

    # Client's Process Automation SSL Setting Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :vba_report_mail_use_ssl

    # Client's Process Automation User Name
    attr_accessor :vba_report_mail_user

    # Value retrieved in VbA Report, nothing done with it
    attr_accessor :vba_report_so_count

    # Timer for kicking off VBA Report to see if a Series is ready to be Processed
    attr_accessor :vba_report_series_timer

    # Current Status of VBAReport (Pause, Stop, Running)
    attr_accessor :vba_report_status

    # Timer for kicking off VBA Report to see if a Report is ready to be Processed
    attr_accessor :vba_report_timer

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :vb_adjudicate_so_count

    # Current Status of Adjudication (Pause, Stop, Running)
    attr_accessor :vb_adjudicate_status

    # Not used in system configuration. Used on external and/or custom procedures.
    attr_accessor :vb_adjudicate_timer

    # Whether or not to validate Authorizations based on Federal ID Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :validate_federal_id_on_auth

    # If set to yes, the Provider must match on the Claim with the Auth Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :validate_provider_on_auth

    # When used, a Void backout will use today's date instead of processed date Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :void_backout_use_current_date

    # This Ex Code is used when the Maximum Volume is used to lower the Volume to maximum
    attr_accessor :volume_max_met_ex_code

    # This Ex Code is used when the Minimum Volume is used to raise the Volume to minimum
    attr_accessor :volume_min_met_ex_code

    # This indicates how many workflows will be executed per iteration from VBAdjudicateGovernor
    attr_accessor :workflow_execute_count

    # Default EOB Code not found ex code used when one is not sent for Zelis
    attr_accessor :zelis_eob_code_not_found_ex_code

    # Default Edit Code not found ex code used when one is not sent for Zelis
    attr_accessor :zelis_edit_code_not_found_ex_code

    # When the Zelis In Network Ex Code is set, and the Ex Code is on the claim and sent to Zelis, the claim will always be sent as \"In Network\" regardless if the claim is In or Out of Network
    attr_accessor :zelis_in_network_ex_code

    # Login information for Zelis Repricing API
    attr_accessor :zelis_login

    # Password information for Zelis Repricing API
    attr_accessor :zelis_password

    # Whether or not the system should be polling Zelis Repricing Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :zelis_poll

    # Indicates if Zelis Polling is \"In Testing\".  When \"In Testing\", polling activity will fire for the first call to Zelis only, so that Zelis has the claim, then not make any additional polling entries until the client indicates the test is complete.  Disabling this will then proceed to make new polling entries on claims in QUEUED and INPROCESS as normal. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :zelis_poll_testing

    # URL used to connect to the Zelis Cost Containment System
    attr_accessor :zelis_url

    # Zip code of the Client.
    attr_accessor :zip_code

    attr_accessor :use_vb_adjudicate_benefit_matching

    attr_accessor :display_member_primary_network

    attr_accessor :disable_ghostscript

    attr_accessor :vba_software_end_date

    attr_accessor :open_invoice_paid_through

    attr_accessor :claim_returned_to_batch_ex_code

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'key_value' => :'key_Value',
        :'ap_c_schedule' => :'apC_Schedule',
        :'as_o_percentage' => :'asO_Percentage',
        :'accident_review_ex_code' => :'accident_Review_Ex_Code',
        :'accident_review_plan_benefit_ex_code' => :'accident_Review_Plan_Benefit_Ex_Code',
        :'additional_invoice_rates' => :'additional_Invoice_Rates',
        :'address' => :'address',
        :'address2' => :'address2',
        :'adv_password_req' => :'adv_Password_Req',
        :'age_disenroll_reason' => :'age_Disenroll_Reason',
        :'allow_apostrophe_in_name' => :'allow_Apostrophe_In_Name',
        :'allow_checks_post_date' => :'allow_Checks_Post_Date',
        :'allow_claim_benefit_override' => :'allow_Claim_Benefit_Override',
        :'allow_max_at_subscriber' => :'allow_Max_At_Subscriber',
        :'allow_oop_on_override' => :'allow_OOP_On_Override',
        :'allow_zero_billed' => :'allow_Zero_Billed',
        :'anesthesia_by_fee_sched' => :'anesthesia_By_Fee_Sched',
        :'anesthesia_round_precision' => :'anesthesia_Round_Precision',
        :'anesthesia_round_type' => :'anesthesia_Round_Type',
        :'apply_multiple_benefit_ex_code_manual' => :'apply_Multiple_Benefit_ExCode_Manual',
        :'auth_review_full_path' => :'authReview_Full_Path',
        :'auth_review_object' => :'authReview_Object',
        :'auth_code_closed' => :'auth_Code_Closed',
        :'auth_code_pay_amt_zero' => :'auth_Code_Pay_Amt_Zero',
        :'auth_code_reopen' => :'auth_Code_Reopen',
        :'auth_code_under_auth_amt' => :'auth_Code_Under_Auth_Amt',
        :'auth_over_unit_split_ex_code' => :'auth_Over_Unit_Split_Ex_Code',
        :'auth_penalty_ex_code' => :'auth_Penalty_Ex_Code',
        :'auto_adj_return_to_batch' => :'auto_Adj_Return_To_Batch',
        :'auto_pay_capitated_claims' => :'auto_Pay_Capitated_Claims',
        :'auto_process_adjustment_backout' => :'auto_Process_Adjustment_Backout',
        :'auto_term_plan_on_gateway_request' => :'auto_Term_Plan_On_Gateway_Request',
        :'b_r_domain_name' => :'bR_Domain_Name',
        :'b_r_site_name' => :'bR_Site_Name',
        :'b_r_site_secret' => :'bR_Site_Secret',
        :'b_r_site_user' => :'bR_Site_User',
        :'base_load_fg' => :'baseLoadFg',
        :'base_load_pass' => :'baseLoadPass',
        :'base_load_service_date_flag' => :'baseLoadServiceDateFlag',
        :'base_load_url' => :'baseLoadURL',
        :'base_load_user' => :'baseLoadUser',
        :'beneficiary_age_limit' => :'beneficiary_AgeLimit',
        :'beneficiary_age_ex_code' => :'beneficiary_Age_Ex_Code',
        :'benefit_cascade_ex_code' => :'benefit_Cascade_Ex_Code',
        :'benefit_length' => :'benefit_Length',
        :'bridged_tooth_ex_code' => :'bridged_Tooth_Ex_Code',
        :'ca_s_segment_ben_match' => :'caS_Segment_Ben_Match',
        :'cli_a_certificate_ex_code' => :'cliA_Certificate_Ex_Code',
        :'cm_o_installed' => :'cmO_Installed',
        :'cap_by_service_line' => :'cap_By_Service_Line',
        :'cap_disenroll_adj_reason' => :'cap_Disenroll_Adj_Reason',
        :'cap_enroll_adj_reason' => :'cap_Enroll_Adj_Reason',
        :'cap_enrolled_by' => :'cap_Enrolled_By',
        :'cap_enrolled_thru' => :'cap_Enrolled_Thru',
        :'cap_in_accum' => :'cap_In_Accum',
        :'capitated_service_ex_code' => :'capitated_Service_Ex_Code',
        :'case_default_report' => :'case_Default_Report',
        :'cash_value_default' => :'cash_Value_Default',
        :'check_payee_address_flag' => :'checkPayeeAddressFlag',
        :'check_stock_location' => :'check_Stock_Location',
        :'checks_max_post_date' => :'checks_Max_Post_Date',
        :'city' => :'city',
        :'claim_upload_date' => :'claimUpload_Date',
        :'claim_upload_file_location' => :'claimUpload_File_Location',
        :'claim_upload_schedule' => :'claimUpload_Schedule',
        :'claim_age_ex_code' => :'claim_Age_Ex_Code',
        :'claim_allowed_billed_ex_code' => :'claim_Allowed_Billed_Ex_Code',
        :'claim_amt_ex_code' => :'claim_Amt_Ex_Code',
        :'claim_auth_denied_ex_code' => :'claim_Auth_Denied_Ex_Code',
        :'claim_auth_details_err_ex' => :'claim_Auth_Details_Err_Ex',
        :'claim_auth_diff_mem_ex' => :'claim_Auth_Diff_Mem_Ex',
        :'claim_auth_diff_prov_ex' => :'claim_Auth_Diff_Prov_Ex',
        :'claim_auth_exceeded_ex_code' => :'claim_Auth_Exceeded_Ex_Code',
        :'claim_auth_invalid_date_ex' => :'claim_Auth_Invalid_Date_Ex',
        :'claim_auth_not_approved_ex' => :'claim_Auth_Not_Approved_Ex',
        :'claim_auth_proc_exceeded_ex_code' => :'claim_Auth_Proc_Exceeded_Ex_Code',
        :'claim_auth_reqd_ex_code' => :'claim_Auth_Reqd_Ex_Code',
        :'claim_ben_not_found_ex_code' => :'claim_Ben_Not_Found_Ex_Code',
        :'claim_cov_in_net_only_ex_code' => :'claim_Cov_In_Net_Only_Ex_Code',
        :'claim_days_allowed' => :'claim_Days_Allowed',
        :'claim_dead_ex_code' => :'claim_Dead_Ex_Code',
        :'claim_ded_credit_oon_used_ex_code' => :'claim_Ded_Credit_OON_Used_Ex_Code',
        :'claim_ded_credit_ppo_used_ex_code' => :'claim_Ded_Credit_PPO_Used_Ex_Code',
        :'claim_denied_ex_code' => :'claim_Denied_Ex_Code',
        :'claim_diagnosis_age_ex_code' => :'claim_Diagnosis_Age_Ex_Code',
        :'claim_diagnosis_gender_ex_code' => :'claim_Diagnosis_Gender_Ex_Code',
        :'claim_dup_error_ex_code' => :'claim_Dup_Error_Ex_Code',
        :'claim_error_ex_code' => :'claim_Error_Ex_Code',
        :'claim_exceed_daily_co_pay_max_ex_code' => :'claim_Exceed_Daily_CoPay_Max_Ex_Code',
        :'claim_exceed_injury_ex_code' => :'claim_Exceed_Injury_Ex_Code',
        :'claim_exceed_lifetime_ex_code' => :'claim_Exceed_Lifetime_Ex_Code',
        :'claim_exceed_lifetime_oon_ex_code' => :'claim_Exceed_Lifetime_OON_Ex_Code',
        :'claim_exceed_lifetime_ppo_ex_code' => :'claim_Exceed_Lifetime_PPO_Ex_Code',
        :'claim_exceed_maximum_ex_code' => :'claim_Exceed_Maximum_Ex_Code',
        :'claim_exceed_per_diem_ex_code' => :'claim_Exceed_PerDiem_Ex_Code',
        :'claim_fee_sched_error_ex' => :'claim_Fee_Sched_Error_Ex',
        :'claim_lag_error_ex_code' => :'claim_Lag_Error_Ex_Code',
        :'claim_late_ex_code' => :'claim_Late_Ex_Code',
        :'claim_life_benefit_met_ex_code' => :'claim_Life_Benefit_Met_Ex_Code',
        :'claim_life_plan_met_ex_code' => :'claim_Life_Plan_Met_Ex_Code',
        :'claim_no_prov_fee_sched' => :'claim_No_Prov_Fee_Sched',
        :'claim_no_rate_fee_ex_code' => :'claim_No_Rate_Fee_Ex_Code',
        :'claim_not_adult_dependent' => :'claim_Not_Adult_Dependent',
        :'claim_not_at_place_ex_code' => :'claim_Not_At_Place_Ex_Code',
        :'claim_not_by_prov_ex_code' => :'claim_Not_By_Prov_Ex_Code',
        :'claim_not_cov_ex_code' => :'claim_Not_Cov_Ex_Code',
        :'claim_not_enrolled_ex_code' => :'claim_Not_Enrolled_Ex_Code',
        :'claim_not_enrolled_ex_code_null_use_pre_post' => :'claim_Not_Enrolled_Ex_Code_Null_Use_Pre_Post',
        :'claim_not_enrolled_post_ex_code' => :'claim_Not_Enrolled_Post_Ex_Code',
        :'claim_not_enrolled_pre_ex_code' => :'claim_Not_Enrolled_Pre_Ex_Code',
        :'claim_not_student_ex_code' => :'claim_Not_Student_Ex_Code',
        :'claim_other_coverage_ex_code' => :'claim_Other_Coverage_Ex_Code',
        :'claim_over_max_ex_code' => :'claim_Over_Max_Ex_Code',
        :'claim_over_max_oon_ex_code' => :'claim_Over_Max_OON_Ex_Code',
        :'claim_over_max_ppo_ex_code' => :'claim_Over_Max_PPO_Ex_Code',
        :'claim_pend_age_max' => :'claim_Pend_Age_Max',
        :'claim_pend_age_min' => :'claim_Pend_Age_Min',
        :'claim_pend_amount' => :'claim_Pend_Amount',
        :'claim_procedure_age_ex_code' => :'claim_Procedure_Age_Ex_Code',
        :'claim_procedure_gender_ex_code' => :'claim_Procedure_Gender_Ex_Code',
        :'claim_service_date_range' => :'claim_Service_Date_Range',
        :'claim_service_outside_enrollment_ex_code' => :'claim_Service_Outside_Enrollment_Ex_Code',
        :'claim_splits_plan_year_ex_code' => :'claim_Splits_Plan_Year_Ex_Code',
        :'class_length' => :'class_Length',
        :'clear_auth_penalty_ex_code' => :'clear_Auth_Penalty_ExCode',
        :'client_id' => :'client_ID',
        :'client_name' => :'client_Name',
        :'co_ins_max_ex_code' => :'coIns_Max_Ex_Code',
        :'co_ins_max_ex_code_member' => :'coIns_Max_Ex_Code_Member',
        :'co_pay_by_billed' => :'coPay_By_Billed',
        :'cogito_app_client_id' => :'cogito_App_Client_ID',
        :'cogito_app_client_secret' => :'cogito_App_Client_Secret',
        :'cogito_user_pool_id' => :'cogito_User_Pool_ID',
        :'combined_notes_report_fg' => :'combined_Notes_Report_Fg',
        :'comm_disenroll_adj_reason' => :'comm_Disenroll_Adj_Reason',
        :'comm_enroll_adj_reason' => :'comm_Enroll_Adj_Reason',
        :'comm_enrolled_by' => :'comm_Enrolled_By',
        :'comm_enrolled_thru' => :'comm_Enrolled_Thru',
        :'company_length' => :'company_Length',
        :'company_short' => :'company_Short',
        :'company_start_date' => :'company_Start_Date',
        :'context4_clm_ucr_pct' => :'context4_ClmUcrPct',
        :'context4_clm_ucr_pct_oon' => :'context4_ClmUcrPct_OON',
        :'context4_fee_selector' => :'context4_FeeSelector',
        :'context4_fee_selector_oon' => :'context4_FeeSelector_OON',
        :'context4_medicare_pct' => :'context4_MedicarePct',
        :'context4_medicare_pct_oon' => :'context4_MedicarePct_OON',
        :'context4_password' => :'context4_Password',
        :'context4_payor_type' => :'context4_PayorType',
        :'context4_payor_type_oon' => :'context4_PayorType_OON',
        :'context4_pct_of_chg' => :'context4_PctOfChg',
        :'context4_pct_of_chg_oon' => :'context4_PctOfChg_OON',
        :'context4_plan_price_not_greater_billed_fg' => :'context4_PlanPriceNotGreaterBilledFg',
        :'context4_send_billing_address_fg' => :'context4_SendBillingAddressFg',
        :'context4_user_id' => :'context4_UserID',
        :'context4_web_uri' => :'context4_WebURI',
        :'context4_web_uri_delete' => :'context4_WebURI_Delete',
        :'copay_ex_code' => :'copay_Ex_Code',
        :'country_id' => :'country_ID',
        :'credential_by_payee' => :'credential_By_Payee',
        :'credentialing' => :'credentialing',
        :'crowned_tooth_ex_code' => :'crowned_Tooth_Ex_Code',
        :'currency_format' => :'currency_Format',
        :'d_b_version_date' => :'dB_Version_Date',
        :'dr_g_schedule' => :'drG_Schedule',
        :'database_version' => :'database_Version',
        :'date_format' => :'date_Format',
        :'deductible_ex_code' => :'deductible_Ex_Code',
        :'deductible_max_ex_code' => :'deductible_Max_Ex_Code',
        :'deductible_max_ex_code_member' => :'deductible_Max_Ex_Code_Member',
        :'default_1099_flag' => :'default_1099_Flag',
        :'default_auth_code' => :'default_Auth_Code',
        :'default_check_stock' => :'default_Check_Stock',
        :'default_currency_id' => :'default_Currency_ID',
        :'default_eob_report' => :'default_EOB_Report',
        :'default_federal_tax' => :'default_Federal_Tax',
        :'default_federal_tax_day_limit' => :'default_Federal_Tax_Day_Limit',
        :'default_federal_tax_pct' => :'default_Federal_Tax_Pct',
        :'default_federal_wage_limit' => :'default_Federal_Wage_Limit',
        :'default_id_card_request_type' => :'default_ID_Card_Request_Type',
        :'default_invoice_report_definition_key' => :'default_Invoice_ReportDefinition_Key',
        :'default_login_sound' => :'default_Login_Sound',
        :'default_medicare_tax_day_limit' => :'default_Medicare_Tax_Day_Limit',
        :'default_medicare_wage_limit' => :'default_Medicare_Wage_Limit',
        :'default_pay_date_range' => :'default_Pay_Date_Range',
        :'default_payor_id' => :'default_Payor_ID',
        :'default_ss_tax_day_limit' => :'default_SS_Tax_Day_Limit',
        :'default_ss_wage_limit' => :'default_SS_Wage_Limit',
        :'default_state_tax_day_limit' => :'default_State_Tax_Day_Limit',
        :'default_state_wage_limit' => :'default_State_Wage_Limit',
        :'dental_atp_paid_date_type' => :'dental_ATP_Paid_Date_Type',
        :'diagnostic_code_type_default' => :'diagnostic_Code_Type_Default',
        :'disallow_spec_char_in_plan_id' => :'disallow_Spec_Char_In_Plan_ID',
        :'disconnect_call_notes_from_claim_provider' => :'disconnect_Call_Notes_From_Claim_Provider',
        :'disenroll_adj_reason' => :'disenroll_Adj_Reason',
        :'disenroll_auth_code' => :'disenroll_Auth_Code',
        :'display_ppo_null_network' => :'display_PPO_Null_Network',
        :'division_length' => :'division_Length',
        :'dup_password_days' => :'dup_Password_Days',
        :'duplicate_master_key' => :'duplicateMaster_Key',
        :'ed_i_installed' => :'edI_Installed',
        :'eo_b_disclaimer' => :'eoB_Disclaimer',
        :'eo_b_report_location' => :'eoB_Report_Location',
        :'e_r_place_of_service' => :'eR_Place_Of_Service',
        :'enforce_mfa' => :'enforce_MFA',
        :'enroll_adj_reason' => :'enroll_Adj_Reason',
        :'entry_date' => :'entry_Date',
        :'entry_user' => :'entry_User',
        :'error_invalid_diag' => :'error_Invalid_Diag',
        :'error_invalid_proc' => :'error_Invalid_Proc',
        :'error_multiple_plan_years' => :'error_Multiple_Plan_Years',
        :'error_paid_to_provider' => :'error_Paid_To_Provider',
        :'error_termed_provider' => :'error_Termed_Provider',
        :'exceed_exhaust_date_ex_code' => :'exceed_Exhaust_Date_Ex_Code',
        :'exceed_return_to_work_ex_code' => :'exceed_Return_To_Work_Ex_Code',
        :'exceeds_paid_through_ex_code' => :'exceeds_PaidThrough_Ex_Code',
        :'extended_term_default' => :'extended_Term_Default',
        :'fax_country_code' => :'fax_Country_Code',
        :'fax_number' => :'fax_Number',
        :'federal_id' => :'federal_ID',
        :'fee_sched_match_claim_year' => :'fee_Sched_Match_Claim_Year',
        :'fee_schedule_ex_codes_manual' => :'fee_Schedule_Ex_Codes_Manual',
        :'fee_schedule_exact_match_fg' => :'fee_Schedule_Exact_Match_Fg',
        :'filled_tooth_ex_code' => :'filled_Tooth_Ex_Code',
        :'first_benefit_auto_selected_ex_code' => :'first_Benefit_Auto_Selected_Ex_Code',
        :'flex_claim_after_grace_period_ex_code' => :'flex_Claim_After_Grace_Period_Ex_Code',
        :'flex_claim_after_submit_period_ex_code' => :'flex_Claim_After_Submit_Period_Ex_Code',
        :'flex_claim_funds_exhausted_ex_code' => :'flex_Claim_Funds_Exhausted_Ex_Code',
        :'force_call_track_note' => :'force_Call_Track_Note',
        :'force_claim_rec_date' => :'force_Claim_Rec_Date',
        :'force_claim_sub_id' => :'force_Claim_Sub_ID',
        :'force_latest_enrollment' => :'force_Latest_Enrollment',
        :'force_leading_zero_on_rev_code' => :'force_Leading_Zero_On_Rev_Code',
        :'full_backout_on_void_distribution' => :'full_Backout_On_Void_Distribution',
        :'full_month_billing' => :'full_Month_Billing',
        :'generate_comm_date' => :'generate_Comm_Date',
        :'generate_comm_user' => :'generate_Comm_User',
        :'generate_inv_date' => :'generate_Inv_Date',
        :'generate_inv_user' => :'generate_Inv_User',
        :'generate_negative_inv' => :'generate_Negative_Inv',
        :'generate_prem_dist_after' => :'generate_PremDist_After',
        :'global_cmu_id' => :'global_CMU_ID',
        :'grace_logins' => :'grace_Logins',
        :'group_length' => :'group_Length',
        :'i_d_card_location' => :'iD_Card_Location',
        :'iv_r_cs_country_code' => :'ivR_CS_Country_Code',
        :'iv_r_cs_phone_number' => :'ivR_CS_Phone_Number',
        :'ignore_care_management_hierarchy_fg' => :'ignore_Care_Management_Hierarchy_Fg',
        :'ignore_claim_funding_status_change_msg' => :'ignore_Claim_Funding_Status_Change_Msg',
        :'inactive_payee_ex_code' => :'inactive_Payee_Ex_Code',
        :'include_invalid_enrollments' => :'include_Invalid_Enrollments',
        :'inv_grace_period' => :'inv_Grace_Period',
        :'inv_grace_period_type' => :'inv_Grace_Period_Type',
        :'invalid_diag_ex_code' => :'invalid_Diag_Ex_Code',
        :'invalid_proc_ex_code' => :'invalid_Proc_Ex_Code',
        :'invoice_close_adj_reason' => :'invoice_Close_Adj_Reason',
        :'invoice_enrolled_by' => :'invoice_Enrolled_By',
        :'invoice_enrolled_thru' => :'invoice_Enrolled_Thru',
        :'invoice_grace_ex_code' => :'invoice_Grace_Ex_Code',
        :'invoice_grace_period' => :'invoice_Grace_Period',
        :'invoice_remit_account_key' => :'invoice_Remit_Account_Key',
        :'invoice_remit_address1' => :'invoice_Remit_Address1',
        :'invoice_remit_address2' => :'invoice_Remit_Address2',
        :'invoice_remit_city' => :'invoice_Remit_City',
        :'invoice_remit_country_code' => :'invoice_Remit_Country_Code',
        :'invoice_remit_country_id' => :'invoice_Remit_Country_ID',
        :'invoice_remit_name' => :'invoice_Remit_Name',
        :'invoice_remit_phone_number' => :'invoice_Remit_Phone_Number',
        :'invoice_remit_state' => :'invoice_Remit_State',
        :'invoice_remit_zip_code' => :'invoice_Remit_Zip_Code',
        :'lag_time' => :'lag_Time',
        :'last_age_disenroll' => :'last_Age_Disenroll',
        :'last_authorization' => :'last_Authorization',
        :'last_billing' => :'last_Billing',
        :'last_case_number' => :'last_Case_Number',
        :'last_check_batch' => :'last_Check_Batch',
        :'last_claim_number' => :'last_Claim_Number',
        :'last_day_worked_range' => :'last_Day_Worked_Range',
        :'last_encounter' => :'last_Encounter',
        :'last_invoice' => :'last_Invoice',
        :'lock_auth_review' => :'lock_Auth_Review',
        :'lock_auth_review_all' => :'lock_Auth_Review_All',
        :'log_base_load_call' => :'log_BaseLoad_Call',
        :'logo_file' => :'logo_File',
        :'long_state_names' => :'long_State_Names',
        :'mail_auth_mode' => :'mail_AuthMode',
        :'mail_password' => :'mail_Password',
        :'mail_port' => :'mail_Port',
        :'mail_server' => :'mail_Server',
        :'mail_use_ssl' => :'mail_Use_SSL',
        :'mail_user' => :'mail_User',
        :'medicare_on_benefit' => :'medicare_On_Benefit',
        :'member_address_dob_not_reqd' => :'member_Address_DOB_Not_Reqd',
        :'member_match_by_name_birth_date' => :'member_Match_By_Name_BirthDate',
        :'modifier_not_eff_ex_code' => :'modifier_Not_Eff_Ex_Code',
        :'multiple_auth_ex_code' => :'multiple_Auth_Ex_Code',
        :'name' => :'name',
        :'network_does_not_match_repriced_network_ex_code' => :'network_Does_Not_Match_Repriced_Network_Ex_Code',
        :'new_member_reason' => :'new_Member_Reason',
        :'note_attachment_db' => :'note_Attachment_DB',
        :'note_attachment_local_default' => :'note_Attachment_Local_Default',
        :'note_attachment_remote_default' => :'note_Attachment_Remote_Default',
        :'oo_p_max_ex_code' => :'ooP_Max_Ex_Code',
        :'oo_p_max_ex_code_member' => :'ooP_Max_Ex_Code_Member',
        :'out_of_net_ex_code' => :'out_Of_Net_Ex_Code',
        :'overpayment_deduction_type' => :'overpayment_Deduction_Type',
        :'pc_p_only_ex_code' => :'pcP_Only_Ex_Code',
        :'partial_cap' => :'partial_Cap',
        :'password_expiration' => :'password_Expiration',
        :'password_minimum' => :'password_Minimum',
        :'pay_period_start_date' => :'pay_Period_Start_Date',
        :'payment_proration' => :'payment_Proration',
        :'phone_country_code' => :'phone_Country_Code',
        :'phone_format' => :'phone_Format',
        :'phone_number' => :'phone_Number',
        :'place_code_not_setup_ex_code' => :'place_Code_Not_Setup_Ex_Code',
        :'plan_benefit_override_network_id' => :'planBenefit_Override_Network_ID',
        :'plan_length' => :'plan_Length',
        :'policy_forfeiture_grace_period' => :'policy_Forfeiture_Grace_Period',
        :'policy_forfeiture_grace_period_type' => :'policy_Forfeiture_Grace_Period_Type',
        :'premium_proration' => :'premium_Proration',
        :'prevent_suspense_release_by_process_user' => :'prevent_Suspense_Release_By_Process_User',
        :'primary_account_key' => :'primary_Account_Key',
        :'process_auths_when_pended' => :'process_Auths_When_Pended',
        :'process_auto_cob' => :'process_Auto_COB',
        :'processing_mode' => :'processing_Mode',
        :'prof_atp_paid_date_type' => :'prof_ATP_Paid_Date_Type',
        :'prosthesis_tooth_ex_code' => :'prosthesis_Tooth_Ex_Code',
        :'protect_alternate_id' => :'protect_Alternate_ID',
        :'provider_auth_exempt_procedure_ex_code' => :'provider_Auth_Exempt_Procedure_Ex_Code',
        :'provider_not_active_auth_code' => :'provider_Not_Active_Auth_Code',
        :'pulled_tooth_ex_code' => :'pulled_Tooth_Ex_Code',
        :'qp_a_method_1_ex_code' => :'qpA_Method_1_Ex_Code',
        :'qp_a_method_2_ex_code' => :'qpA_Method_2_Ex_Code',
        :'r_x_atp_paid_date_type' => :'rX_ATP_Paid_Date_Type',
        :'reduced_paid_up_default' => :'reduced_Paid_Up_Default',
        :'reins_split_claim' => :'reins_Split_Claim',
        :'repetitive_payment' => :'repetitive_Payment',
        :'repriced_line' => :'repriced_Line',
        :'request_id_card_prompt_enrollment' => :'request_ID_Card_Prompt_Enrollment',
        :'request_provider_email' => :'request_Provider_Email',
        :'request_reassess_email' => :'request_Reassess_Email',
        :'restrict_npi_federal_id' => :'restrict_NPI_Federal_ID',
        :'return_to_work_range' => :'return_To_Work_Range',
        :'scanned_images_folder' => :'scanned_Images_Folder',
        :'set_paid_through' => :'set_Paid_Through',
        :'single_refund_check_batch' => :'single_Refund_Check_Batch',
        :'state' => :'state',
        :'subscriber_id_format' => :'subscriber_ID_Format',
        :'subscriber_length' => :'subscriber_Length',
        :'system_idle' => :'system_Idle',
        :'tax_control_location' => :'tax_Control_Location',
        :'tax_on_adjudcation_date_fg' => :'tax_On_Adjudcation_Date_Fg',
        :'temporary_save_criteria_count' => :'temporary_Save_Criteria_Count',
        :'termed_provider_ex_code' => :'termed_Provider_Ex_Code',
        :'toll_free_country_code' => :'toll_Free_Country_Code',
        :'toll_free_phone_number' => :'toll_Free_Phone_Number',
        :'tooth_activity_ex_code' => :'tooth_Activity_Ex_Code',
        :'tooth_chart_type' => :'tooth_Chart_Type',
        :'u_b92_atp_paid_date_type' => :'uB92_ATP_Paid_Date_Type',
        :'u_c_price_used_ex_code' => :'uC_Price_Used_Ex_Code',
        :'u_c_unit_mulitply' => :'uC_Unit_Mulitply',
        :'unassigned_provider' => :'unassigned_Provider',
        :'update_date' => :'update_Date',
        :'update_user' => :'update_User',
        :'use_greater_user_amount_limit_fg' => :'useGreaterUserAmountLimit_Fg',
        :'use_auth_over_unit_split' => :'use_Auth_Over_Unit_Split',
        :'use_change_data_capture' => :'use_Change_Data_Capture',
        :'use_commission_cluster_hierarchy' => :'use_Commission_Cluster_Hierarchy',
        :'use_currency' => :'use_Currency',
        :'use_disability_from_date' => :'use_Disability_From_Date',
        :'use_expanded_notes' => :'use_Expanded_Notes',
        :'use_first_match_pricing' => :'use_First_Match_Pricing',
        :'use_other_name' => :'use_Other_Name',
        :'use_primary_diag_match' => :'use_Primary_Diag_Match',
        :'use_primary_diag_match_capitation' => :'use_Primary_Diag_Match_Capitation',
        :'use_salary' => :'use_Salary',
        :'use_tax_control' => :'use_Tax_Control',
        :'use_vba_software_2' => :'use_VBASoftware_2',
        :'use_vb_adjudicate_2' => :'use_VBAdjudicate_2',
        :'use_zip_code_auto_populate' => :'use_Zip_Code_Auto_Populate',
        :'vba_data_integration' => :'vbaDataIntegration',
        :'vba_data_integration_dbms' => :'vbaDataIntegration_DBMS',
        :'vba_data_integration_db_parm' => :'vbaDataIntegration_DBParm',
        :'vba_data_integration_database' => :'vbaDataIntegration_Database',
        :'vba_data_integration_server' => :'vbaDataIntegration_Server',
        :'vba_gateway' => :'vbaGateway',
        :'vba_gateway_dbms' => :'vbaGateway_DBMS',
        :'vba_gateway_db_parm' => :'vbaGateway_DBParm',
        :'vba_gateway_database' => :'vbaGateway_Database',
        :'vba_gateway_sftp_host' => :'vbaGateway_SFTP_Host',
        :'vba_gateway_sftp_log_file' => :'vbaGateway_SFTP_LogFile',
        :'vba_gateway_sftp_mlst' => :'vbaGateway_SFTP_MLST',
        :'vba_gateway_sftp_passive' => :'vbaGateway_SFTP_Passive',
        :'vba_gateway_sftp_password' => :'vbaGateway_SFTP_Password',
        :'vba_gateway_sftp_port' => :'vbaGateway_SFTP_Port',
        :'vba_gateway_sftp_protocol' => :'vbaGateway_SFTP_Protocol',
        :'vba_gateway_sftp_user' => :'vbaGateway_SFTP_User',
        :'vba_gateway_server' => :'vbaGateway_Server',
        :'vbap_i_adjudicate_client_code' => :'vbapI_Adjudicate_Client_Code',
        :'vbap_i_adjudicate_client_id' => :'vbapI_Adjudicate_Client_ID',
        :'vbap_i_adjudicate_database' => :'vbapI_Adjudicate_Database',
        :'vbap_i_claim_queue_url' => :'vbapI_ClaimQueue_URL',
        :'vbap_i_client_code' => :'vbapI_Client_Code',
        :'vbap_i_field_masking_enabled' => :'vbapI_Field_Masking_Enabled',
        :'vbap_i_ip_whitelist' => :'vbapI_IP_Whitelist',
        :'vba_report_event_timer' => :'vbaReport_Event_Timer',
        :'vba_report_mail_auth_mode' => :'vbaReport_Mail_AuthMode',
        :'vba_report_mail_password' => :'vbaReport_Mail_Password',
        :'vba_report_mail_port' => :'vbaReport_Mail_Port',
        :'vba_report_mail_server' => :'vbaReport_Mail_Server',
        :'vba_report_mail_use_ssl' => :'vbaReport_Mail_Use_SSL',
        :'vba_report_mail_user' => :'vbaReport_Mail_User',
        :'vba_report_so_count' => :'vbaReport_SO_Count',
        :'vba_report_series_timer' => :'vbaReport_Series_Timer',
        :'vba_report_status' => :'vbaReport_Status',
        :'vba_report_timer' => :'vbaReport_Timer',
        :'vb_adjudicate_so_count' => :'vbAdjudicate_SO_Count',
        :'vb_adjudicate_status' => :'vbAdjudicate_Status',
        :'vb_adjudicate_timer' => :'vbAdjudicate_Timer',
        :'validate_federal_id_on_auth' => :'validate_Federal_ID_On_Auth',
        :'validate_provider_on_auth' => :'validate_Provider_On_Auth',
        :'void_backout_use_current_date' => :'void_Backout_Use_Current_Date',
        :'volume_max_met_ex_code' => :'volume_Max_Met_Ex_Code',
        :'volume_min_met_ex_code' => :'volume_Min_Met_Ex_Code',
        :'workflow_execute_count' => :'workflow_Execute_Count',
        :'zelis_eob_code_not_found_ex_code' => :'zelis_EOBCode_Not_Found_Ex_Code',
        :'zelis_edit_code_not_found_ex_code' => :'zelis_EditCode_Not_Found_Ex_Code',
        :'zelis_in_network_ex_code' => :'zelis_In_Network_Ex_Code',
        :'zelis_login' => :'zelis_Login',
        :'zelis_password' => :'zelis_Password',
        :'zelis_poll' => :'zelis_Poll',
        :'zelis_poll_testing' => :'zelis_Poll_Testing',
        :'zelis_url' => :'zelis_URL',
        :'zip_code' => :'zip_Code',
        :'use_vb_adjudicate_benefit_matching' => :'use_VBAdjudicate_Benefit_Matching',
        :'display_member_primary_network' => :'display_Member_Primary_Network',
        :'disable_ghostscript' => :'disable_Ghostscript',
        :'vba_software_end_date' => :'vbaSoftware_End_Date',
        :'open_invoice_paid_through' => :'open_Invoice_Paid_Through',
        :'claim_returned_to_batch_ex_code' => :'claim_Returned_To_Batch_Ex_Code'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'key_value' => :'Integer',
        :'ap_c_schedule' => :'String',
        :'as_o_percentage' => :'Float',
        :'accident_review_ex_code' => :'String',
        :'accident_review_plan_benefit_ex_code' => :'String',
        :'additional_invoice_rates' => :'Boolean',
        :'address' => :'String',
        :'address2' => :'String',
        :'adv_password_req' => :'Boolean',
        :'age_disenroll_reason' => :'Integer',
        :'allow_apostrophe_in_name' => :'Boolean',
        :'allow_checks_post_date' => :'Boolean',
        :'allow_claim_benefit_override' => :'Boolean',
        :'allow_max_at_subscriber' => :'String',
        :'allow_oop_on_override' => :'Boolean',
        :'allow_zero_billed' => :'String',
        :'anesthesia_by_fee_sched' => :'Boolean',
        :'anesthesia_round_precision' => :'Integer',
        :'anesthesia_round_type' => :'String',
        :'apply_multiple_benefit_ex_code_manual' => :'Boolean',
        :'auth_review_full_path' => :'String',
        :'auth_review_object' => :'String',
        :'auth_code_closed' => :'String',
        :'auth_code_pay_amt_zero' => :'String',
        :'auth_code_reopen' => :'String',
        :'auth_code_under_auth_amt' => :'String',
        :'auth_over_unit_split_ex_code' => :'String',
        :'auth_penalty_ex_code' => :'String',
        :'auto_adj_return_to_batch' => :'Boolean',
        :'auto_pay_capitated_claims' => :'Boolean',
        :'auto_process_adjustment_backout' => :'Boolean',
        :'auto_term_plan_on_gateway_request' => :'Boolean',
        :'b_r_domain_name' => :'String',
        :'b_r_site_name' => :'String',
        :'b_r_site_secret' => :'String',
        :'b_r_site_user' => :'String',
        :'base_load_fg' => :'Boolean',
        :'base_load_pass' => :'String',
        :'base_load_service_date_flag' => :'Boolean',
        :'base_load_url' => :'String',
        :'base_load_user' => :'String',
        :'beneficiary_age_limit' => :'Float',
        :'beneficiary_age_ex_code' => :'String',
        :'benefit_cascade_ex_code' => :'String',
        :'benefit_length' => :'Float',
        :'bridged_tooth_ex_code' => :'String',
        :'ca_s_segment_ben_match' => :'Boolean',
        :'cli_a_certificate_ex_code' => :'String',
        :'cm_o_installed' => :'String',
        :'cap_by_service_line' => :'Boolean',
        :'cap_disenroll_adj_reason' => :'String',
        :'cap_enroll_adj_reason' => :'String',
        :'cap_enrolled_by' => :'Integer',
        :'cap_enrolled_thru' => :'Integer',
        :'cap_in_accum' => :'Boolean',
        :'capitated_service_ex_code' => :'String',
        :'case_default_report' => :'String',
        :'cash_value_default' => :'Integer',
        :'check_payee_address_flag' => :'Boolean',
        :'check_stock_location' => :'String',
        :'checks_max_post_date' => :'Integer',
        :'city' => :'String',
        :'claim_upload_date' => :'Time',
        :'claim_upload_file_location' => :'String',
        :'claim_upload_schedule' => :'String',
        :'claim_age_ex_code' => :'String',
        :'claim_allowed_billed_ex_code' => :'String',
        :'claim_amt_ex_code' => :'String',
        :'claim_auth_denied_ex_code' => :'String',
        :'claim_auth_details_err_ex' => :'String',
        :'claim_auth_diff_mem_ex' => :'String',
        :'claim_auth_diff_prov_ex' => :'String',
        :'claim_auth_exceeded_ex_code' => :'String',
        :'claim_auth_invalid_date_ex' => :'String',
        :'claim_auth_not_approved_ex' => :'String',
        :'claim_auth_proc_exceeded_ex_code' => :'String',
        :'claim_auth_reqd_ex_code' => :'String',
        :'claim_ben_not_found_ex_code' => :'String',
        :'claim_cov_in_net_only_ex_code' => :'String',
        :'claim_days_allowed' => :'Float',
        :'claim_dead_ex_code' => :'String',
        :'claim_ded_credit_oon_used_ex_code' => :'String',
        :'claim_ded_credit_ppo_used_ex_code' => :'String',
        :'claim_denied_ex_code' => :'String',
        :'claim_diagnosis_age_ex_code' => :'String',
        :'claim_diagnosis_gender_ex_code' => :'String',
        :'claim_dup_error_ex_code' => :'String',
        :'claim_error_ex_code' => :'String',
        :'claim_exceed_daily_co_pay_max_ex_code' => :'String',
        :'claim_exceed_injury_ex_code' => :'String',
        :'claim_exceed_lifetime_ex_code' => :'String',
        :'claim_exceed_lifetime_oon_ex_code' => :'String',
        :'claim_exceed_lifetime_ppo_ex_code' => :'String',
        :'claim_exceed_maximum_ex_code' => :'String',
        :'claim_exceed_per_diem_ex_code' => :'String',
        :'claim_fee_sched_error_ex' => :'String',
        :'claim_lag_error_ex_code' => :'String',
        :'claim_late_ex_code' => :'String',
        :'claim_life_benefit_met_ex_code' => :'String',
        :'claim_life_plan_met_ex_code' => :'String',
        :'claim_no_prov_fee_sched' => :'String',
        :'claim_no_rate_fee_ex_code' => :'String',
        :'claim_not_adult_dependent' => :'String',
        :'claim_not_at_place_ex_code' => :'String',
        :'claim_not_by_prov_ex_code' => :'String',
        :'claim_not_cov_ex_code' => :'String',
        :'claim_not_enrolled_ex_code' => :'String',
        :'claim_not_enrolled_ex_code_null_use_pre_post' => :'Boolean',
        :'claim_not_enrolled_post_ex_code' => :'String',
        :'claim_not_enrolled_pre_ex_code' => :'String',
        :'claim_not_student_ex_code' => :'String',
        :'claim_other_coverage_ex_code' => :'String',
        :'claim_over_max_ex_code' => :'String',
        :'claim_over_max_oon_ex_code' => :'String',
        :'claim_over_max_ppo_ex_code' => :'String',
        :'claim_pend_age_max' => :'Integer',
        :'claim_pend_age_min' => :'Integer',
        :'claim_pend_amount' => :'Float',
        :'claim_procedure_age_ex_code' => :'String',
        :'claim_procedure_gender_ex_code' => :'String',
        :'claim_service_date_range' => :'Integer',
        :'claim_service_outside_enrollment_ex_code' => :'String',
        :'claim_splits_plan_year_ex_code' => :'String',
        :'class_length' => :'Float',
        :'clear_auth_penalty_ex_code' => :'Boolean',
        :'client_id' => :'String',
        :'client_name' => :'String',
        :'co_ins_max_ex_code' => :'String',
        :'co_ins_max_ex_code_member' => :'String',
        :'co_pay_by_billed' => :'Boolean',
        :'cogito_app_client_id' => :'String',
        :'cogito_app_client_secret' => :'String',
        :'cogito_user_pool_id' => :'String',
        :'combined_notes_report_fg' => :'Boolean',
        :'comm_disenroll_adj_reason' => :'String',
        :'comm_enroll_adj_reason' => :'String',
        :'comm_enrolled_by' => :'Integer',
        :'comm_enrolled_thru' => :'Integer',
        :'company_length' => :'Float',
        :'company_short' => :'String',
        :'company_start_date' => :'Time',
        :'context4_clm_ucr_pct' => :'Integer',
        :'context4_clm_ucr_pct_oon' => :'Integer',
        :'context4_fee_selector' => :'String',
        :'context4_fee_selector_oon' => :'String',
        :'context4_medicare_pct' => :'Integer',
        :'context4_medicare_pct_oon' => :'Integer',
        :'context4_password' => :'String',
        :'context4_payor_type' => :'String',
        :'context4_payor_type_oon' => :'Integer',
        :'context4_pct_of_chg' => :'Integer',
        :'context4_pct_of_chg_oon' => :'Integer',
        :'context4_plan_price_not_greater_billed_fg' => :'Boolean',
        :'context4_send_billing_address_fg' => :'Boolean',
        :'context4_user_id' => :'String',
        :'context4_web_uri' => :'String',
        :'context4_web_uri_delete' => :'String',
        :'copay_ex_code' => :'String',
        :'country_id' => :'String',
        :'credential_by_payee' => :'Boolean',
        :'credentialing' => :'String',
        :'crowned_tooth_ex_code' => :'String',
        :'currency_format' => :'String',
        :'d_b_version_date' => :'Time',
        :'dr_g_schedule' => :'String',
        :'database_version' => :'String',
        :'date_format' => :'String',
        :'deductible_ex_code' => :'String',
        :'deductible_max_ex_code' => :'String',
        :'deductible_max_ex_code_member' => :'String',
        :'default_1099_flag' => :'String',
        :'default_auth_code' => :'String',
        :'default_check_stock' => :'Integer',
        :'default_currency_id' => :'String',
        :'default_eob_report' => :'Integer',
        :'default_federal_tax' => :'Float',
        :'default_federal_tax_day_limit' => :'Integer',
        :'default_federal_tax_pct' => :'Float',
        :'default_federal_wage_limit' => :'Float',
        :'default_id_card_request_type' => :'String',
        :'default_invoice_report_definition_key' => :'Integer',
        :'default_login_sound' => :'String',
        :'default_medicare_tax_day_limit' => :'Integer',
        :'default_medicare_wage_limit' => :'Float',
        :'default_pay_date_range' => :'Integer',
        :'default_payor_id' => :'String',
        :'default_ss_tax_day_limit' => :'Integer',
        :'default_ss_wage_limit' => :'Float',
        :'default_state_tax_day_limit' => :'Integer',
        :'default_state_wage_limit' => :'Float',
        :'dental_atp_paid_date_type' => :'String',
        :'diagnostic_code_type_default' => :'String',
        :'disallow_spec_char_in_plan_id' => :'Boolean',
        :'disconnect_call_notes_from_claim_provider' => :'Boolean',
        :'disenroll_adj_reason' => :'Integer',
        :'disenroll_auth_code' => :'String',
        :'display_ppo_null_network' => :'Boolean',
        :'division_length' => :'Float',
        :'dup_password_days' => :'Integer',
        :'duplicate_master_key' => :'Integer',
        :'ed_i_installed' => :'String',
        :'eo_b_disclaimer' => :'String',
        :'eo_b_report_location' => :'String',
        :'e_r_place_of_service' => :'String',
        :'enforce_mfa' => :'Boolean',
        :'enroll_adj_reason' => :'Integer',
        :'entry_date' => :'Time',
        :'entry_user' => :'String',
        :'error_invalid_diag' => :'Boolean',
        :'error_invalid_proc' => :'Boolean',
        :'error_multiple_plan_years' => :'Boolean',
        :'error_paid_to_provider' => :'Boolean',
        :'error_termed_provider' => :'Boolean',
        :'exceed_exhaust_date_ex_code' => :'String',
        :'exceed_return_to_work_ex_code' => :'String',
        :'exceeds_paid_through_ex_code' => :'String',
        :'extended_term_default' => :'Integer',
        :'fax_country_code' => :'String',
        :'fax_number' => :'String',
        :'federal_id' => :'String',
        :'fee_sched_match_claim_year' => :'Boolean',
        :'fee_schedule_ex_codes_manual' => :'Boolean',
        :'fee_schedule_exact_match_fg' => :'Boolean',
        :'filled_tooth_ex_code' => :'String',
        :'first_benefit_auto_selected_ex_code' => :'String',
        :'flex_claim_after_grace_period_ex_code' => :'String',
        :'flex_claim_after_submit_period_ex_code' => :'String',
        :'flex_claim_funds_exhausted_ex_code' => :'String',
        :'force_call_track_note' => :'Boolean',
        :'force_claim_rec_date' => :'Boolean',
        :'force_claim_sub_id' => :'String',
        :'force_latest_enrollment' => :'Boolean',
        :'force_leading_zero_on_rev_code' => :'Boolean',
        :'full_backout_on_void_distribution' => :'Boolean',
        :'full_month_billing' => :'String',
        :'generate_comm_date' => :'Time',
        :'generate_comm_user' => :'String',
        :'generate_inv_date' => :'Time',
        :'generate_inv_user' => :'String',
        :'generate_negative_inv' => :'Boolean',
        :'generate_prem_dist_after' => :'Time',
        :'global_cmu_id' => :'String',
        :'grace_logins' => :'Integer',
        :'group_length' => :'Float',
        :'i_d_card_location' => :'String',
        :'iv_r_cs_country_code' => :'String',
        :'iv_r_cs_phone_number' => :'String',
        :'ignore_care_management_hierarchy_fg' => :'Boolean',
        :'ignore_claim_funding_status_change_msg' => :'Boolean',
        :'inactive_payee_ex_code' => :'String',
        :'include_invalid_enrollments' => :'Boolean',
        :'inv_grace_period' => :'Integer',
        :'inv_grace_period_type' => :'String',
        :'invalid_diag_ex_code' => :'String',
        :'invalid_proc_ex_code' => :'String',
        :'invoice_close_adj_reason' => :'Integer',
        :'invoice_enrolled_by' => :'Integer',
        :'invoice_enrolled_thru' => :'Integer',
        :'invoice_grace_ex_code' => :'String',
        :'invoice_grace_period' => :'Integer',
        :'invoice_remit_account_key' => :'Integer',
        :'invoice_remit_address1' => :'String',
        :'invoice_remit_address2' => :'String',
        :'invoice_remit_city' => :'String',
        :'invoice_remit_country_code' => :'String',
        :'invoice_remit_country_id' => :'String',
        :'invoice_remit_name' => :'String',
        :'invoice_remit_phone_number' => :'String',
        :'invoice_remit_state' => :'String',
        :'invoice_remit_zip_code' => :'String',
        :'lag_time' => :'Integer',
        :'last_age_disenroll' => :'Time',
        :'last_authorization' => :'Integer',
        :'last_billing' => :'Time',
        :'last_case_number' => :'Integer',
        :'last_check_batch' => :'Integer',
        :'last_claim_number' => :'Float',
        :'last_day_worked_range' => :'Integer',
        :'last_encounter' => :'Float',
        :'last_invoice' => :'Float',
        :'lock_auth_review' => :'Boolean',
        :'lock_auth_review_all' => :'Boolean',
        :'log_base_load_call' => :'Boolean',
        :'logo_file' => :'String',
        :'long_state_names' => :'String',
        :'mail_auth_mode' => :'Integer',
        :'mail_password' => :'String',
        :'mail_port' => :'Integer',
        :'mail_server' => :'String',
        :'mail_use_ssl' => :'Boolean',
        :'mail_user' => :'String',
        :'medicare_on_benefit' => :'String',
        :'member_address_dob_not_reqd' => :'Boolean',
        :'member_match_by_name_birth_date' => :'Boolean',
        :'modifier_not_eff_ex_code' => :'String',
        :'multiple_auth_ex_code' => :'String',
        :'name' => :'String',
        :'network_does_not_match_repriced_network_ex_code' => :'String',
        :'new_member_reason' => :'Integer',
        :'note_attachment_db' => :'Boolean',
        :'note_attachment_local_default' => :'String',
        :'note_attachment_remote_default' => :'String',
        :'oo_p_max_ex_code' => :'String',
        :'oo_p_max_ex_code_member' => :'String',
        :'out_of_net_ex_code' => :'String',
        :'overpayment_deduction_type' => :'String',
        :'pc_p_only_ex_code' => :'String',
        :'partial_cap' => :'Boolean',
        :'password_expiration' => :'Integer',
        :'password_minimum' => :'Integer',
        :'pay_period_start_date' => :'Time',
        :'payment_proration' => :'Boolean',
        :'phone_country_code' => :'String',
        :'phone_format' => :'String',
        :'phone_number' => :'String',
        :'place_code_not_setup_ex_code' => :'String',
        :'plan_benefit_override_network_id' => :'String',
        :'plan_length' => :'Float',
        :'policy_forfeiture_grace_period' => :'Integer',
        :'policy_forfeiture_grace_period_type' => :'String',
        :'premium_proration' => :'Boolean',
        :'prevent_suspense_release_by_process_user' => :'Boolean',
        :'primary_account_key' => :'Integer',
        :'process_auths_when_pended' => :'Boolean',
        :'process_auto_cob' => :'Boolean',
        :'processing_mode' => :'String',
        :'prof_atp_paid_date_type' => :'String',
        :'prosthesis_tooth_ex_code' => :'String',
        :'protect_alternate_id' => :'Boolean',
        :'provider_auth_exempt_procedure_ex_code' => :'String',
        :'provider_not_active_auth_code' => :'String',
        :'pulled_tooth_ex_code' => :'String',
        :'qp_a_method_1_ex_code' => :'String',
        :'qp_a_method_2_ex_code' => :'String',
        :'r_x_atp_paid_date_type' => :'String',
        :'reduced_paid_up_default' => :'Integer',
        :'reins_split_claim' => :'Boolean',
        :'repetitive_payment' => :'Boolean',
        :'repriced_line' => :'String',
        :'request_id_card_prompt_enrollment' => :'Boolean',
        :'request_provider_email' => :'String',
        :'request_reassess_email' => :'String',
        :'restrict_npi_federal_id' => :'Boolean',
        :'return_to_work_range' => :'Integer',
        :'scanned_images_folder' => :'String',
        :'set_paid_through' => :'Boolean',
        :'single_refund_check_batch' => :'Boolean',
        :'state' => :'String',
        :'subscriber_id_format' => :'String',
        :'subscriber_length' => :'Float',
        :'system_idle' => :'Integer',
        :'tax_control_location' => :'String',
        :'tax_on_adjudcation_date_fg' => :'Boolean',
        :'temporary_save_criteria_count' => :'Integer',
        :'termed_provider_ex_code' => :'String',
        :'toll_free_country_code' => :'String',
        :'toll_free_phone_number' => :'String',
        :'tooth_activity_ex_code' => :'String',
        :'tooth_chart_type' => :'String',
        :'u_b92_atp_paid_date_type' => :'String',
        :'u_c_price_used_ex_code' => :'String',
        :'u_c_unit_mulitply' => :'Boolean',
        :'unassigned_provider' => :'String',
        :'update_date' => :'Time',
        :'update_user' => :'String',
        :'use_greater_user_amount_limit_fg' => :'Boolean',
        :'use_auth_over_unit_split' => :'Boolean',
        :'use_change_data_capture' => :'Boolean',
        :'use_commission_cluster_hierarchy' => :'Boolean',
        :'use_currency' => :'Boolean',
        :'use_disability_from_date' => :'Boolean',
        :'use_expanded_notes' => :'Boolean',
        :'use_first_match_pricing' => :'Boolean',
        :'use_other_name' => :'String',
        :'use_primary_diag_match' => :'Boolean',
        :'use_primary_diag_match_capitation' => :'Boolean',
        :'use_salary' => :'Boolean',
        :'use_tax_control' => :'Boolean',
        :'use_vba_software_2' => :'Boolean',
        :'use_vb_adjudicate_2' => :'Boolean',
        :'use_zip_code_auto_populate' => :'Boolean',
        :'vba_data_integration' => :'Boolean',
        :'vba_data_integration_dbms' => :'String',
        :'vba_data_integration_db_parm' => :'String',
        :'vba_data_integration_database' => :'String',
        :'vba_data_integration_server' => :'String',
        :'vba_gateway' => :'Boolean',
        :'vba_gateway_dbms' => :'String',
        :'vba_gateway_db_parm' => :'String',
        :'vba_gateway_database' => :'String',
        :'vba_gateway_sftp_host' => :'String',
        :'vba_gateway_sftp_log_file' => :'String',
        :'vba_gateway_sftp_mlst' => :'Boolean',
        :'vba_gateway_sftp_passive' => :'Boolean',
        :'vba_gateway_sftp_password' => :'String',
        :'vba_gateway_sftp_port' => :'Integer',
        :'vba_gateway_sftp_protocol' => :'Integer',
        :'vba_gateway_sftp_user' => :'String',
        :'vba_gateway_server' => :'String',
        :'vbap_i_adjudicate_client_code' => :'String',
        :'vbap_i_adjudicate_client_id' => :'String',
        :'vbap_i_adjudicate_database' => :'String',
        :'vbap_i_claim_queue_url' => :'String',
        :'vbap_i_client_code' => :'String',
        :'vbap_i_field_masking_enabled' => :'Boolean',
        :'vbap_i_ip_whitelist' => :'Boolean',
        :'vba_report_event_timer' => :'Integer',
        :'vba_report_mail_auth_mode' => :'Integer',
        :'vba_report_mail_password' => :'String',
        :'vba_report_mail_port' => :'Integer',
        :'vba_report_mail_server' => :'String',
        :'vba_report_mail_use_ssl' => :'Boolean',
        :'vba_report_mail_user' => :'String',
        :'vba_report_so_count' => :'Integer',
        :'vba_report_series_timer' => :'Integer',
        :'vba_report_status' => :'String',
        :'vba_report_timer' => :'Integer',
        :'vb_adjudicate_so_count' => :'Integer',
        :'vb_adjudicate_status' => :'String',
        :'vb_adjudicate_timer' => :'Integer',
        :'validate_federal_id_on_auth' => :'Boolean',
        :'validate_provider_on_auth' => :'Boolean',
        :'void_backout_use_current_date' => :'Boolean',
        :'volume_max_met_ex_code' => :'String',
        :'volume_min_met_ex_code' => :'String',
        :'workflow_execute_count' => :'Integer',
        :'zelis_eob_code_not_found_ex_code' => :'String',
        :'zelis_edit_code_not_found_ex_code' => :'String',
        :'zelis_in_network_ex_code' => :'String',
        :'zelis_login' => :'String',
        :'zelis_password' => :'String',
        :'zelis_poll' => :'Boolean',
        :'zelis_poll_testing' => :'Boolean',
        :'zelis_url' => :'String',
        :'zip_code' => :'String',
        :'use_vb_adjudicate_benefit_matching' => :'Boolean',
        :'display_member_primary_network' => :'Boolean',
        :'disable_ghostscript' => :'Boolean',
        :'vba_software_end_date' => :'Time',
        :'open_invoice_paid_through' => :'Boolean',
        :'claim_returned_to_batch_ex_code' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'ap_c_schedule',
        :'as_o_percentage',
        :'accident_review_ex_code',
        :'accident_review_plan_benefit_ex_code',
        :'address',
        :'address2',
        :'age_disenroll_reason',
        :'allow_max_at_subscriber',
        :'allow_zero_billed',
        :'anesthesia_round_precision',
        :'anesthesia_round_type',
        :'auth_review_full_path',
        :'auth_review_object',
        :'auth_code_closed',
        :'auth_code_pay_amt_zero',
        :'auth_code_reopen',
        :'auth_code_under_auth_amt',
        :'auth_over_unit_split_ex_code',
        :'auth_penalty_ex_code',
        :'b_r_domain_name',
        :'b_r_site_name',
        :'b_r_site_secret',
        :'b_r_site_user',
        :'base_load_fg',
        :'base_load_pass',
        :'base_load_url',
        :'base_load_user',
        :'beneficiary_age_limit',
        :'beneficiary_age_ex_code',
        :'benefit_cascade_ex_code',
        :'benefit_length',
        :'bridged_tooth_ex_code',
        :'cli_a_certificate_ex_code',
        :'cm_o_installed',
        :'cap_disenroll_adj_reason',
        :'cap_enroll_adj_reason',
        :'cap_enrolled_by',
        :'cap_enrolled_thru',
        :'cap_in_accum',
        :'capitated_service_ex_code',
        :'cash_value_default',
        :'check_stock_location',
        :'checks_max_post_date',
        :'city',
        :'claim_upload_date',
        :'claim_upload_file_location',
        :'claim_upload_schedule',
        :'claim_age_ex_code',
        :'claim_allowed_billed_ex_code',
        :'claim_amt_ex_code',
        :'claim_auth_denied_ex_code',
        :'claim_auth_details_err_ex',
        :'claim_auth_diff_mem_ex',
        :'claim_auth_diff_prov_ex',
        :'claim_auth_exceeded_ex_code',
        :'claim_auth_invalid_date_ex',
        :'claim_auth_not_approved_ex',
        :'claim_auth_proc_exceeded_ex_code',
        :'claim_auth_reqd_ex_code',
        :'claim_ben_not_found_ex_code',
        :'claim_cov_in_net_only_ex_code',
        :'claim_days_allowed',
        :'claim_dead_ex_code',
        :'claim_ded_credit_oon_used_ex_code',
        :'claim_ded_credit_ppo_used_ex_code',
        :'claim_denied_ex_code',
        :'claim_diagnosis_age_ex_code',
        :'claim_diagnosis_gender_ex_code',
        :'claim_dup_error_ex_code',
        :'claim_error_ex_code',
        :'claim_exceed_daily_co_pay_max_ex_code',
        :'claim_exceed_injury_ex_code',
        :'claim_exceed_lifetime_ex_code',
        :'claim_exceed_lifetime_oon_ex_code',
        :'claim_exceed_lifetime_ppo_ex_code',
        :'claim_exceed_maximum_ex_code',
        :'claim_exceed_per_diem_ex_code',
        :'claim_fee_sched_error_ex',
        :'claim_lag_error_ex_code',
        :'claim_late_ex_code',
        :'claim_life_benefit_met_ex_code',
        :'claim_life_plan_met_ex_code',
        :'claim_no_prov_fee_sched',
        :'claim_no_rate_fee_ex_code',
        :'claim_not_adult_dependent',
        :'claim_not_at_place_ex_code',
        :'claim_not_by_prov_ex_code',
        :'claim_not_cov_ex_code',
        :'claim_not_enrolled_ex_code',
        :'claim_not_enrolled_post_ex_code',
        :'claim_not_enrolled_pre_ex_code',
        :'claim_not_student_ex_code',
        :'claim_other_coverage_ex_code',
        :'claim_over_max_ex_code',
        :'claim_over_max_oon_ex_code',
        :'claim_over_max_ppo_ex_code',
        :'claim_pend_age_max',
        :'claim_pend_age_min',
        :'claim_pend_amount',
        :'claim_procedure_age_ex_code',
        :'claim_procedure_gender_ex_code',
        :'claim_service_date_range',
        :'claim_service_outside_enrollment_ex_code',
        :'claim_splits_plan_year_ex_code',
        :'class_length',
        :'client_id',
        :'client_name',
        :'co_ins_max_ex_code',
        :'co_ins_max_ex_code_member',
        :'cogito_app_client_id',
        :'cogito_app_client_secret',
        :'cogito_user_pool_id',
        :'comm_disenroll_adj_reason',
        :'comm_enroll_adj_reason',
        :'comm_enrolled_by',
        :'comm_enrolled_thru',
        :'company_length',
        :'company_short',
        :'company_start_date',
        :'context4_clm_ucr_pct',
        :'context4_clm_ucr_pct_oon',
        :'context4_fee_selector',
        :'context4_fee_selector_oon',
        :'context4_medicare_pct',
        :'context4_medicare_pct_oon',
        :'context4_password',
        :'context4_payor_type',
        :'context4_payor_type_oon',
        :'context4_pct_of_chg',
        :'context4_pct_of_chg_oon',
        :'context4_user_id',
        :'context4_web_uri',
        :'context4_web_uri_delete',
        :'copay_ex_code',
        :'country_id',
        :'credentialing',
        :'crowned_tooth_ex_code',
        :'currency_format',
        :'d_b_version_date',
        :'dr_g_schedule',
        :'database_version',
        :'date_format',
        :'deductible_ex_code',
        :'deductible_max_ex_code',
        :'deductible_max_ex_code_member',
        :'default_1099_flag',
        :'default_auth_code',
        :'default_check_stock',
        :'default_currency_id',
        :'default_eob_report',
        :'default_federal_tax',
        :'default_federal_tax_day_limit',
        :'default_federal_tax_pct',
        :'default_federal_wage_limit',
        :'default_id_card_request_type',
        :'default_invoice_report_definition_key',
        :'default_login_sound',
        :'default_medicare_tax_day_limit',
        :'default_medicare_wage_limit',
        :'default_pay_date_range',
        :'default_payor_id',
        :'default_ss_tax_day_limit',
        :'default_ss_wage_limit',
        :'default_state_tax_day_limit',
        :'default_state_wage_limit',
        :'dental_atp_paid_date_type',
        :'disenroll_adj_reason',
        :'disenroll_auth_code',
        :'division_length',
        :'dup_password_days',
        :'duplicate_master_key',
        :'ed_i_installed',
        :'eo_b_disclaimer',
        :'eo_b_report_location',
        :'e_r_place_of_service',
        :'enroll_adj_reason',
        :'entry_user',
        :'error_paid_to_provider',
        :'exceed_exhaust_date_ex_code',
        :'exceed_return_to_work_ex_code',
        :'exceeds_paid_through_ex_code',
        :'extended_term_default',
        :'fax_country_code',
        :'fax_number',
        :'federal_id',
        :'filled_tooth_ex_code',
        :'first_benefit_auto_selected_ex_code',
        :'flex_claim_after_grace_period_ex_code',
        :'flex_claim_after_submit_period_ex_code',
        :'flex_claim_funds_exhausted_ex_code',
        :'force_claim_sub_id',
        :'generate_comm_date',
        :'generate_comm_user',
        :'generate_inv_date',
        :'generate_inv_user',
        :'generate_prem_dist_after',
        :'global_cmu_id',
        :'grace_logins',
        :'group_length',
        :'i_d_card_location',
        :'iv_r_cs_country_code',
        :'iv_r_cs_phone_number',
        :'inactive_payee_ex_code',
        :'inv_grace_period',
        :'inv_grace_period_type',
        :'invalid_diag_ex_code',
        :'invalid_proc_ex_code',
        :'invoice_close_adj_reason',
        :'invoice_enrolled_thru',
        :'invoice_grace_ex_code',
        :'invoice_grace_period',
        :'invoice_remit_account_key',
        :'invoice_remit_address1',
        :'invoice_remit_address2',
        :'invoice_remit_city',
        :'invoice_remit_country_code',
        :'invoice_remit_country_id',
        :'invoice_remit_name',
        :'invoice_remit_phone_number',
        :'invoice_remit_state',
        :'invoice_remit_zip_code',
        :'last_age_disenroll',
        :'last_authorization',
        :'last_billing',
        :'last_case_number',
        :'last_check_batch',
        :'last_claim_number',
        :'last_day_worked_range',
        :'last_encounter',
        :'last_invoice',
        :'logo_file',
        :'long_state_names',
        :'mail_auth_mode',
        :'mail_password',
        :'mail_port',
        :'mail_server',
        :'mail_user',
        :'modifier_not_eff_ex_code',
        :'multiple_auth_ex_code',
        :'name',
        :'network_does_not_match_repriced_network_ex_code',
        :'new_member_reason',
        :'note_attachment_local_default',
        :'note_attachment_remote_default',
        :'oo_p_max_ex_code',
        :'oo_p_max_ex_code_member',
        :'out_of_net_ex_code',
        :'overpayment_deduction_type',
        :'pc_p_only_ex_code',
        :'password_expiration',
        :'password_minimum',
        :'pay_period_start_date',
        :'phone_country_code',
        :'phone_format',
        :'phone_number',
        :'place_code_not_setup_ex_code',
        :'plan_benefit_override_network_id',
        :'plan_length',
        :'policy_forfeiture_grace_period',
        :'policy_forfeiture_grace_period_type',
        :'primary_account_key',
        :'processing_mode',
        :'prof_atp_paid_date_type',
        :'prosthesis_tooth_ex_code',
        :'provider_auth_exempt_procedure_ex_code',
        :'provider_not_active_auth_code',
        :'pulled_tooth_ex_code',
        :'qp_a_method_1_ex_code',
        :'qp_a_method_2_ex_code',
        :'r_x_atp_paid_date_type',
        :'reduced_paid_up_default',
        :'repetitive_payment',
        :'repriced_line',
        :'request_provider_email',
        :'request_reassess_email',
        :'return_to_work_range',
        :'scanned_images_folder',
        :'state',
        :'subscriber_id_format',
        :'subscriber_length',
        :'system_idle',
        :'tax_control_location',
        :'temporary_save_criteria_count',
        :'termed_provider_ex_code',
        :'toll_free_country_code',
        :'toll_free_phone_number',
        :'tooth_activity_ex_code',
        :'tooth_chart_type',
        :'u_b92_atp_paid_date_type',
        :'u_c_price_used_ex_code',
        :'unassigned_provider',
        :'update_user',
        :'use_other_name',
        :'vba_data_integration_dbms',
        :'vba_data_integration_db_parm',
        :'vba_data_integration_database',
        :'vba_data_integration_server',
        :'vba_gateway_dbms',
        :'vba_gateway_db_parm',
        :'vba_gateway_database',
        :'vba_gateway_sftp_host',
        :'vba_gateway_sftp_log_file',
        :'vba_gateway_sftp_password',
        :'vba_gateway_sftp_port',
        :'vba_gateway_sftp_protocol',
        :'vba_gateway_sftp_user',
        :'vba_gateway_server',
        :'vbap_i_adjudicate_client_code',
        :'vbap_i_adjudicate_client_id',
        :'vbap_i_adjudicate_database',
        :'vbap_i_claim_queue_url',
        :'vbap_i_client_code',
        :'vba_report_event_timer',
        :'vba_report_mail_auth_mode',
        :'vba_report_mail_password',
        :'vba_report_mail_port',
        :'vba_report_mail_server',
        :'vba_report_mail_user',
        :'vba_report_so_count',
        :'vba_report_series_timer',
        :'vba_report_status',
        :'vba_report_timer',
        :'vb_adjudicate_so_count',
        :'vb_adjudicate_status',
        :'vb_adjudicate_timer',
        :'volume_max_met_ex_code',
        :'volume_min_met_ex_code',
        :'workflow_execute_count',
        :'zelis_eob_code_not_found_ex_code',
        :'zelis_edit_code_not_found_ex_code',
        :'zelis_in_network_ex_code',
        :'zelis_login',
        :'zelis_password',
        :'zelis_url',
        :'zip_code',
        :'vba_software_end_date',
        :'claim_returned_to_batch_ex_code'
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `Vba::CompanyData` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `Vba::CompanyData`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'key_value')
        self.key_value = attributes[:'key_value']
      else
        self.key_value = nil
      end

      if attributes.key?(:'ap_c_schedule')
        self.ap_c_schedule = attributes[:'ap_c_schedule']
      end

      if attributes.key?(:'as_o_percentage')
        self.as_o_percentage = attributes[:'as_o_percentage']
      end

      if attributes.key?(:'accident_review_ex_code')
        self.accident_review_ex_code = attributes[:'accident_review_ex_code']
      end

      if attributes.key?(:'accident_review_plan_benefit_ex_code')
        self.accident_review_plan_benefit_ex_code = attributes[:'accident_review_plan_benefit_ex_code']
      end

      if attributes.key?(:'additional_invoice_rates')
        self.additional_invoice_rates = attributes[:'additional_invoice_rates']
      else
        self.additional_invoice_rates = nil
      end

      if attributes.key?(:'address')
        self.address = attributes[:'address']
      end

      if attributes.key?(:'address2')
        self.address2 = attributes[:'address2']
      end

      if attributes.key?(:'adv_password_req')
        self.adv_password_req = attributes[:'adv_password_req']
      else
        self.adv_password_req = nil
      end

      if attributes.key?(:'age_disenroll_reason')
        self.age_disenroll_reason = attributes[:'age_disenroll_reason']
      end

      if attributes.key?(:'allow_apostrophe_in_name')
        self.allow_apostrophe_in_name = attributes[:'allow_apostrophe_in_name']
      else
        self.allow_apostrophe_in_name = nil
      end

      if attributes.key?(:'allow_checks_post_date')
        self.allow_checks_post_date = attributes[:'allow_checks_post_date']
      else
        self.allow_checks_post_date = nil
      end

      if attributes.key?(:'allow_claim_benefit_override')
        self.allow_claim_benefit_override = attributes[:'allow_claim_benefit_override']
      else
        self.allow_claim_benefit_override = nil
      end

      if attributes.key?(:'allow_max_at_subscriber')
        self.allow_max_at_subscriber = attributes[:'allow_max_at_subscriber']
      end

      if attributes.key?(:'allow_oop_on_override')
        self.allow_oop_on_override = attributes[:'allow_oop_on_override']
      else
        self.allow_oop_on_override = nil
      end

      if attributes.key?(:'allow_zero_billed')
        self.allow_zero_billed = attributes[:'allow_zero_billed']
      end

      if attributes.key?(:'anesthesia_by_fee_sched')
        self.anesthesia_by_fee_sched = attributes[:'anesthesia_by_fee_sched']
      else
        self.anesthesia_by_fee_sched = nil
      end

      if attributes.key?(:'anesthesia_round_precision')
        self.anesthesia_round_precision = attributes[:'anesthesia_round_precision']
      end

      if attributes.key?(:'anesthesia_round_type')
        self.anesthesia_round_type = attributes[:'anesthesia_round_type']
      end

      if attributes.key?(:'apply_multiple_benefit_ex_code_manual')
        self.apply_multiple_benefit_ex_code_manual = attributes[:'apply_multiple_benefit_ex_code_manual']
      else
        self.apply_multiple_benefit_ex_code_manual = nil
      end

      if attributes.key?(:'auth_review_full_path')
        self.auth_review_full_path = attributes[:'auth_review_full_path']
      end

      if attributes.key?(:'auth_review_object')
        self.auth_review_object = attributes[:'auth_review_object']
      end

      if attributes.key?(:'auth_code_closed')
        self.auth_code_closed = attributes[:'auth_code_closed']
      end

      if attributes.key?(:'auth_code_pay_amt_zero')
        self.auth_code_pay_amt_zero = attributes[:'auth_code_pay_amt_zero']
      end

      if attributes.key?(:'auth_code_reopen')
        self.auth_code_reopen = attributes[:'auth_code_reopen']
      end

      if attributes.key?(:'auth_code_under_auth_amt')
        self.auth_code_under_auth_amt = attributes[:'auth_code_under_auth_amt']
      end

      if attributes.key?(:'auth_over_unit_split_ex_code')
        self.auth_over_unit_split_ex_code = attributes[:'auth_over_unit_split_ex_code']
      end

      if attributes.key?(:'auth_penalty_ex_code')
        self.auth_penalty_ex_code = attributes[:'auth_penalty_ex_code']
      end

      if attributes.key?(:'auto_adj_return_to_batch')
        self.auto_adj_return_to_batch = attributes[:'auto_adj_return_to_batch']
      else
        self.auto_adj_return_to_batch = nil
      end

      if attributes.key?(:'auto_pay_capitated_claims')
        self.auto_pay_capitated_claims = attributes[:'auto_pay_capitated_claims']
      else
        self.auto_pay_capitated_claims = nil
      end

      if attributes.key?(:'auto_process_adjustment_backout')
        self.auto_process_adjustment_backout = attributes[:'auto_process_adjustment_backout']
      else
        self.auto_process_adjustment_backout = nil
      end

      if attributes.key?(:'auto_term_plan_on_gateway_request')
        self.auto_term_plan_on_gateway_request = attributes[:'auto_term_plan_on_gateway_request']
      else
        self.auto_term_plan_on_gateway_request = nil
      end

      if attributes.key?(:'b_r_domain_name')
        self.b_r_domain_name = attributes[:'b_r_domain_name']
      end

      if attributes.key?(:'b_r_site_name')
        self.b_r_site_name = attributes[:'b_r_site_name']
      end

      if attributes.key?(:'b_r_site_secret')
        self.b_r_site_secret = attributes[:'b_r_site_secret']
      end

      if attributes.key?(:'b_r_site_user')
        self.b_r_site_user = attributes[:'b_r_site_user']
      end

      if attributes.key?(:'base_load_fg')
        self.base_load_fg = attributes[:'base_load_fg']
      end

      if attributes.key?(:'base_load_pass')
        self.base_load_pass = attributes[:'base_load_pass']
      end

      if attributes.key?(:'base_load_service_date_flag')
        self.base_load_service_date_flag = attributes[:'base_load_service_date_flag']
      else
        self.base_load_service_date_flag = nil
      end

      if attributes.key?(:'base_load_url')
        self.base_load_url = attributes[:'base_load_url']
      end

      if attributes.key?(:'base_load_user')
        self.base_load_user = attributes[:'base_load_user']
      end

      if attributes.key?(:'beneficiary_age_limit')
        self.beneficiary_age_limit = attributes[:'beneficiary_age_limit']
      end

      if attributes.key?(:'beneficiary_age_ex_code')
        self.beneficiary_age_ex_code = attributes[:'beneficiary_age_ex_code']
      end

      if attributes.key?(:'benefit_cascade_ex_code')
        self.benefit_cascade_ex_code = attributes[:'benefit_cascade_ex_code']
      end

      if attributes.key?(:'benefit_length')
        self.benefit_length = attributes[:'benefit_length']
      end

      if attributes.key?(:'bridged_tooth_ex_code')
        self.bridged_tooth_ex_code = attributes[:'bridged_tooth_ex_code']
      end

      if attributes.key?(:'ca_s_segment_ben_match')
        self.ca_s_segment_ben_match = attributes[:'ca_s_segment_ben_match']
      else
        self.ca_s_segment_ben_match = nil
      end

      if attributes.key?(:'cli_a_certificate_ex_code')
        self.cli_a_certificate_ex_code = attributes[:'cli_a_certificate_ex_code']
      end

      if attributes.key?(:'cm_o_installed')
        self.cm_o_installed = attributes[:'cm_o_installed']
      end

      if attributes.key?(:'cap_by_service_line')
        self.cap_by_service_line = attributes[:'cap_by_service_line']
      else
        self.cap_by_service_line = nil
      end

      if attributes.key?(:'cap_disenroll_adj_reason')
        self.cap_disenroll_adj_reason = attributes[:'cap_disenroll_adj_reason']
      end

      if attributes.key?(:'cap_enroll_adj_reason')
        self.cap_enroll_adj_reason = attributes[:'cap_enroll_adj_reason']
      end

      if attributes.key?(:'cap_enrolled_by')
        self.cap_enrolled_by = attributes[:'cap_enrolled_by']
      end

      if attributes.key?(:'cap_enrolled_thru')
        self.cap_enrolled_thru = attributes[:'cap_enrolled_thru']
      end

      if attributes.key?(:'cap_in_accum')
        self.cap_in_accum = attributes[:'cap_in_accum']
      end

      if attributes.key?(:'capitated_service_ex_code')
        self.capitated_service_ex_code = attributes[:'capitated_service_ex_code']
      end

      if attributes.key?(:'case_default_report')
        self.case_default_report = attributes[:'case_default_report']
      else
        self.case_default_report = nil
      end

      if attributes.key?(:'cash_value_default')
        self.cash_value_default = attributes[:'cash_value_default']
      end

      if attributes.key?(:'check_payee_address_flag')
        self.check_payee_address_flag = attributes[:'check_payee_address_flag']
      else
        self.check_payee_address_flag = nil
      end

      if attributes.key?(:'check_stock_location')
        self.check_stock_location = attributes[:'check_stock_location']
      end

      if attributes.key?(:'checks_max_post_date')
        self.checks_max_post_date = attributes[:'checks_max_post_date']
      end

      if attributes.key?(:'city')
        self.city = attributes[:'city']
      end

      if attributes.key?(:'claim_upload_date')
        self.claim_upload_date = attributes[:'claim_upload_date']
      end

      if attributes.key?(:'claim_upload_file_location')
        self.claim_upload_file_location = attributes[:'claim_upload_file_location']
      end

      if attributes.key?(:'claim_upload_schedule')
        self.claim_upload_schedule = attributes[:'claim_upload_schedule']
      end

      if attributes.key?(:'claim_age_ex_code')
        self.claim_age_ex_code = attributes[:'claim_age_ex_code']
      end

      if attributes.key?(:'claim_allowed_billed_ex_code')
        self.claim_allowed_billed_ex_code = attributes[:'claim_allowed_billed_ex_code']
      end

      if attributes.key?(:'claim_amt_ex_code')
        self.claim_amt_ex_code = attributes[:'claim_amt_ex_code']
      end

      if attributes.key?(:'claim_auth_denied_ex_code')
        self.claim_auth_denied_ex_code = attributes[:'claim_auth_denied_ex_code']
      end

      if attributes.key?(:'claim_auth_details_err_ex')
        self.claim_auth_details_err_ex = attributes[:'claim_auth_details_err_ex']
      end

      if attributes.key?(:'claim_auth_diff_mem_ex')
        self.claim_auth_diff_mem_ex = attributes[:'claim_auth_diff_mem_ex']
      end

      if attributes.key?(:'claim_auth_diff_prov_ex')
        self.claim_auth_diff_prov_ex = attributes[:'claim_auth_diff_prov_ex']
      end

      if attributes.key?(:'claim_auth_exceeded_ex_code')
        self.claim_auth_exceeded_ex_code = attributes[:'claim_auth_exceeded_ex_code']
      end

      if attributes.key?(:'claim_auth_invalid_date_ex')
        self.claim_auth_invalid_date_ex = attributes[:'claim_auth_invalid_date_ex']
      end

      if attributes.key?(:'claim_auth_not_approved_ex')
        self.claim_auth_not_approved_ex = attributes[:'claim_auth_not_approved_ex']
      end

      if attributes.key?(:'claim_auth_proc_exceeded_ex_code')
        self.claim_auth_proc_exceeded_ex_code = attributes[:'claim_auth_proc_exceeded_ex_code']
      end

      if attributes.key?(:'claim_auth_reqd_ex_code')
        self.claim_auth_reqd_ex_code = attributes[:'claim_auth_reqd_ex_code']
      end

      if attributes.key?(:'claim_ben_not_found_ex_code')
        self.claim_ben_not_found_ex_code = attributes[:'claim_ben_not_found_ex_code']
      end

      if attributes.key?(:'claim_cov_in_net_only_ex_code')
        self.claim_cov_in_net_only_ex_code = attributes[:'claim_cov_in_net_only_ex_code']
      end

      if attributes.key?(:'claim_days_allowed')
        self.claim_days_allowed = attributes[:'claim_days_allowed']
      end

      if attributes.key?(:'claim_dead_ex_code')
        self.claim_dead_ex_code = attributes[:'claim_dead_ex_code']
      end

      if attributes.key?(:'claim_ded_credit_oon_used_ex_code')
        self.claim_ded_credit_oon_used_ex_code = attributes[:'claim_ded_credit_oon_used_ex_code']
      end

      if attributes.key?(:'claim_ded_credit_ppo_used_ex_code')
        self.claim_ded_credit_ppo_used_ex_code = attributes[:'claim_ded_credit_ppo_used_ex_code']
      end

      if attributes.key?(:'claim_denied_ex_code')
        self.claim_denied_ex_code = attributes[:'claim_denied_ex_code']
      end

      if attributes.key?(:'claim_diagnosis_age_ex_code')
        self.claim_diagnosis_age_ex_code = attributes[:'claim_diagnosis_age_ex_code']
      end

      if attributes.key?(:'claim_diagnosis_gender_ex_code')
        self.claim_diagnosis_gender_ex_code = attributes[:'claim_diagnosis_gender_ex_code']
      end

      if attributes.key?(:'claim_dup_error_ex_code')
        self.claim_dup_error_ex_code = attributes[:'claim_dup_error_ex_code']
      end

      if attributes.key?(:'claim_error_ex_code')
        self.claim_error_ex_code = attributes[:'claim_error_ex_code']
      end

      if attributes.key?(:'claim_exceed_daily_co_pay_max_ex_code')
        self.claim_exceed_daily_co_pay_max_ex_code = attributes[:'claim_exceed_daily_co_pay_max_ex_code']
      end

      if attributes.key?(:'claim_exceed_injury_ex_code')
        self.claim_exceed_injury_ex_code = attributes[:'claim_exceed_injury_ex_code']
      end

      if attributes.key?(:'claim_exceed_lifetime_ex_code')
        self.claim_exceed_lifetime_ex_code = attributes[:'claim_exceed_lifetime_ex_code']
      end

      if attributes.key?(:'claim_exceed_lifetime_oon_ex_code')
        self.claim_exceed_lifetime_oon_ex_code = attributes[:'claim_exceed_lifetime_oon_ex_code']
      end

      if attributes.key?(:'claim_exceed_lifetime_ppo_ex_code')
        self.claim_exceed_lifetime_ppo_ex_code = attributes[:'claim_exceed_lifetime_ppo_ex_code']
      end

      if attributes.key?(:'claim_exceed_maximum_ex_code')
        self.claim_exceed_maximum_ex_code = attributes[:'claim_exceed_maximum_ex_code']
      end

      if attributes.key?(:'claim_exceed_per_diem_ex_code')
        self.claim_exceed_per_diem_ex_code = attributes[:'claim_exceed_per_diem_ex_code']
      end

      if attributes.key?(:'claim_fee_sched_error_ex')
        self.claim_fee_sched_error_ex = attributes[:'claim_fee_sched_error_ex']
      end

      if attributes.key?(:'claim_lag_error_ex_code')
        self.claim_lag_error_ex_code = attributes[:'claim_lag_error_ex_code']
      end

      if attributes.key?(:'claim_late_ex_code')
        self.claim_late_ex_code = attributes[:'claim_late_ex_code']
      end

      if attributes.key?(:'claim_life_benefit_met_ex_code')
        self.claim_life_benefit_met_ex_code = attributes[:'claim_life_benefit_met_ex_code']
      end

      if attributes.key?(:'claim_life_plan_met_ex_code')
        self.claim_life_plan_met_ex_code = attributes[:'claim_life_plan_met_ex_code']
      end

      if attributes.key?(:'claim_no_prov_fee_sched')
        self.claim_no_prov_fee_sched = attributes[:'claim_no_prov_fee_sched']
      end

      if attributes.key?(:'claim_no_rate_fee_ex_code')
        self.claim_no_rate_fee_ex_code = attributes[:'claim_no_rate_fee_ex_code']
      end

      if attributes.key?(:'claim_not_adult_dependent')
        self.claim_not_adult_dependent = attributes[:'claim_not_adult_dependent']
      end

      if attributes.key?(:'claim_not_at_place_ex_code')
        self.claim_not_at_place_ex_code = attributes[:'claim_not_at_place_ex_code']
      end

      if attributes.key?(:'claim_not_by_prov_ex_code')
        self.claim_not_by_prov_ex_code = attributes[:'claim_not_by_prov_ex_code']
      end

      if attributes.key?(:'claim_not_cov_ex_code')
        self.claim_not_cov_ex_code = attributes[:'claim_not_cov_ex_code']
      end

      if attributes.key?(:'claim_not_enrolled_ex_code')
        self.claim_not_enrolled_ex_code = attributes[:'claim_not_enrolled_ex_code']
      end

      if attributes.key?(:'claim_not_enrolled_ex_code_null_use_pre_post')
        self.claim_not_enrolled_ex_code_null_use_pre_post = attributes[:'claim_not_enrolled_ex_code_null_use_pre_post']
      else
        self.claim_not_enrolled_ex_code_null_use_pre_post = nil
      end

      if attributes.key?(:'claim_not_enrolled_post_ex_code')
        self.claim_not_enrolled_post_ex_code = attributes[:'claim_not_enrolled_post_ex_code']
      end

      if attributes.key?(:'claim_not_enrolled_pre_ex_code')
        self.claim_not_enrolled_pre_ex_code = attributes[:'claim_not_enrolled_pre_ex_code']
      end

      if attributes.key?(:'claim_not_student_ex_code')
        self.claim_not_student_ex_code = attributes[:'claim_not_student_ex_code']
      end

      if attributes.key?(:'claim_other_coverage_ex_code')
        self.claim_other_coverage_ex_code = attributes[:'claim_other_coverage_ex_code']
      end

      if attributes.key?(:'claim_over_max_ex_code')
        self.claim_over_max_ex_code = attributes[:'claim_over_max_ex_code']
      end

      if attributes.key?(:'claim_over_max_oon_ex_code')
        self.claim_over_max_oon_ex_code = attributes[:'claim_over_max_oon_ex_code']
      end

      if attributes.key?(:'claim_over_max_ppo_ex_code')
        self.claim_over_max_ppo_ex_code = attributes[:'claim_over_max_ppo_ex_code']
      end

      if attributes.key?(:'claim_pend_age_max')
        self.claim_pend_age_max = attributes[:'claim_pend_age_max']
      end

      if attributes.key?(:'claim_pend_age_min')
        self.claim_pend_age_min = attributes[:'claim_pend_age_min']
      end

      if attributes.key?(:'claim_pend_amount')
        self.claim_pend_amount = attributes[:'claim_pend_amount']
      end

      if attributes.key?(:'claim_procedure_age_ex_code')
        self.claim_procedure_age_ex_code = attributes[:'claim_procedure_age_ex_code']
      end

      if attributes.key?(:'claim_procedure_gender_ex_code')
        self.claim_procedure_gender_ex_code = attributes[:'claim_procedure_gender_ex_code']
      end

      if attributes.key?(:'claim_service_date_range')
        self.claim_service_date_range = attributes[:'claim_service_date_range']
      end

      if attributes.key?(:'claim_service_outside_enrollment_ex_code')
        self.claim_service_outside_enrollment_ex_code = attributes[:'claim_service_outside_enrollment_ex_code']
      end

      if attributes.key?(:'claim_splits_plan_year_ex_code')
        self.claim_splits_plan_year_ex_code = attributes[:'claim_splits_plan_year_ex_code']
      end

      if attributes.key?(:'class_length')
        self.class_length = attributes[:'class_length']
      end

      if attributes.key?(:'clear_auth_penalty_ex_code')
        self.clear_auth_penalty_ex_code = attributes[:'clear_auth_penalty_ex_code']
      else
        self.clear_auth_penalty_ex_code = nil
      end

      if attributes.key?(:'client_id')
        self.client_id = attributes[:'client_id']
      end

      if attributes.key?(:'client_name')
        self.client_name = attributes[:'client_name']
      end

      if attributes.key?(:'co_ins_max_ex_code')
        self.co_ins_max_ex_code = attributes[:'co_ins_max_ex_code']
      end

      if attributes.key?(:'co_ins_max_ex_code_member')
        self.co_ins_max_ex_code_member = attributes[:'co_ins_max_ex_code_member']
      end

      if attributes.key?(:'co_pay_by_billed')
        self.co_pay_by_billed = attributes[:'co_pay_by_billed']
      else
        self.co_pay_by_billed = nil
      end

      if attributes.key?(:'cogito_app_client_id')
        self.cogito_app_client_id = attributes[:'cogito_app_client_id']
      end

      if attributes.key?(:'cogito_app_client_secret')
        self.cogito_app_client_secret = attributes[:'cogito_app_client_secret']
      end

      if attributes.key?(:'cogito_user_pool_id')
        self.cogito_user_pool_id = attributes[:'cogito_user_pool_id']
      end

      if attributes.key?(:'combined_notes_report_fg')
        self.combined_notes_report_fg = attributes[:'combined_notes_report_fg']
      else
        self.combined_notes_report_fg = nil
      end

      if attributes.key?(:'comm_disenroll_adj_reason')
        self.comm_disenroll_adj_reason = attributes[:'comm_disenroll_adj_reason']
      end

      if attributes.key?(:'comm_enroll_adj_reason')
        self.comm_enroll_adj_reason = attributes[:'comm_enroll_adj_reason']
      end

      if attributes.key?(:'comm_enrolled_by')
        self.comm_enrolled_by = attributes[:'comm_enrolled_by']
      end

      if attributes.key?(:'comm_enrolled_thru')
        self.comm_enrolled_thru = attributes[:'comm_enrolled_thru']
      end

      if attributes.key?(:'company_length')
        self.company_length = attributes[:'company_length']
      end

      if attributes.key?(:'company_short')
        self.company_short = attributes[:'company_short']
      end

      if attributes.key?(:'company_start_date')
        self.company_start_date = attributes[:'company_start_date']
      end

      if attributes.key?(:'context4_clm_ucr_pct')
        self.context4_clm_ucr_pct = attributes[:'context4_clm_ucr_pct']
      end

      if attributes.key?(:'context4_clm_ucr_pct_oon')
        self.context4_clm_ucr_pct_oon = attributes[:'context4_clm_ucr_pct_oon']
      end

      if attributes.key?(:'context4_fee_selector')
        self.context4_fee_selector = attributes[:'context4_fee_selector']
      end

      if attributes.key?(:'context4_fee_selector_oon')
        self.context4_fee_selector_oon = attributes[:'context4_fee_selector_oon']
      end

      if attributes.key?(:'context4_medicare_pct')
        self.context4_medicare_pct = attributes[:'context4_medicare_pct']
      end

      if attributes.key?(:'context4_medicare_pct_oon')
        self.context4_medicare_pct_oon = attributes[:'context4_medicare_pct_oon']
      end

      if attributes.key?(:'context4_password')
        self.context4_password = attributes[:'context4_password']
      end

      if attributes.key?(:'context4_payor_type')
        self.context4_payor_type = attributes[:'context4_payor_type']
      end

      if attributes.key?(:'context4_payor_type_oon')
        self.context4_payor_type_oon = attributes[:'context4_payor_type_oon']
      end

      if attributes.key?(:'context4_pct_of_chg')
        self.context4_pct_of_chg = attributes[:'context4_pct_of_chg']
      end

      if attributes.key?(:'context4_pct_of_chg_oon')
        self.context4_pct_of_chg_oon = attributes[:'context4_pct_of_chg_oon']
      end

      if attributes.key?(:'context4_plan_price_not_greater_billed_fg')
        self.context4_plan_price_not_greater_billed_fg = attributes[:'context4_plan_price_not_greater_billed_fg']
      else
        self.context4_plan_price_not_greater_billed_fg = nil
      end

      if attributes.key?(:'context4_send_billing_address_fg')
        self.context4_send_billing_address_fg = attributes[:'context4_send_billing_address_fg']
      else
        self.context4_send_billing_address_fg = nil
      end

      if attributes.key?(:'context4_user_id')
        self.context4_user_id = attributes[:'context4_user_id']
      end

      if attributes.key?(:'context4_web_uri')
        self.context4_web_uri = attributes[:'context4_web_uri']
      end

      if attributes.key?(:'context4_web_uri_delete')
        self.context4_web_uri_delete = attributes[:'context4_web_uri_delete']
      end

      if attributes.key?(:'copay_ex_code')
        self.copay_ex_code = attributes[:'copay_ex_code']
      end

      if attributes.key?(:'country_id')
        self.country_id = attributes[:'country_id']
      end

      if attributes.key?(:'credential_by_payee')
        self.credential_by_payee = attributes[:'credential_by_payee']
      else
        self.credential_by_payee = nil
      end

      if attributes.key?(:'credentialing')
        self.credentialing = attributes[:'credentialing']
      end

      if attributes.key?(:'crowned_tooth_ex_code')
        self.crowned_tooth_ex_code = attributes[:'crowned_tooth_ex_code']
      end

      if attributes.key?(:'currency_format')
        self.currency_format = attributes[:'currency_format']
      end

      if attributes.key?(:'d_b_version_date')
        self.d_b_version_date = attributes[:'d_b_version_date']
      end

      if attributes.key?(:'dr_g_schedule')
        self.dr_g_schedule = attributes[:'dr_g_schedule']
      end

      if attributes.key?(:'database_version')
        self.database_version = attributes[:'database_version']
      end

      if attributes.key?(:'date_format')
        self.date_format = attributes[:'date_format']
      end

      if attributes.key?(:'deductible_ex_code')
        self.deductible_ex_code = attributes[:'deductible_ex_code']
      end

      if attributes.key?(:'deductible_max_ex_code')
        self.deductible_max_ex_code = attributes[:'deductible_max_ex_code']
      end

      if attributes.key?(:'deductible_max_ex_code_member')
        self.deductible_max_ex_code_member = attributes[:'deductible_max_ex_code_member']
      end

      if attributes.key?(:'default_1099_flag')
        self.default_1099_flag = attributes[:'default_1099_flag']
      end

      if attributes.key?(:'default_auth_code')
        self.default_auth_code = attributes[:'default_auth_code']
      end

      if attributes.key?(:'default_check_stock')
        self.default_check_stock = attributes[:'default_check_stock']
      end

      if attributes.key?(:'default_currency_id')
        self.default_currency_id = attributes[:'default_currency_id']
      end

      if attributes.key?(:'default_eob_report')
        self.default_eob_report = attributes[:'default_eob_report']
      end

      if attributes.key?(:'default_federal_tax')
        self.default_federal_tax = attributes[:'default_federal_tax']
      end

      if attributes.key?(:'default_federal_tax_day_limit')
        self.default_federal_tax_day_limit = attributes[:'default_federal_tax_day_limit']
      end

      if attributes.key?(:'default_federal_tax_pct')
        self.default_federal_tax_pct = attributes[:'default_federal_tax_pct']
      end

      if attributes.key?(:'default_federal_wage_limit')
        self.default_federal_wage_limit = attributes[:'default_federal_wage_limit']
      end

      if attributes.key?(:'default_id_card_request_type')
        self.default_id_card_request_type = attributes[:'default_id_card_request_type']
      end

      if attributes.key?(:'default_invoice_report_definition_key')
        self.default_invoice_report_definition_key = attributes[:'default_invoice_report_definition_key']
      end

      if attributes.key?(:'default_login_sound')
        self.default_login_sound = attributes[:'default_login_sound']
      end

      if attributes.key?(:'default_medicare_tax_day_limit')
        self.default_medicare_tax_day_limit = attributes[:'default_medicare_tax_day_limit']
      end

      if attributes.key?(:'default_medicare_wage_limit')
        self.default_medicare_wage_limit = attributes[:'default_medicare_wage_limit']
      end

      if attributes.key?(:'default_pay_date_range')
        self.default_pay_date_range = attributes[:'default_pay_date_range']
      end

      if attributes.key?(:'default_payor_id')
        self.default_payor_id = attributes[:'default_payor_id']
      end

      if attributes.key?(:'default_ss_tax_day_limit')
        self.default_ss_tax_day_limit = attributes[:'default_ss_tax_day_limit']
      end

      if attributes.key?(:'default_ss_wage_limit')
        self.default_ss_wage_limit = attributes[:'default_ss_wage_limit']
      end

      if attributes.key?(:'default_state_tax_day_limit')
        self.default_state_tax_day_limit = attributes[:'default_state_tax_day_limit']
      end

      if attributes.key?(:'default_state_wage_limit')
        self.default_state_wage_limit = attributes[:'default_state_wage_limit']
      end

      if attributes.key?(:'dental_atp_paid_date_type')
        self.dental_atp_paid_date_type = attributes[:'dental_atp_paid_date_type']
      end

      if attributes.key?(:'diagnostic_code_type_default')
        self.diagnostic_code_type_default = attributes[:'diagnostic_code_type_default']
      else
        self.diagnostic_code_type_default = nil
      end

      if attributes.key?(:'disallow_spec_char_in_plan_id')
        self.disallow_spec_char_in_plan_id = attributes[:'disallow_spec_char_in_plan_id']
      else
        self.disallow_spec_char_in_plan_id = nil
      end

      if attributes.key?(:'disconnect_call_notes_from_claim_provider')
        self.disconnect_call_notes_from_claim_provider = attributes[:'disconnect_call_notes_from_claim_provider']
      else
        self.disconnect_call_notes_from_claim_provider = nil
      end

      if attributes.key?(:'disenroll_adj_reason')
        self.disenroll_adj_reason = attributes[:'disenroll_adj_reason']
      end

      if attributes.key?(:'disenroll_auth_code')
        self.disenroll_auth_code = attributes[:'disenroll_auth_code']
      end

      if attributes.key?(:'display_ppo_null_network')
        self.display_ppo_null_network = attributes[:'display_ppo_null_network']
      else
        self.display_ppo_null_network = nil
      end

      if attributes.key?(:'division_length')
        self.division_length = attributes[:'division_length']
      end

      if attributes.key?(:'dup_password_days')
        self.dup_password_days = attributes[:'dup_password_days']
      end

      if attributes.key?(:'duplicate_master_key')
        self.duplicate_master_key = attributes[:'duplicate_master_key']
      end

      if attributes.key?(:'ed_i_installed')
        self.ed_i_installed = attributes[:'ed_i_installed']
      end

      if attributes.key?(:'eo_b_disclaimer')
        self.eo_b_disclaimer = attributes[:'eo_b_disclaimer']
      end

      if attributes.key?(:'eo_b_report_location')
        self.eo_b_report_location = attributes[:'eo_b_report_location']
      end

      if attributes.key?(:'e_r_place_of_service')
        self.e_r_place_of_service = attributes[:'e_r_place_of_service']
      end

      if attributes.key?(:'enforce_mfa')
        self.enforce_mfa = attributes[:'enforce_mfa']
      else
        self.enforce_mfa = nil
      end

      if attributes.key?(:'enroll_adj_reason')
        self.enroll_adj_reason = attributes[:'enroll_adj_reason']
      end

      if attributes.key?(:'entry_date')
        self.entry_date = attributes[:'entry_date']
      end

      if attributes.key?(:'entry_user')
        self.entry_user = attributes[:'entry_user']
      end

      if attributes.key?(:'error_invalid_diag')
        self.error_invalid_diag = attributes[:'error_invalid_diag']
      else
        self.error_invalid_diag = nil
      end

      if attributes.key?(:'error_invalid_proc')
        self.error_invalid_proc = attributes[:'error_invalid_proc']
      else
        self.error_invalid_proc = nil
      end

      if attributes.key?(:'error_multiple_plan_years')
        self.error_multiple_plan_years = attributes[:'error_multiple_plan_years']
      else
        self.error_multiple_plan_years = nil
      end

      if attributes.key?(:'error_paid_to_provider')
        self.error_paid_to_provider = attributes[:'error_paid_to_provider']
      end

      if attributes.key?(:'error_termed_provider')
        self.error_termed_provider = attributes[:'error_termed_provider']
      else
        self.error_termed_provider = nil
      end

      if attributes.key?(:'exceed_exhaust_date_ex_code')
        self.exceed_exhaust_date_ex_code = attributes[:'exceed_exhaust_date_ex_code']
      end

      if attributes.key?(:'exceed_return_to_work_ex_code')
        self.exceed_return_to_work_ex_code = attributes[:'exceed_return_to_work_ex_code']
      end

      if attributes.key?(:'exceeds_paid_through_ex_code')
        self.exceeds_paid_through_ex_code = attributes[:'exceeds_paid_through_ex_code']
      end

      if attributes.key?(:'extended_term_default')
        self.extended_term_default = attributes[:'extended_term_default']
      end

      if attributes.key?(:'fax_country_code')
        self.fax_country_code = attributes[:'fax_country_code']
      end

      if attributes.key?(:'fax_number')
        self.fax_number = attributes[:'fax_number']
      end

      if attributes.key?(:'federal_id')
        self.federal_id = attributes[:'federal_id']
      end

      if attributes.key?(:'fee_sched_match_claim_year')
        self.fee_sched_match_claim_year = attributes[:'fee_sched_match_claim_year']
      else
        self.fee_sched_match_claim_year = nil
      end

      if attributes.key?(:'fee_schedule_ex_codes_manual')
        self.fee_schedule_ex_codes_manual = attributes[:'fee_schedule_ex_codes_manual']
      else
        self.fee_schedule_ex_codes_manual = nil
      end

      if attributes.key?(:'fee_schedule_exact_match_fg')
        self.fee_schedule_exact_match_fg = attributes[:'fee_schedule_exact_match_fg']
      else
        self.fee_schedule_exact_match_fg = nil
      end

      if attributes.key?(:'filled_tooth_ex_code')
        self.filled_tooth_ex_code = attributes[:'filled_tooth_ex_code']
      end

      if attributes.key?(:'first_benefit_auto_selected_ex_code')
        self.first_benefit_auto_selected_ex_code = attributes[:'first_benefit_auto_selected_ex_code']
      end

      if attributes.key?(:'flex_claim_after_grace_period_ex_code')
        self.flex_claim_after_grace_period_ex_code = attributes[:'flex_claim_after_grace_period_ex_code']
      end

      if attributes.key?(:'flex_claim_after_submit_period_ex_code')
        self.flex_claim_after_submit_period_ex_code = attributes[:'flex_claim_after_submit_period_ex_code']
      end

      if attributes.key?(:'flex_claim_funds_exhausted_ex_code')
        self.flex_claim_funds_exhausted_ex_code = attributes[:'flex_claim_funds_exhausted_ex_code']
      end

      if attributes.key?(:'force_call_track_note')
        self.force_call_track_note = attributes[:'force_call_track_note']
      else
        self.force_call_track_note = nil
      end

      if attributes.key?(:'force_claim_rec_date')
        self.force_claim_rec_date = attributes[:'force_claim_rec_date']
      else
        self.force_claim_rec_date = nil
      end

      if attributes.key?(:'force_claim_sub_id')
        self.force_claim_sub_id = attributes[:'force_claim_sub_id']
      end

      if attributes.key?(:'force_latest_enrollment')
        self.force_latest_enrollment = attributes[:'force_latest_enrollment']
      else
        self.force_latest_enrollment = nil
      end

      if attributes.key?(:'force_leading_zero_on_rev_code')
        self.force_leading_zero_on_rev_code = attributes[:'force_leading_zero_on_rev_code']
      else
        self.force_leading_zero_on_rev_code = nil
      end

      if attributes.key?(:'full_backout_on_void_distribution')
        self.full_backout_on_void_distribution = attributes[:'full_backout_on_void_distribution']
      else
        self.full_backout_on_void_distribution = nil
      end

      if attributes.key?(:'full_month_billing')
        self.full_month_billing = attributes[:'full_month_billing']
      else
        self.full_month_billing = nil
      end

      if attributes.key?(:'generate_comm_date')
        self.generate_comm_date = attributes[:'generate_comm_date']
      end

      if attributes.key?(:'generate_comm_user')
        self.generate_comm_user = attributes[:'generate_comm_user']
      end

      if attributes.key?(:'generate_inv_date')
        self.generate_inv_date = attributes[:'generate_inv_date']
      end

      if attributes.key?(:'generate_inv_user')
        self.generate_inv_user = attributes[:'generate_inv_user']
      end

      if attributes.key?(:'generate_negative_inv')
        self.generate_negative_inv = attributes[:'generate_negative_inv']
      else
        self.generate_negative_inv = nil
      end

      if attributes.key?(:'generate_prem_dist_after')
        self.generate_prem_dist_after = attributes[:'generate_prem_dist_after']
      end

      if attributes.key?(:'global_cmu_id')
        self.global_cmu_id = attributes[:'global_cmu_id']
      end

      if attributes.key?(:'grace_logins')
        self.grace_logins = attributes[:'grace_logins']
      end

      if attributes.key?(:'group_length')
        self.group_length = attributes[:'group_length']
      end

      if attributes.key?(:'i_d_card_location')
        self.i_d_card_location = attributes[:'i_d_card_location']
      end

      if attributes.key?(:'iv_r_cs_country_code')
        self.iv_r_cs_country_code = attributes[:'iv_r_cs_country_code']
      end

      if attributes.key?(:'iv_r_cs_phone_number')
        self.iv_r_cs_phone_number = attributes[:'iv_r_cs_phone_number']
      end

      if attributes.key?(:'ignore_care_management_hierarchy_fg')
        self.ignore_care_management_hierarchy_fg = attributes[:'ignore_care_management_hierarchy_fg']
      else
        self.ignore_care_management_hierarchy_fg = nil
      end

      if attributes.key?(:'ignore_claim_funding_status_change_msg')
        self.ignore_claim_funding_status_change_msg = attributes[:'ignore_claim_funding_status_change_msg']
      else
        self.ignore_claim_funding_status_change_msg = nil
      end

      if attributes.key?(:'inactive_payee_ex_code')
        self.inactive_payee_ex_code = attributes[:'inactive_payee_ex_code']
      end

      if attributes.key?(:'include_invalid_enrollments')
        self.include_invalid_enrollments = attributes[:'include_invalid_enrollments']
      else
        self.include_invalid_enrollments = nil
      end

      if attributes.key?(:'inv_grace_period')
        self.inv_grace_period = attributes[:'inv_grace_period']
      end

      if attributes.key?(:'inv_grace_period_type')
        self.inv_grace_period_type = attributes[:'inv_grace_period_type']
      end

      if attributes.key?(:'invalid_diag_ex_code')
        self.invalid_diag_ex_code = attributes[:'invalid_diag_ex_code']
      end

      if attributes.key?(:'invalid_proc_ex_code')
        self.invalid_proc_ex_code = attributes[:'invalid_proc_ex_code']
      end

      if attributes.key?(:'invoice_close_adj_reason')
        self.invoice_close_adj_reason = attributes[:'invoice_close_adj_reason']
      end

      if attributes.key?(:'invoice_enrolled_by')
        self.invoice_enrolled_by = attributes[:'invoice_enrolled_by']
      else
        self.invoice_enrolled_by = nil
      end

      if attributes.key?(:'invoice_enrolled_thru')
        self.invoice_enrolled_thru = attributes[:'invoice_enrolled_thru']
      end

      if attributes.key?(:'invoice_grace_ex_code')
        self.invoice_grace_ex_code = attributes[:'invoice_grace_ex_code']
      end

      if attributes.key?(:'invoice_grace_period')
        self.invoice_grace_period = attributes[:'invoice_grace_period']
      end

      if attributes.key?(:'invoice_remit_account_key')
        self.invoice_remit_account_key = attributes[:'invoice_remit_account_key']
      end

      if attributes.key?(:'invoice_remit_address1')
        self.invoice_remit_address1 = attributes[:'invoice_remit_address1']
      end

      if attributes.key?(:'invoice_remit_address2')
        self.invoice_remit_address2 = attributes[:'invoice_remit_address2']
      end

      if attributes.key?(:'invoice_remit_city')
        self.invoice_remit_city = attributes[:'invoice_remit_city']
      end

      if attributes.key?(:'invoice_remit_country_code')
        self.invoice_remit_country_code = attributes[:'invoice_remit_country_code']
      end

      if attributes.key?(:'invoice_remit_country_id')
        self.invoice_remit_country_id = attributes[:'invoice_remit_country_id']
      end

      if attributes.key?(:'invoice_remit_name')
        self.invoice_remit_name = attributes[:'invoice_remit_name']
      end

      if attributes.key?(:'invoice_remit_phone_number')
        self.invoice_remit_phone_number = attributes[:'invoice_remit_phone_number']
      end

      if attributes.key?(:'invoice_remit_state')
        self.invoice_remit_state = attributes[:'invoice_remit_state']
      end

      if attributes.key?(:'invoice_remit_zip_code')
        self.invoice_remit_zip_code = attributes[:'invoice_remit_zip_code']
      end

      if attributes.key?(:'lag_time')
        self.lag_time = attributes[:'lag_time']
      else
        self.lag_time = nil
      end

      if attributes.key?(:'last_age_disenroll')
        self.last_age_disenroll = attributes[:'last_age_disenroll']
      end

      if attributes.key?(:'last_authorization')
        self.last_authorization = attributes[:'last_authorization']
      end

      if attributes.key?(:'last_billing')
        self.last_billing = attributes[:'last_billing']
      end

      if attributes.key?(:'last_case_number')
        self.last_case_number = attributes[:'last_case_number']
      end

      if attributes.key?(:'last_check_batch')
        self.last_check_batch = attributes[:'last_check_batch']
      end

      if attributes.key?(:'last_claim_number')
        self.last_claim_number = attributes[:'last_claim_number']
      end

      if attributes.key?(:'last_day_worked_range')
        self.last_day_worked_range = attributes[:'last_day_worked_range']
      end

      if attributes.key?(:'last_encounter')
        self.last_encounter = attributes[:'last_encounter']
      end

      if attributes.key?(:'last_invoice')
        self.last_invoice = attributes[:'last_invoice']
      end

      if attributes.key?(:'lock_auth_review')
        self.lock_auth_review = attributes[:'lock_auth_review']
      else
        self.lock_auth_review = nil
      end

      if attributes.key?(:'lock_auth_review_all')
        self.lock_auth_review_all = attributes[:'lock_auth_review_all']
      else
        self.lock_auth_review_all = nil
      end

      if attributes.key?(:'log_base_load_call')
        self.log_base_load_call = attributes[:'log_base_load_call']
      else
        self.log_base_load_call = nil
      end

      if attributes.key?(:'logo_file')
        self.logo_file = attributes[:'logo_file']
      end

      if attributes.key?(:'long_state_names')
        self.long_state_names = attributes[:'long_state_names']
      end

      if attributes.key?(:'mail_auth_mode')
        self.mail_auth_mode = attributes[:'mail_auth_mode']
      end

      if attributes.key?(:'mail_password')
        self.mail_password = attributes[:'mail_password']
      end

      if attributes.key?(:'mail_port')
        self.mail_port = attributes[:'mail_port']
      end

      if attributes.key?(:'mail_server')
        self.mail_server = attributes[:'mail_server']
      end

      if attributes.key?(:'mail_use_ssl')
        self.mail_use_ssl = attributes[:'mail_use_ssl']
      else
        self.mail_use_ssl = nil
      end

      if attributes.key?(:'mail_user')
        self.mail_user = attributes[:'mail_user']
      end

      if attributes.key?(:'medicare_on_benefit')
        self.medicare_on_benefit = attributes[:'medicare_on_benefit']
      else
        self.medicare_on_benefit = nil
      end

      if attributes.key?(:'member_address_dob_not_reqd')
        self.member_address_dob_not_reqd = attributes[:'member_address_dob_not_reqd']
      else
        self.member_address_dob_not_reqd = nil
      end

      if attributes.key?(:'member_match_by_name_birth_date')
        self.member_match_by_name_birth_date = attributes[:'member_match_by_name_birth_date']
      else
        self.member_match_by_name_birth_date = nil
      end

      if attributes.key?(:'modifier_not_eff_ex_code')
        self.modifier_not_eff_ex_code = attributes[:'modifier_not_eff_ex_code']
      end

      if attributes.key?(:'multiple_auth_ex_code')
        self.multiple_auth_ex_code = attributes[:'multiple_auth_ex_code']
      end

      if attributes.key?(:'name')
        self.name = attributes[:'name']
      end

      if attributes.key?(:'network_does_not_match_repriced_network_ex_code')
        self.network_does_not_match_repriced_network_ex_code = attributes[:'network_does_not_match_repriced_network_ex_code']
      end

      if attributes.key?(:'new_member_reason')
        self.new_member_reason = attributes[:'new_member_reason']
      end

      if attributes.key?(:'note_attachment_db')
        self.note_attachment_db = attributes[:'note_attachment_db']
      else
        self.note_attachment_db = nil
      end

      if attributes.key?(:'note_attachment_local_default')
        self.note_attachment_local_default = attributes[:'note_attachment_local_default']
      end

      if attributes.key?(:'note_attachment_remote_default')
        self.note_attachment_remote_default = attributes[:'note_attachment_remote_default']
      end

      if attributes.key?(:'oo_p_max_ex_code')
        self.oo_p_max_ex_code = attributes[:'oo_p_max_ex_code']
      end

      if attributes.key?(:'oo_p_max_ex_code_member')
        self.oo_p_max_ex_code_member = attributes[:'oo_p_max_ex_code_member']
      end

      if attributes.key?(:'out_of_net_ex_code')
        self.out_of_net_ex_code = attributes[:'out_of_net_ex_code']
      end

      if attributes.key?(:'overpayment_deduction_type')
        self.overpayment_deduction_type = attributes[:'overpayment_deduction_type']
      end

      if attributes.key?(:'pc_p_only_ex_code')
        self.pc_p_only_ex_code = attributes[:'pc_p_only_ex_code']
      end

      if attributes.key?(:'partial_cap')
        self.partial_cap = attributes[:'partial_cap']
      else
        self.partial_cap = nil
      end

      if attributes.key?(:'password_expiration')
        self.password_expiration = attributes[:'password_expiration']
      end

      if attributes.key?(:'password_minimum')
        self.password_minimum = attributes[:'password_minimum']
      end

      if attributes.key?(:'pay_period_start_date')
        self.pay_period_start_date = attributes[:'pay_period_start_date']
      end

      if attributes.key?(:'payment_proration')
        self.payment_proration = attributes[:'payment_proration']
      else
        self.payment_proration = nil
      end

      if attributes.key?(:'phone_country_code')
        self.phone_country_code = attributes[:'phone_country_code']
      end

      if attributes.key?(:'phone_format')
        self.phone_format = attributes[:'phone_format']
      end

      if attributes.key?(:'phone_number')
        self.phone_number = attributes[:'phone_number']
      end

      if attributes.key?(:'place_code_not_setup_ex_code')
        self.place_code_not_setup_ex_code = attributes[:'place_code_not_setup_ex_code']
      end

      if attributes.key?(:'plan_benefit_override_network_id')
        self.plan_benefit_override_network_id = attributes[:'plan_benefit_override_network_id']
      end

      if attributes.key?(:'plan_length')
        self.plan_length = attributes[:'plan_length']
      end

      if attributes.key?(:'policy_forfeiture_grace_period')
        self.policy_forfeiture_grace_period = attributes[:'policy_forfeiture_grace_period']
      end

      if attributes.key?(:'policy_forfeiture_grace_period_type')
        self.policy_forfeiture_grace_period_type = attributes[:'policy_forfeiture_grace_period_type']
      end

      if attributes.key?(:'premium_proration')
        self.premium_proration = attributes[:'premium_proration']
      else
        self.premium_proration = nil
      end

      if attributes.key?(:'prevent_suspense_release_by_process_user')
        self.prevent_suspense_release_by_process_user = attributes[:'prevent_suspense_release_by_process_user']
      else
        self.prevent_suspense_release_by_process_user = nil
      end

      if attributes.key?(:'primary_account_key')
        self.primary_account_key = attributes[:'primary_account_key']
      end

      if attributes.key?(:'process_auths_when_pended')
        self.process_auths_when_pended = attributes[:'process_auths_when_pended']
      else
        self.process_auths_when_pended = nil
      end

      if attributes.key?(:'process_auto_cob')
        self.process_auto_cob = attributes[:'process_auto_cob']
      else
        self.process_auto_cob = nil
      end

      if attributes.key?(:'processing_mode')
        self.processing_mode = attributes[:'processing_mode']
      end

      if attributes.key?(:'prof_atp_paid_date_type')
        self.prof_atp_paid_date_type = attributes[:'prof_atp_paid_date_type']
      end

      if attributes.key?(:'prosthesis_tooth_ex_code')
        self.prosthesis_tooth_ex_code = attributes[:'prosthesis_tooth_ex_code']
      end

      if attributes.key?(:'protect_alternate_id')
        self.protect_alternate_id = attributes[:'protect_alternate_id']
      else
        self.protect_alternate_id = nil
      end

      if attributes.key?(:'provider_auth_exempt_procedure_ex_code')
        self.provider_auth_exempt_procedure_ex_code = attributes[:'provider_auth_exempt_procedure_ex_code']
      end

      if attributes.key?(:'provider_not_active_auth_code')
        self.provider_not_active_auth_code = attributes[:'provider_not_active_auth_code']
      end

      if attributes.key?(:'pulled_tooth_ex_code')
        self.pulled_tooth_ex_code = attributes[:'pulled_tooth_ex_code']
      end

      if attributes.key?(:'qp_a_method_1_ex_code')
        self.qp_a_method_1_ex_code = attributes[:'qp_a_method_1_ex_code']
      end

      if attributes.key?(:'qp_a_method_2_ex_code')
        self.qp_a_method_2_ex_code = attributes[:'qp_a_method_2_ex_code']
      end

      if attributes.key?(:'r_x_atp_paid_date_type')
        self.r_x_atp_paid_date_type = attributes[:'r_x_atp_paid_date_type']
      end

      if attributes.key?(:'reduced_paid_up_default')
        self.reduced_paid_up_default = attributes[:'reduced_paid_up_default']
      end

      if attributes.key?(:'reins_split_claim')
        self.reins_split_claim = attributes[:'reins_split_claim']
      else
        self.reins_split_claim = nil
      end

      if attributes.key?(:'repetitive_payment')
        self.repetitive_payment = attributes[:'repetitive_payment']
      end

      if attributes.key?(:'repriced_line')
        self.repriced_line = attributes[:'repriced_line']
      end

      if attributes.key?(:'request_id_card_prompt_enrollment')
        self.request_id_card_prompt_enrollment = attributes[:'request_id_card_prompt_enrollment']
      else
        self.request_id_card_prompt_enrollment = nil
      end

      if attributes.key?(:'request_provider_email')
        self.request_provider_email = attributes[:'request_provider_email']
      end

      if attributes.key?(:'request_reassess_email')
        self.request_reassess_email = attributes[:'request_reassess_email']
      end

      if attributes.key?(:'restrict_npi_federal_id')
        self.restrict_npi_federal_id = attributes[:'restrict_npi_federal_id']
      else
        self.restrict_npi_federal_id = nil
      end

      if attributes.key?(:'return_to_work_range')
        self.return_to_work_range = attributes[:'return_to_work_range']
      end

      if attributes.key?(:'scanned_images_folder')
        self.scanned_images_folder = attributes[:'scanned_images_folder']
      end

      if attributes.key?(:'set_paid_through')
        self.set_paid_through = attributes[:'set_paid_through']
      else
        self.set_paid_through = nil
      end

      if attributes.key?(:'single_refund_check_batch')
        self.single_refund_check_batch = attributes[:'single_refund_check_batch']
      else
        self.single_refund_check_batch = nil
      end

      if attributes.key?(:'state')
        self.state = attributes[:'state']
      end

      if attributes.key?(:'subscriber_id_format')
        self.subscriber_id_format = attributes[:'subscriber_id_format']
      end

      if attributes.key?(:'subscriber_length')
        self.subscriber_length = attributes[:'subscriber_length']
      end

      if attributes.key?(:'system_idle')
        self.system_idle = attributes[:'system_idle']
      end

      if attributes.key?(:'tax_control_location')
        self.tax_control_location = attributes[:'tax_control_location']
      end

      if attributes.key?(:'tax_on_adjudcation_date_fg')
        self.tax_on_adjudcation_date_fg = attributes[:'tax_on_adjudcation_date_fg']
      else
        self.tax_on_adjudcation_date_fg = nil
      end

      if attributes.key?(:'temporary_save_criteria_count')
        self.temporary_save_criteria_count = attributes[:'temporary_save_criteria_count']
      end

      if attributes.key?(:'termed_provider_ex_code')
        self.termed_provider_ex_code = attributes[:'termed_provider_ex_code']
      end

      if attributes.key?(:'toll_free_country_code')
        self.toll_free_country_code = attributes[:'toll_free_country_code']
      end

      if attributes.key?(:'toll_free_phone_number')
        self.toll_free_phone_number = attributes[:'toll_free_phone_number']
      end

      if attributes.key?(:'tooth_activity_ex_code')
        self.tooth_activity_ex_code = attributes[:'tooth_activity_ex_code']
      end

      if attributes.key?(:'tooth_chart_type')
        self.tooth_chart_type = attributes[:'tooth_chart_type']
      end

      if attributes.key?(:'u_b92_atp_paid_date_type')
        self.u_b92_atp_paid_date_type = attributes[:'u_b92_atp_paid_date_type']
      end

      if attributes.key?(:'u_c_price_used_ex_code')
        self.u_c_price_used_ex_code = attributes[:'u_c_price_used_ex_code']
      end

      if attributes.key?(:'u_c_unit_mulitply')
        self.u_c_unit_mulitply = attributes[:'u_c_unit_mulitply']
      else
        self.u_c_unit_mulitply = nil
      end

      if attributes.key?(:'unassigned_provider')
        self.unassigned_provider = attributes[:'unassigned_provider']
      end

      if attributes.key?(:'update_date')
        self.update_date = attributes[:'update_date']
      end

      if attributes.key?(:'update_user')
        self.update_user = attributes[:'update_user']
      end

      if attributes.key?(:'use_greater_user_amount_limit_fg')
        self.use_greater_user_amount_limit_fg = attributes[:'use_greater_user_amount_limit_fg']
      else
        self.use_greater_user_amount_limit_fg = nil
      end

      if attributes.key?(:'use_auth_over_unit_split')
        self.use_auth_over_unit_split = attributes[:'use_auth_over_unit_split']
      else
        self.use_auth_over_unit_split = nil
      end

      if attributes.key?(:'use_change_data_capture')
        self.use_change_data_capture = attributes[:'use_change_data_capture']
      else
        self.use_change_data_capture = nil
      end

      if attributes.key?(:'use_commission_cluster_hierarchy')
        self.use_commission_cluster_hierarchy = attributes[:'use_commission_cluster_hierarchy']
      else
        self.use_commission_cluster_hierarchy = nil
      end

      if attributes.key?(:'use_currency')
        self.use_currency = attributes[:'use_currency']
      else
        self.use_currency = nil
      end

      if attributes.key?(:'use_disability_from_date')
        self.use_disability_from_date = attributes[:'use_disability_from_date']
      else
        self.use_disability_from_date = nil
      end

      if attributes.key?(:'use_expanded_notes')
        self.use_expanded_notes = attributes[:'use_expanded_notes']
      else
        self.use_expanded_notes = nil
      end

      if attributes.key?(:'use_first_match_pricing')
        self.use_first_match_pricing = attributes[:'use_first_match_pricing']
      else
        self.use_first_match_pricing = nil
      end

      if attributes.key?(:'use_other_name')
        self.use_other_name = attributes[:'use_other_name']
      end

      if attributes.key?(:'use_primary_diag_match')
        self.use_primary_diag_match = attributes[:'use_primary_diag_match']
      else
        self.use_primary_diag_match = nil
      end

      if attributes.key?(:'use_primary_diag_match_capitation')
        self.use_primary_diag_match_capitation = attributes[:'use_primary_diag_match_capitation']
      else
        self.use_primary_diag_match_capitation = nil
      end

      if attributes.key?(:'use_salary')
        self.use_salary = attributes[:'use_salary']
      else
        self.use_salary = nil
      end

      if attributes.key?(:'use_tax_control')
        self.use_tax_control = attributes[:'use_tax_control']
      else
        self.use_tax_control = nil
      end

      if attributes.key?(:'use_vba_software_2')
        self.use_vba_software_2 = attributes[:'use_vba_software_2']
      else
        self.use_vba_software_2 = nil
      end

      if attributes.key?(:'use_vb_adjudicate_2')
        self.use_vb_adjudicate_2 = attributes[:'use_vb_adjudicate_2']
      else
        self.use_vb_adjudicate_2 = nil
      end

      if attributes.key?(:'use_zip_code_auto_populate')
        self.use_zip_code_auto_populate = attributes[:'use_zip_code_auto_populate']
      else
        self.use_zip_code_auto_populate = nil
      end

      if attributes.key?(:'vba_data_integration')
        self.vba_data_integration = attributes[:'vba_data_integration']
      else
        self.vba_data_integration = nil
      end

      if attributes.key?(:'vba_data_integration_dbms')
        self.vba_data_integration_dbms = attributes[:'vba_data_integration_dbms']
      end

      if attributes.key?(:'vba_data_integration_db_parm')
        self.vba_data_integration_db_parm = attributes[:'vba_data_integration_db_parm']
      end

      if attributes.key?(:'vba_data_integration_database')
        self.vba_data_integration_database = attributes[:'vba_data_integration_database']
      end

      if attributes.key?(:'vba_data_integration_server')
        self.vba_data_integration_server = attributes[:'vba_data_integration_server']
      end

      if attributes.key?(:'vba_gateway')
        self.vba_gateway = attributes[:'vba_gateway']
      else
        self.vba_gateway = nil
      end

      if attributes.key?(:'vba_gateway_dbms')
        self.vba_gateway_dbms = attributes[:'vba_gateway_dbms']
      end

      if attributes.key?(:'vba_gateway_db_parm')
        self.vba_gateway_db_parm = attributes[:'vba_gateway_db_parm']
      end

      if attributes.key?(:'vba_gateway_database')
        self.vba_gateway_database = attributes[:'vba_gateway_database']
      end

      if attributes.key?(:'vba_gateway_sftp_host')
        self.vba_gateway_sftp_host = attributes[:'vba_gateway_sftp_host']
      end

      if attributes.key?(:'vba_gateway_sftp_log_file')
        self.vba_gateway_sftp_log_file = attributes[:'vba_gateway_sftp_log_file']
      end

      if attributes.key?(:'vba_gateway_sftp_mlst')
        self.vba_gateway_sftp_mlst = attributes[:'vba_gateway_sftp_mlst']
      else
        self.vba_gateway_sftp_mlst = nil
      end

      if attributes.key?(:'vba_gateway_sftp_passive')
        self.vba_gateway_sftp_passive = attributes[:'vba_gateway_sftp_passive']
      else
        self.vba_gateway_sftp_passive = nil
      end

      if attributes.key?(:'vba_gateway_sftp_password')
        self.vba_gateway_sftp_password = attributes[:'vba_gateway_sftp_password']
      end

      if attributes.key?(:'vba_gateway_sftp_port')
        self.vba_gateway_sftp_port = attributes[:'vba_gateway_sftp_port']
      end

      if attributes.key?(:'vba_gateway_sftp_protocol')
        self.vba_gateway_sftp_protocol = attributes[:'vba_gateway_sftp_protocol']
      end

      if attributes.key?(:'vba_gateway_sftp_user')
        self.vba_gateway_sftp_user = attributes[:'vba_gateway_sftp_user']
      end

      if attributes.key?(:'vba_gateway_server')
        self.vba_gateway_server = attributes[:'vba_gateway_server']
      end

      if attributes.key?(:'vbap_i_adjudicate_client_code')
        self.vbap_i_adjudicate_client_code = attributes[:'vbap_i_adjudicate_client_code']
      end

      if attributes.key?(:'vbap_i_adjudicate_client_id')
        self.vbap_i_adjudicate_client_id = attributes[:'vbap_i_adjudicate_client_id']
      end

      if attributes.key?(:'vbap_i_adjudicate_database')
        self.vbap_i_adjudicate_database = attributes[:'vbap_i_adjudicate_database']
      end

      if attributes.key?(:'vbap_i_claim_queue_url')
        self.vbap_i_claim_queue_url = attributes[:'vbap_i_claim_queue_url']
      end

      if attributes.key?(:'vbap_i_client_code')
        self.vbap_i_client_code = attributes[:'vbap_i_client_code']
      end

      if attributes.key?(:'vbap_i_field_masking_enabled')
        self.vbap_i_field_masking_enabled = attributes[:'vbap_i_field_masking_enabled']
      else
        self.vbap_i_field_masking_enabled = nil
      end

      if attributes.key?(:'vbap_i_ip_whitelist')
        self.vbap_i_ip_whitelist = attributes[:'vbap_i_ip_whitelist']
      else
        self.vbap_i_ip_whitelist = nil
      end

      if attributes.key?(:'vba_report_event_timer')
        self.vba_report_event_timer = attributes[:'vba_report_event_timer']
      end

      if attributes.key?(:'vba_report_mail_auth_mode')
        self.vba_report_mail_auth_mode = attributes[:'vba_report_mail_auth_mode']
      end

      if attributes.key?(:'vba_report_mail_password')
        self.vba_report_mail_password = attributes[:'vba_report_mail_password']
      end

      if attributes.key?(:'vba_report_mail_port')
        self.vba_report_mail_port = attributes[:'vba_report_mail_port']
      end

      if attributes.key?(:'vba_report_mail_server')
        self.vba_report_mail_server = attributes[:'vba_report_mail_server']
      end

      if attributes.key?(:'vba_report_mail_use_ssl')
        self.vba_report_mail_use_ssl = attributes[:'vba_report_mail_use_ssl']
      else
        self.vba_report_mail_use_ssl = nil
      end

      if attributes.key?(:'vba_report_mail_user')
        self.vba_report_mail_user = attributes[:'vba_report_mail_user']
      end

      if attributes.key?(:'vba_report_so_count')
        self.vba_report_so_count = attributes[:'vba_report_so_count']
      end

      if attributes.key?(:'vba_report_series_timer')
        self.vba_report_series_timer = attributes[:'vba_report_series_timer']
      end

      if attributes.key?(:'vba_report_status')
        self.vba_report_status = attributes[:'vba_report_status']
      end

      if attributes.key?(:'vba_report_timer')
        self.vba_report_timer = attributes[:'vba_report_timer']
      end

      if attributes.key?(:'vb_adjudicate_so_count')
        self.vb_adjudicate_so_count = attributes[:'vb_adjudicate_so_count']
      end

      if attributes.key?(:'vb_adjudicate_status')
        self.vb_adjudicate_status = attributes[:'vb_adjudicate_status']
      end

      if attributes.key?(:'vb_adjudicate_timer')
        self.vb_adjudicate_timer = attributes[:'vb_adjudicate_timer']
      end

      if attributes.key?(:'validate_federal_id_on_auth')
        self.validate_federal_id_on_auth = attributes[:'validate_federal_id_on_auth']
      else
        self.validate_federal_id_on_auth = nil
      end

      if attributes.key?(:'validate_provider_on_auth')
        self.validate_provider_on_auth = attributes[:'validate_provider_on_auth']
      else
        self.validate_provider_on_auth = nil
      end

      if attributes.key?(:'void_backout_use_current_date')
        self.void_backout_use_current_date = attributes[:'void_backout_use_current_date']
      else
        self.void_backout_use_current_date = nil
      end

      if attributes.key?(:'volume_max_met_ex_code')
        self.volume_max_met_ex_code = attributes[:'volume_max_met_ex_code']
      end

      if attributes.key?(:'volume_min_met_ex_code')
        self.volume_min_met_ex_code = attributes[:'volume_min_met_ex_code']
      end

      if attributes.key?(:'workflow_execute_count')
        self.workflow_execute_count = attributes[:'workflow_execute_count']
      end

      if attributes.key?(:'zelis_eob_code_not_found_ex_code')
        self.zelis_eob_code_not_found_ex_code = attributes[:'zelis_eob_code_not_found_ex_code']
      end

      if attributes.key?(:'zelis_edit_code_not_found_ex_code')
        self.zelis_edit_code_not_found_ex_code = attributes[:'zelis_edit_code_not_found_ex_code']
      end

      if attributes.key?(:'zelis_in_network_ex_code')
        self.zelis_in_network_ex_code = attributes[:'zelis_in_network_ex_code']
      end

      if attributes.key?(:'zelis_login')
        self.zelis_login = attributes[:'zelis_login']
      end

      if attributes.key?(:'zelis_password')
        self.zelis_password = attributes[:'zelis_password']
      end

      if attributes.key?(:'zelis_poll')
        self.zelis_poll = attributes[:'zelis_poll']
      else
        self.zelis_poll = nil
      end

      if attributes.key?(:'zelis_poll_testing')
        self.zelis_poll_testing = attributes[:'zelis_poll_testing']
      else
        self.zelis_poll_testing = nil
      end

      if attributes.key?(:'zelis_url')
        self.zelis_url = attributes[:'zelis_url']
      end

      if attributes.key?(:'zip_code')
        self.zip_code = attributes[:'zip_code']
      end

      if attributes.key?(:'use_vb_adjudicate_benefit_matching')
        self.use_vb_adjudicate_benefit_matching = attributes[:'use_vb_adjudicate_benefit_matching']
      end

      if attributes.key?(:'display_member_primary_network')
        self.display_member_primary_network = attributes[:'display_member_primary_network']
      end

      if attributes.key?(:'disable_ghostscript')
        self.disable_ghostscript = attributes[:'disable_ghostscript']
      end

      if attributes.key?(:'vba_software_end_date')
        self.vba_software_end_date = attributes[:'vba_software_end_date']
      end

      if attributes.key?(:'open_invoice_paid_through')
        self.open_invoice_paid_through = attributes[:'open_invoice_paid_through']
      end

      if attributes.key?(:'claim_returned_to_batch_ex_code')
        self.claim_returned_to_batch_ex_code = attributes[:'claim_returned_to_batch_ex_code']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @key_value.nil?
        invalid_properties.push('invalid value for "key_value", key_value cannot be nil.')
      end

      if !@ap_c_schedule.nil? && @ap_c_schedule.to_s.length > 16
        invalid_properties.push('invalid value for "ap_c_schedule", the character length must be smaller than or equal to 16.')
      end

      if !@accident_review_ex_code.nil? && @accident_review_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "accident_review_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@accident_review_plan_benefit_ex_code.nil? && @accident_review_plan_benefit_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "accident_review_plan_benefit_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @additional_invoice_rates.nil?
        invalid_properties.push('invalid value for "additional_invoice_rates", additional_invoice_rates cannot be nil.')
      end

      if !@address.nil? && @address.to_s.length > 60
        invalid_properties.push('invalid value for "address", the character length must be smaller than or equal to 60.')
      end

      if !@address2.nil? && @address2.to_s.length > 128
        invalid_properties.push('invalid value for "address2", the character length must be smaller than or equal to 128.')
      end

      if @adv_password_req.nil?
        invalid_properties.push('invalid value for "adv_password_req", adv_password_req cannot be nil.')
      end

      if @allow_apostrophe_in_name.nil?
        invalid_properties.push('invalid value for "allow_apostrophe_in_name", allow_apostrophe_in_name cannot be nil.')
      end

      if @allow_checks_post_date.nil?
        invalid_properties.push('invalid value for "allow_checks_post_date", allow_checks_post_date cannot be nil.')
      end

      if @allow_claim_benefit_override.nil?
        invalid_properties.push('invalid value for "allow_claim_benefit_override", allow_claim_benefit_override cannot be nil.')
      end

      if !@allow_max_at_subscriber.nil? && @allow_max_at_subscriber.to_s.length > 1
        invalid_properties.push('invalid value for "allow_max_at_subscriber", the character length must be smaller than or equal to 1.')
      end

      if @allow_oop_on_override.nil?
        invalid_properties.push('invalid value for "allow_oop_on_override", allow_oop_on_override cannot be nil.')
      end

      if !@allow_zero_billed.nil? && @allow_zero_billed.to_s.length > 1
        invalid_properties.push('invalid value for "allow_zero_billed", the character length must be smaller than or equal to 1.')
      end

      if @anesthesia_by_fee_sched.nil?
        invalid_properties.push('invalid value for "anesthesia_by_fee_sched", anesthesia_by_fee_sched cannot be nil.')
      end

      if !@anesthesia_round_type.nil? && @anesthesia_round_type.to_s.length > 16
        invalid_properties.push('invalid value for "anesthesia_round_type", the character length must be smaller than or equal to 16.')
      end

      if @apply_multiple_benefit_ex_code_manual.nil?
        invalid_properties.push('invalid value for "apply_multiple_benefit_ex_code_manual", apply_multiple_benefit_ex_code_manual cannot be nil.')
      end

      if !@auth_review_full_path.nil? && @auth_review_full_path.to_s.length > 255
        invalid_properties.push('invalid value for "auth_review_full_path", the character length must be smaller than or equal to 255.')
      end

      if !@auth_review_object.nil? && @auth_review_object.to_s.length > 255
        invalid_properties.push('invalid value for "auth_review_object", the character length must be smaller than or equal to 255.')
      end

      if !@auth_code_closed.nil? && @auth_code_closed.to_s.length > 8
        invalid_properties.push('invalid value for "auth_code_closed", the character length must be smaller than or equal to 8.')
      end

      if !@auth_code_pay_amt_zero.nil? && @auth_code_pay_amt_zero.to_s.length > 8
        invalid_properties.push('invalid value for "auth_code_pay_amt_zero", the character length must be smaller than or equal to 8.')
      end

      if !@auth_code_reopen.nil? && @auth_code_reopen.to_s.length > 8
        invalid_properties.push('invalid value for "auth_code_reopen", the character length must be smaller than or equal to 8.')
      end

      if !@auth_code_under_auth_amt.nil? && @auth_code_under_auth_amt.to_s.length > 8
        invalid_properties.push('invalid value for "auth_code_under_auth_amt", the character length must be smaller than or equal to 8.')
      end

      if !@auth_over_unit_split_ex_code.nil? && @auth_over_unit_split_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "auth_over_unit_split_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@auth_penalty_ex_code.nil? && @auth_penalty_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "auth_penalty_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @auto_adj_return_to_batch.nil?
        invalid_properties.push('invalid value for "auto_adj_return_to_batch", auto_adj_return_to_batch cannot be nil.')
      end

      if @auto_pay_capitated_claims.nil?
        invalid_properties.push('invalid value for "auto_pay_capitated_claims", auto_pay_capitated_claims cannot be nil.')
      end

      if @auto_process_adjustment_backout.nil?
        invalid_properties.push('invalid value for "auto_process_adjustment_backout", auto_process_adjustment_backout cannot be nil.')
      end

      if @auto_term_plan_on_gateway_request.nil?
        invalid_properties.push('invalid value for "auto_term_plan_on_gateway_request", auto_term_plan_on_gateway_request cannot be nil.')
      end

      if !@b_r_domain_name.nil? && @b_r_domain_name.to_s.length > 256
        invalid_properties.push('invalid value for "b_r_domain_name", the character length must be smaller than or equal to 256.')
      end

      if !@b_r_site_name.nil? && @b_r_site_name.to_s.length > 256
        invalid_properties.push('invalid value for "b_r_site_name", the character length must be smaller than or equal to 256.')
      end

      if !@b_r_site_secret.nil? && @b_r_site_secret.to_s.length > 256
        invalid_properties.push('invalid value for "b_r_site_secret", the character length must be smaller than or equal to 256.')
      end

      if !@b_r_site_user.nil? && @b_r_site_user.to_s.length > 256
        invalid_properties.push('invalid value for "b_r_site_user", the character length must be smaller than or equal to 256.')
      end

      if !@base_load_pass.nil? && @base_load_pass.to_s.length > 256
        invalid_properties.push('invalid value for "base_load_pass", the character length must be smaller than or equal to 256.')
      end

      if @base_load_service_date_flag.nil?
        invalid_properties.push('invalid value for "base_load_service_date_flag", base_load_service_date_flag cannot be nil.')
      end

      if !@base_load_url.nil? && @base_load_url.to_s.length > 8000
        invalid_properties.push('invalid value for "base_load_url", the character length must be smaller than or equal to 8000.')
      end

      if !@base_load_user.nil? && @base_load_user.to_s.length > 256
        invalid_properties.push('invalid value for "base_load_user", the character length must be smaller than or equal to 256.')
      end

      if !@beneficiary_age_ex_code.nil? && @beneficiary_age_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "beneficiary_age_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@benefit_cascade_ex_code.nil? && @benefit_cascade_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "benefit_cascade_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@bridged_tooth_ex_code.nil? && @bridged_tooth_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "bridged_tooth_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @ca_s_segment_ben_match.nil?
        invalid_properties.push('invalid value for "ca_s_segment_ben_match", ca_s_segment_ben_match cannot be nil.')
      end

      if !@cli_a_certificate_ex_code.nil? && @cli_a_certificate_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "cli_a_certificate_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@cm_o_installed.nil? && @cm_o_installed.to_s.length > 1
        invalid_properties.push('invalid value for "cm_o_installed", the character length must be smaller than or equal to 1.')
      end

      if @cap_by_service_line.nil?
        invalid_properties.push('invalid value for "cap_by_service_line", cap_by_service_line cannot be nil.')
      end

      if !@cap_disenroll_adj_reason.nil? && @cap_disenroll_adj_reason.to_s.length > 8
        invalid_properties.push('invalid value for "cap_disenroll_adj_reason", the character length must be smaller than or equal to 8.')
      end

      if !@cap_enroll_adj_reason.nil? && @cap_enroll_adj_reason.to_s.length > 8
        invalid_properties.push('invalid value for "cap_enroll_adj_reason", the character length must be smaller than or equal to 8.')
      end

      if !@capitated_service_ex_code.nil? && @capitated_service_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "capitated_service_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @case_default_report.nil?
        invalid_properties.push('invalid value for "case_default_report", case_default_report cannot be nil.')
      end

      if @case_default_report.to_s.length > 256
        invalid_properties.push('invalid value for "case_default_report", the character length must be smaller than or equal to 256.')
      end

      if @case_default_report.to_s.length < 1
        invalid_properties.push('invalid value for "case_default_report", the character length must be great than or equal to 1.')
      end

      if @check_payee_address_flag.nil?
        invalid_properties.push('invalid value for "check_payee_address_flag", check_payee_address_flag cannot be nil.')
      end

      if !@check_stock_location.nil? && @check_stock_location.to_s.length > 128
        invalid_properties.push('invalid value for "check_stock_location", the character length must be smaller than or equal to 128.')
      end

      if !@city.nil? && @city.to_s.length > 20
        invalid_properties.push('invalid value for "city", the character length must be smaller than or equal to 20.')
      end

      if !@claim_upload_file_location.nil? && @claim_upload_file_location.to_s.length > 128
        invalid_properties.push('invalid value for "claim_upload_file_location", the character length must be smaller than or equal to 128.')
      end

      if !@claim_upload_schedule.nil? && @claim_upload_schedule.to_s.length > 1
        invalid_properties.push('invalid value for "claim_upload_schedule", the character length must be smaller than or equal to 1.')
      end

      if !@claim_age_ex_code.nil? && @claim_age_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_age_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_allowed_billed_ex_code.nil? && @claim_allowed_billed_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_allowed_billed_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_amt_ex_code.nil? && @claim_amt_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_amt_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_denied_ex_code.nil? && @claim_auth_denied_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_denied_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_details_err_ex.nil? && @claim_auth_details_err_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_details_err_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_diff_mem_ex.nil? && @claim_auth_diff_mem_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_diff_mem_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_diff_prov_ex.nil? && @claim_auth_diff_prov_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_diff_prov_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_exceeded_ex_code.nil? && @claim_auth_exceeded_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_exceeded_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_invalid_date_ex.nil? && @claim_auth_invalid_date_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_invalid_date_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_not_approved_ex.nil? && @claim_auth_not_approved_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_not_approved_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_auth_proc_exceeded_ex_code.nil? && @claim_auth_proc_exceeded_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_auth_proc_exceeded_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_auth_reqd_ex_code.nil? && @claim_auth_reqd_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_auth_reqd_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_ben_not_found_ex_code.nil? && @claim_ben_not_found_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_ben_not_found_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_cov_in_net_only_ex_code.nil? && @claim_cov_in_net_only_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_cov_in_net_only_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_dead_ex_code.nil? && @claim_dead_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_dead_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_ded_credit_oon_used_ex_code.nil? && @claim_ded_credit_oon_used_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_ded_credit_oon_used_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_ded_credit_ppo_used_ex_code.nil? && @claim_ded_credit_ppo_used_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_ded_credit_ppo_used_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_denied_ex_code.nil? && @claim_denied_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_denied_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_diagnosis_age_ex_code.nil? && @claim_diagnosis_age_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_diagnosis_age_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_diagnosis_gender_ex_code.nil? && @claim_diagnosis_gender_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_diagnosis_gender_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_dup_error_ex_code.nil? && @claim_dup_error_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_dup_error_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_error_ex_code.nil? && @claim_error_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_error_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_exceed_daily_co_pay_max_ex_code.nil? && @claim_exceed_daily_co_pay_max_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_exceed_daily_co_pay_max_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_exceed_injury_ex_code.nil? && @claim_exceed_injury_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_exceed_injury_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_exceed_lifetime_ex_code.nil? && @claim_exceed_lifetime_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_exceed_lifetime_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_exceed_lifetime_oon_ex_code.nil? && @claim_exceed_lifetime_oon_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_exceed_lifetime_oon_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_exceed_lifetime_ppo_ex_code.nil? && @claim_exceed_lifetime_ppo_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_exceed_lifetime_ppo_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_exceed_maximum_ex_code.nil? && @claim_exceed_maximum_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_exceed_maximum_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_exceed_per_diem_ex_code.nil? && @claim_exceed_per_diem_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_exceed_per_diem_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_fee_sched_error_ex.nil? && @claim_fee_sched_error_ex.to_s.length > 6
        invalid_properties.push('invalid value for "claim_fee_sched_error_ex", the character length must be smaller than or equal to 6.')
      end

      if !@claim_lag_error_ex_code.nil? && @claim_lag_error_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_lag_error_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_late_ex_code.nil? && @claim_late_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_late_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_life_benefit_met_ex_code.nil? && @claim_life_benefit_met_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_life_benefit_met_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_life_plan_met_ex_code.nil? && @claim_life_plan_met_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_life_plan_met_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_no_prov_fee_sched.nil? && @claim_no_prov_fee_sched.to_s.length > 6
        invalid_properties.push('invalid value for "claim_no_prov_fee_sched", the character length must be smaller than or equal to 6.')
      end

      if !@claim_no_rate_fee_ex_code.nil? && @claim_no_rate_fee_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_no_rate_fee_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_not_adult_dependent.nil? && @claim_not_adult_dependent.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_adult_dependent", the character length must be smaller than or equal to 6.')
      end

      if !@claim_not_at_place_ex_code.nil? && @claim_not_at_place_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_at_place_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_not_by_prov_ex_code.nil? && @claim_not_by_prov_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_by_prov_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_not_cov_ex_code.nil? && @claim_not_cov_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_cov_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_not_enrolled_ex_code.nil? && @claim_not_enrolled_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_enrolled_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @claim_not_enrolled_ex_code_null_use_pre_post.nil?
        invalid_properties.push('invalid value for "claim_not_enrolled_ex_code_null_use_pre_post", claim_not_enrolled_ex_code_null_use_pre_post cannot be nil.')
      end

      if !@claim_not_enrolled_post_ex_code.nil? && @claim_not_enrolled_post_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_not_enrolled_post_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_not_enrolled_pre_ex_code.nil? && @claim_not_enrolled_pre_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_not_enrolled_pre_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_not_student_ex_code.nil? && @claim_not_student_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_not_student_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_other_coverage_ex_code.nil? && @claim_other_coverage_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_other_coverage_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_over_max_ex_code.nil? && @claim_over_max_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_over_max_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_over_max_oon_ex_code.nil? && @claim_over_max_oon_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_over_max_oon_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_over_max_ppo_ex_code.nil? && @claim_over_max_ppo_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_over_max_ppo_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@claim_procedure_age_ex_code.nil? && @claim_procedure_age_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_procedure_age_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_procedure_gender_ex_code.nil? && @claim_procedure_gender_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_procedure_gender_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_service_outside_enrollment_ex_code.nil? && @claim_service_outside_enrollment_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "claim_service_outside_enrollment_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@claim_splits_plan_year_ex_code.nil? && @claim_splits_plan_year_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "claim_splits_plan_year_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @clear_auth_penalty_ex_code.nil?
        invalid_properties.push('invalid value for "clear_auth_penalty_ex_code", clear_auth_penalty_ex_code cannot be nil.')
      end

      if !@client_id.nil? && @client_id.to_s.length > 6
        invalid_properties.push('invalid value for "client_id", the character length must be smaller than or equal to 6.')
      end

      if !@client_name.nil? && @client_name.to_s.length > 90
        invalid_properties.push('invalid value for "client_name", the character length must be smaller than or equal to 90.')
      end

      if !@co_ins_max_ex_code.nil? && @co_ins_max_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "co_ins_max_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@co_ins_max_ex_code_member.nil? && @co_ins_max_ex_code_member.to_s.length > 8
        invalid_properties.push('invalid value for "co_ins_max_ex_code_member", the character length must be smaller than or equal to 8.')
      end

      if @co_pay_by_billed.nil?
        invalid_properties.push('invalid value for "co_pay_by_billed", co_pay_by_billed cannot be nil.')
      end

      if !@cogito_app_client_id.nil? && @cogito_app_client_id.to_s.length > 128
        invalid_properties.push('invalid value for "cogito_app_client_id", the character length must be smaller than or equal to 128.')
      end

      if !@cogito_app_client_secret.nil? && @cogito_app_client_secret.to_s.length > 256
        invalid_properties.push('invalid value for "cogito_app_client_secret", the character length must be smaller than or equal to 256.')
      end

      if !@cogito_user_pool_id.nil? && @cogito_user_pool_id.to_s.length > 64
        invalid_properties.push('invalid value for "cogito_user_pool_id", the character length must be smaller than or equal to 64.')
      end

      if @combined_notes_report_fg.nil?
        invalid_properties.push('invalid value for "combined_notes_report_fg", combined_notes_report_fg cannot be nil.')
      end

      if !@comm_disenroll_adj_reason.nil? && @comm_disenroll_adj_reason.to_s.length > 8
        invalid_properties.push('invalid value for "comm_disenroll_adj_reason", the character length must be smaller than or equal to 8.')
      end

      if !@comm_enroll_adj_reason.nil? && @comm_enroll_adj_reason.to_s.length > 8
        invalid_properties.push('invalid value for "comm_enroll_adj_reason", the character length must be smaller than or equal to 8.')
      end

      if !@company_short.nil? && @company_short.to_s.length > 4
        invalid_properties.push('invalid value for "company_short", the character length must be smaller than or equal to 4.')
      end

      if !@context4_fee_selector.nil? && @context4_fee_selector.to_s.length > 8
        invalid_properties.push('invalid value for "context4_fee_selector", the character length must be smaller than or equal to 8.')
      end

      if !@context4_fee_selector_oon.nil? && @context4_fee_selector_oon.to_s.length > 8
        invalid_properties.push('invalid value for "context4_fee_selector_oon", the character length must be smaller than or equal to 8.')
      end

      if !@context4_password.nil? && @context4_password.to_s.length > 128
        invalid_properties.push('invalid value for "context4_password", the character length must be smaller than or equal to 128.')
      end

      if !@context4_payor_type.nil? && @context4_payor_type.to_s.length > 8
        invalid_properties.push('invalid value for "context4_payor_type", the character length must be smaller than or equal to 8.')
      end

      if @context4_plan_price_not_greater_billed_fg.nil?
        invalid_properties.push('invalid value for "context4_plan_price_not_greater_billed_fg", context4_plan_price_not_greater_billed_fg cannot be nil.')
      end

      if @context4_send_billing_address_fg.nil?
        invalid_properties.push('invalid value for "context4_send_billing_address_fg", context4_send_billing_address_fg cannot be nil.')
      end

      if !@context4_user_id.nil? && @context4_user_id.to_s.length > 128
        invalid_properties.push('invalid value for "context4_user_id", the character length must be smaller than or equal to 128.')
      end

      if !@context4_web_uri.nil? && @context4_web_uri.to_s.length > 256
        invalid_properties.push('invalid value for "context4_web_uri", the character length must be smaller than or equal to 256.')
      end

      if !@context4_web_uri_delete.nil? && @context4_web_uri_delete.to_s.length > 256
        invalid_properties.push('invalid value for "context4_web_uri_delete", the character length must be smaller than or equal to 256.')
      end

      if !@copay_ex_code.nil? && @copay_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "copay_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@country_id.nil? && @country_id.to_s.length > 8
        invalid_properties.push('invalid value for "country_id", the character length must be smaller than or equal to 8.')
      end

      if @credential_by_payee.nil?
        invalid_properties.push('invalid value for "credential_by_payee", credential_by_payee cannot be nil.')
      end

      if !@credentialing.nil? && @credentialing.to_s.length > 1
        invalid_properties.push('invalid value for "credentialing", the character length must be smaller than or equal to 1.')
      end

      if !@crowned_tooth_ex_code.nil? && @crowned_tooth_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "crowned_tooth_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@currency_format.nil? && @currency_format.to_s.length > 20
        invalid_properties.push('invalid value for "currency_format", the character length must be smaller than or equal to 20.')
      end

      if !@dr_g_schedule.nil? && @dr_g_schedule.to_s.length > 16
        invalid_properties.push('invalid value for "dr_g_schedule", the character length must be smaller than or equal to 16.')
      end

      if !@database_version.nil? && @database_version.to_s.length > 32
        invalid_properties.push('invalid value for "database_version", the character length must be smaller than or equal to 32.')
      end

      if !@date_format.nil? && @date_format.to_s.length > 20
        invalid_properties.push('invalid value for "date_format", the character length must be smaller than or equal to 20.')
      end

      if !@deductible_ex_code.nil? && @deductible_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "deductible_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@deductible_max_ex_code.nil? && @deductible_max_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "deductible_max_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@deductible_max_ex_code_member.nil? && @deductible_max_ex_code_member.to_s.length > 8
        invalid_properties.push('invalid value for "deductible_max_ex_code_member", the character length must be smaller than or equal to 8.')
      end

      if !@default_1099_flag.nil? && @default_1099_flag.to_s.length > 1
        invalid_properties.push('invalid value for "default_1099_flag", the character length must be smaller than or equal to 1.')
      end

      if !@default_auth_code.nil? && @default_auth_code.to_s.length > 8
        invalid_properties.push('invalid value for "default_auth_code", the character length must be smaller than or equal to 8.')
      end

      if !@default_currency_id.nil? && @default_currency_id.to_s.length > 16
        invalid_properties.push('invalid value for "default_currency_id", the character length must be smaller than or equal to 16.')
      end

      if !@default_id_card_request_type.nil? && @default_id_card_request_type.to_s.length > 16
        invalid_properties.push('invalid value for "default_id_card_request_type", the character length must be smaller than or equal to 16.')
      end

      if !@default_login_sound.nil? && @default_login_sound.to_s.length > 255
        invalid_properties.push('invalid value for "default_login_sound", the character length must be smaller than or equal to 255.')
      end

      if !@default_payor_id.nil? && @default_payor_id.to_s.length > 10
        invalid_properties.push('invalid value for "default_payor_id", the character length must be smaller than or equal to 10.')
      end

      if !@dental_atp_paid_date_type.nil? && @dental_atp_paid_date_type.to_s.length > 32
        invalid_properties.push('invalid value for "dental_atp_paid_date_type", the character length must be smaller than or equal to 32.')
      end

      if @diagnostic_code_type_default.nil?
        invalid_properties.push('invalid value for "diagnostic_code_type_default", diagnostic_code_type_default cannot be nil.')
      end

      if @diagnostic_code_type_default.to_s.length > 16
        invalid_properties.push('invalid value for "diagnostic_code_type_default", the character length must be smaller than or equal to 16.')
      end

      if @diagnostic_code_type_default.to_s.length < 1
        invalid_properties.push('invalid value for "diagnostic_code_type_default", the character length must be great than or equal to 1.')
      end

      if @disallow_spec_char_in_plan_id.nil?
        invalid_properties.push('invalid value for "disallow_spec_char_in_plan_id", disallow_spec_char_in_plan_id cannot be nil.')
      end

      if @disconnect_call_notes_from_claim_provider.nil?
        invalid_properties.push('invalid value for "disconnect_call_notes_from_claim_provider", disconnect_call_notes_from_claim_provider cannot be nil.')
      end

      if !@disenroll_auth_code.nil? && @disenroll_auth_code.to_s.length > 8
        invalid_properties.push('invalid value for "disenroll_auth_code", the character length must be smaller than or equal to 8.')
      end

      if @display_ppo_null_network.nil?
        invalid_properties.push('invalid value for "display_ppo_null_network", display_ppo_null_network cannot be nil.')
      end

      if !@ed_i_installed.nil? && @ed_i_installed.to_s.length > 1
        invalid_properties.push('invalid value for "ed_i_installed", the character length must be smaller than or equal to 1.')
      end

      if !@eo_b_report_location.nil? && @eo_b_report_location.to_s.length > 255
        invalid_properties.push('invalid value for "eo_b_report_location", the character length must be smaller than or equal to 255.')
      end

      if !@e_r_place_of_service.nil? && @e_r_place_of_service.to_s.length > 5
        invalid_properties.push('invalid value for "e_r_place_of_service", the character length must be smaller than or equal to 5.')
      end

      if @enforce_mfa.nil?
        invalid_properties.push('invalid value for "enforce_mfa", enforce_mfa cannot be nil.')
      end

      if !@entry_user.nil? && @entry_user.to_s.length > 20
        invalid_properties.push('invalid value for "entry_user", the character length must be smaller than or equal to 20.')
      end

      if @error_invalid_diag.nil?
        invalid_properties.push('invalid value for "error_invalid_diag", error_invalid_diag cannot be nil.')
      end

      if @error_invalid_proc.nil?
        invalid_properties.push('invalid value for "error_invalid_proc", error_invalid_proc cannot be nil.')
      end

      if @error_multiple_plan_years.nil?
        invalid_properties.push('invalid value for "error_multiple_plan_years", error_multiple_plan_years cannot be nil.')
      end

      if @error_termed_provider.nil?
        invalid_properties.push('invalid value for "error_termed_provider", error_termed_provider cannot be nil.')
      end

      if !@exceed_exhaust_date_ex_code.nil? && @exceed_exhaust_date_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "exceed_exhaust_date_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@exceed_return_to_work_ex_code.nil? && @exceed_return_to_work_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "exceed_return_to_work_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@exceeds_paid_through_ex_code.nil? && @exceeds_paid_through_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "exceeds_paid_through_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@fax_country_code.nil? && @fax_country_code.to_s.length > 8
        invalid_properties.push('invalid value for "fax_country_code", the character length must be smaller than or equal to 8.')
      end

      if !@fax_number.nil? && @fax_number.to_s.length > 20
        invalid_properties.push('invalid value for "fax_number", the character length must be smaller than or equal to 20.')
      end

      if !@federal_id.nil? && @federal_id.to_s.length > 20
        invalid_properties.push('invalid value for "federal_id", the character length must be smaller than or equal to 20.')
      end

      if @fee_sched_match_claim_year.nil?
        invalid_properties.push('invalid value for "fee_sched_match_claim_year", fee_sched_match_claim_year cannot be nil.')
      end

      if @fee_schedule_ex_codes_manual.nil?
        invalid_properties.push('invalid value for "fee_schedule_ex_codes_manual", fee_schedule_ex_codes_manual cannot be nil.')
      end

      if @fee_schedule_exact_match_fg.nil?
        invalid_properties.push('invalid value for "fee_schedule_exact_match_fg", fee_schedule_exact_match_fg cannot be nil.')
      end

      if !@filled_tooth_ex_code.nil? && @filled_tooth_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "filled_tooth_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@first_benefit_auto_selected_ex_code.nil? && @first_benefit_auto_selected_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "first_benefit_auto_selected_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@flex_claim_after_grace_period_ex_code.nil? && @flex_claim_after_grace_period_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "flex_claim_after_grace_period_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@flex_claim_after_submit_period_ex_code.nil? && @flex_claim_after_submit_period_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "flex_claim_after_submit_period_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@flex_claim_funds_exhausted_ex_code.nil? && @flex_claim_funds_exhausted_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "flex_claim_funds_exhausted_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @force_call_track_note.nil?
        invalid_properties.push('invalid value for "force_call_track_note", force_call_track_note cannot be nil.')
      end

      if @force_claim_rec_date.nil?
        invalid_properties.push('invalid value for "force_claim_rec_date", force_claim_rec_date cannot be nil.')
      end

      if !@force_claim_sub_id.nil? && @force_claim_sub_id.to_s.length > 1
        invalid_properties.push('invalid value for "force_claim_sub_id", the character length must be smaller than or equal to 1.')
      end

      if @force_latest_enrollment.nil?
        invalid_properties.push('invalid value for "force_latest_enrollment", force_latest_enrollment cannot be nil.')
      end

      if @force_leading_zero_on_rev_code.nil?
        invalid_properties.push('invalid value for "force_leading_zero_on_rev_code", force_leading_zero_on_rev_code cannot be nil.')
      end

      if @full_backout_on_void_distribution.nil?
        invalid_properties.push('invalid value for "full_backout_on_void_distribution", full_backout_on_void_distribution cannot be nil.')
      end

      if @full_month_billing.nil?
        invalid_properties.push('invalid value for "full_month_billing", full_month_billing cannot be nil.')
      end

      if @full_month_billing.to_s.length > 1
        invalid_properties.push('invalid value for "full_month_billing", the character length must be smaller than or equal to 1.')
      end

      if @full_month_billing.to_s.length < 1
        invalid_properties.push('invalid value for "full_month_billing", the character length must be great than or equal to 1.')
      end

      if !@generate_comm_user.nil? && @generate_comm_user.to_s.length > 16
        invalid_properties.push('invalid value for "generate_comm_user", the character length must be smaller than or equal to 16.')
      end

      if !@generate_inv_user.nil? && @generate_inv_user.to_s.length > 16
        invalid_properties.push('invalid value for "generate_inv_user", the character length must be smaller than or equal to 16.')
      end

      if @generate_negative_inv.nil?
        invalid_properties.push('invalid value for "generate_negative_inv", generate_negative_inv cannot be nil.')
      end

      if !@global_cmu_id.nil? && @global_cmu_id.to_s.length > 16
        invalid_properties.push('invalid value for "global_cmu_id", the character length must be smaller than or equal to 16.')
      end

      if !@i_d_card_location.nil? && @i_d_card_location.to_s.length > 255
        invalid_properties.push('invalid value for "i_d_card_location", the character length must be smaller than or equal to 255.')
      end

      if !@iv_r_cs_country_code.nil? && @iv_r_cs_country_code.to_s.length > 8
        invalid_properties.push('invalid value for "iv_r_cs_country_code", the character length must be smaller than or equal to 8.')
      end

      if !@iv_r_cs_phone_number.nil? && @iv_r_cs_phone_number.to_s.length > 20
        invalid_properties.push('invalid value for "iv_r_cs_phone_number", the character length must be smaller than or equal to 20.')
      end

      if @ignore_care_management_hierarchy_fg.nil?
        invalid_properties.push('invalid value for "ignore_care_management_hierarchy_fg", ignore_care_management_hierarchy_fg cannot be nil.')
      end

      if @ignore_claim_funding_status_change_msg.nil?
        invalid_properties.push('invalid value for "ignore_claim_funding_status_change_msg", ignore_claim_funding_status_change_msg cannot be nil.')
      end

      if !@inactive_payee_ex_code.nil? && @inactive_payee_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "inactive_payee_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @include_invalid_enrollments.nil?
        invalid_properties.push('invalid value for "include_invalid_enrollments", include_invalid_enrollments cannot be nil.')
      end

      if !@inv_grace_period_type.nil? && @inv_grace_period_type.to_s.length > 1
        invalid_properties.push('invalid value for "inv_grace_period_type", the character length must be smaller than or equal to 1.')
      end

      if !@invalid_diag_ex_code.nil? && @invalid_diag_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "invalid_diag_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@invalid_proc_ex_code.nil? && @invalid_proc_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "invalid_proc_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @invoice_enrolled_by.nil?
        invalid_properties.push('invalid value for "invoice_enrolled_by", invoice_enrolled_by cannot be nil.')
      end

      if !@invoice_grace_ex_code.nil? && @invoice_grace_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "invoice_grace_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@invoice_remit_address1.nil? && @invoice_remit_address1.to_s.length > 128
        invalid_properties.push('invalid value for "invoice_remit_address1", the character length must be smaller than or equal to 128.')
      end

      if !@invoice_remit_address2.nil? && @invoice_remit_address2.to_s.length > 128
        invalid_properties.push('invalid value for "invoice_remit_address2", the character length must be smaller than or equal to 128.')
      end

      if !@invoice_remit_city.nil? && @invoice_remit_city.to_s.length > 32
        invalid_properties.push('invalid value for "invoice_remit_city", the character length must be smaller than or equal to 32.')
      end

      if !@invoice_remit_country_code.nil? && @invoice_remit_country_code.to_s.length > 8
        invalid_properties.push('invalid value for "invoice_remit_country_code", the character length must be smaller than or equal to 8.')
      end

      if !@invoice_remit_country_id.nil? && @invoice_remit_country_id.to_s.length > 8
        invalid_properties.push('invalid value for "invoice_remit_country_id", the character length must be smaller than or equal to 8.')
      end

      if !@invoice_remit_name.nil? && @invoice_remit_name.to_s.length > 128
        invalid_properties.push('invalid value for "invoice_remit_name", the character length must be smaller than or equal to 128.')
      end

      if !@invoice_remit_phone_number.nil? && @invoice_remit_phone_number.to_s.length > 32
        invalid_properties.push('invalid value for "invoice_remit_phone_number", the character length must be smaller than or equal to 32.')
      end

      if !@invoice_remit_state.nil? && @invoice_remit_state.to_s.length > 2
        invalid_properties.push('invalid value for "invoice_remit_state", the character length must be smaller than or equal to 2.')
      end

      if !@invoice_remit_zip_code.nil? && @invoice_remit_zip_code.to_s.length > 32
        invalid_properties.push('invalid value for "invoice_remit_zip_code", the character length must be smaller than or equal to 32.')
      end

      if @lag_time.nil?
        invalid_properties.push('invalid value for "lag_time", lag_time cannot be nil.')
      end

      if @lock_auth_review.nil?
        invalid_properties.push('invalid value for "lock_auth_review", lock_auth_review cannot be nil.')
      end

      if @lock_auth_review_all.nil?
        invalid_properties.push('invalid value for "lock_auth_review_all", lock_auth_review_all cannot be nil.')
      end

      if @log_base_load_call.nil?
        invalid_properties.push('invalid value for "log_base_load_call", log_base_load_call cannot be nil.')
      end

      if !@logo_file.nil? && @logo_file.to_s.length > 128
        invalid_properties.push('invalid value for "logo_file", the character length must be smaller than or equal to 128.')
      end

      if !@long_state_names.nil? && @long_state_names.to_s.length > 1
        invalid_properties.push('invalid value for "long_state_names", the character length must be smaller than or equal to 1.')
      end

      if !@mail_password.nil? && @mail_password.to_s.length > 64
        invalid_properties.push('invalid value for "mail_password", the character length must be smaller than or equal to 64.')
      end

      if !@mail_server.nil? && @mail_server.to_s.length > 128
        invalid_properties.push('invalid value for "mail_server", the character length must be smaller than or equal to 128.')
      end

      if @mail_use_ssl.nil?
        invalid_properties.push('invalid value for "mail_use_ssl", mail_use_ssl cannot be nil.')
      end

      if !@mail_user.nil? && @mail_user.to_s.length > 64
        invalid_properties.push('invalid value for "mail_user", the character length must be smaller than or equal to 64.')
      end

      if @medicare_on_benefit.nil?
        invalid_properties.push('invalid value for "medicare_on_benefit", medicare_on_benefit cannot be nil.')
      end

      if @medicare_on_benefit.to_s.length > 1
        invalid_properties.push('invalid value for "medicare_on_benefit", the character length must be smaller than or equal to 1.')
      end

      if @medicare_on_benefit.to_s.length < 1
        invalid_properties.push('invalid value for "medicare_on_benefit", the character length must be great than or equal to 1.')
      end

      if @member_address_dob_not_reqd.nil?
        invalid_properties.push('invalid value for "member_address_dob_not_reqd", member_address_dob_not_reqd cannot be nil.')
      end

      if @member_match_by_name_birth_date.nil?
        invalid_properties.push('invalid value for "member_match_by_name_birth_date", member_match_by_name_birth_date cannot be nil.')
      end

      if !@modifier_not_eff_ex_code.nil? && @modifier_not_eff_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "modifier_not_eff_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@multiple_auth_ex_code.nil? && @multiple_auth_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "multiple_auth_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@name.nil? && @name.to_s.length > 60
        invalid_properties.push('invalid value for "name", the character length must be smaller than or equal to 60.')
      end

      if !@network_does_not_match_repriced_network_ex_code.nil? && @network_does_not_match_repriced_network_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "network_does_not_match_repriced_network_ex_code", the character length must be smaller than or equal to 6.')
      end

      if @note_attachment_db.nil?
        invalid_properties.push('invalid value for "note_attachment_db", note_attachment_db cannot be nil.')
      end

      if !@note_attachment_local_default.nil? && @note_attachment_local_default.to_s.length > 255
        invalid_properties.push('invalid value for "note_attachment_local_default", the character length must be smaller than or equal to 255.')
      end

      if !@note_attachment_remote_default.nil? && @note_attachment_remote_default.to_s.length > 255
        invalid_properties.push('invalid value for "note_attachment_remote_default", the character length must be smaller than or equal to 255.')
      end

      if !@oo_p_max_ex_code.nil? && @oo_p_max_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "oo_p_max_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@oo_p_max_ex_code_member.nil? && @oo_p_max_ex_code_member.to_s.length > 8
        invalid_properties.push('invalid value for "oo_p_max_ex_code_member", the character length must be smaller than or equal to 8.')
      end

      if !@out_of_net_ex_code.nil? && @out_of_net_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "out_of_net_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@overpayment_deduction_type.nil? && @overpayment_deduction_type.to_s.length > 8
        invalid_properties.push('invalid value for "overpayment_deduction_type", the character length must be smaller than or equal to 8.')
      end

      if !@pc_p_only_ex_code.nil? && @pc_p_only_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "pc_p_only_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @partial_cap.nil?
        invalid_properties.push('invalid value for "partial_cap", partial_cap cannot be nil.')
      end

      if @payment_proration.nil?
        invalid_properties.push('invalid value for "payment_proration", payment_proration cannot be nil.')
      end

      if !@phone_country_code.nil? && @phone_country_code.to_s.length > 8
        invalid_properties.push('invalid value for "phone_country_code", the character length must be smaller than or equal to 8.')
      end

      if !@phone_format.nil? && @phone_format.to_s.length > 20
        invalid_properties.push('invalid value for "phone_format", the character length must be smaller than or equal to 20.')
      end

      if !@phone_number.nil? && @phone_number.to_s.length > 20
        invalid_properties.push('invalid value for "phone_number", the character length must be smaller than or equal to 20.')
      end

      if !@place_code_not_setup_ex_code.nil? && @place_code_not_setup_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "place_code_not_setup_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@plan_benefit_override_network_id.nil? && @plan_benefit_override_network_id.to_s.length > 10
        invalid_properties.push('invalid value for "plan_benefit_override_network_id", the character length must be smaller than or equal to 10.')
      end

      if !@policy_forfeiture_grace_period_type.nil? && @policy_forfeiture_grace_period_type.to_s.length > 1
        invalid_properties.push('invalid value for "policy_forfeiture_grace_period_type", the character length must be smaller than or equal to 1.')
      end

      if @premium_proration.nil?
        invalid_properties.push('invalid value for "premium_proration", premium_proration cannot be nil.')
      end

      if @prevent_suspense_release_by_process_user.nil?
        invalid_properties.push('invalid value for "prevent_suspense_release_by_process_user", prevent_suspense_release_by_process_user cannot be nil.')
      end

      if @process_auths_when_pended.nil?
        invalid_properties.push('invalid value for "process_auths_when_pended", process_auths_when_pended cannot be nil.')
      end

      if @process_auto_cob.nil?
        invalid_properties.push('invalid value for "process_auto_cob", process_auto_cob cannot be nil.')
      end

      if !@processing_mode.nil? && @processing_mode.to_s.length > 1
        invalid_properties.push('invalid value for "processing_mode", the character length must be smaller than or equal to 1.')
      end

      if !@prof_atp_paid_date_type.nil? && @prof_atp_paid_date_type.to_s.length > 32
        invalid_properties.push('invalid value for "prof_atp_paid_date_type", the character length must be smaller than or equal to 32.')
      end

      if !@prosthesis_tooth_ex_code.nil? && @prosthesis_tooth_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "prosthesis_tooth_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @protect_alternate_id.nil?
        invalid_properties.push('invalid value for "protect_alternate_id", protect_alternate_id cannot be nil.')
      end

      if !@provider_auth_exempt_procedure_ex_code.nil? && @provider_auth_exempt_procedure_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "provider_auth_exempt_procedure_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@provider_not_active_auth_code.nil? && @provider_not_active_auth_code.to_s.length > 8
        invalid_properties.push('invalid value for "provider_not_active_auth_code", the character length must be smaller than or equal to 8.')
      end

      if !@pulled_tooth_ex_code.nil? && @pulled_tooth_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "pulled_tooth_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@qp_a_method_1_ex_code.nil? && @qp_a_method_1_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "qp_a_method_1_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@qp_a_method_2_ex_code.nil? && @qp_a_method_2_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "qp_a_method_2_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@r_x_atp_paid_date_type.nil? && @r_x_atp_paid_date_type.to_s.length > 32
        invalid_properties.push('invalid value for "r_x_atp_paid_date_type", the character length must be smaller than or equal to 32.')
      end

      if @reins_split_claim.nil?
        invalid_properties.push('invalid value for "reins_split_claim", reins_split_claim cannot be nil.')
      end

      if !@repriced_line.nil? && @repriced_line.to_s.length > 64
        invalid_properties.push('invalid value for "repriced_line", the character length must be smaller than or equal to 64.')
      end

      if @request_id_card_prompt_enrollment.nil?
        invalid_properties.push('invalid value for "request_id_card_prompt_enrollment", request_id_card_prompt_enrollment cannot be nil.')
      end

      if !@request_provider_email.nil? && @request_provider_email.to_s.length > 255
        invalid_properties.push('invalid value for "request_provider_email", the character length must be smaller than or equal to 255.')
      end

      if !@request_reassess_email.nil? && @request_reassess_email.to_s.length > 255
        invalid_properties.push('invalid value for "request_reassess_email", the character length must be smaller than or equal to 255.')
      end

      if @restrict_npi_federal_id.nil?
        invalid_properties.push('invalid value for "restrict_npi_federal_id", restrict_npi_federal_id cannot be nil.')
      end

      if !@scanned_images_folder.nil? && @scanned_images_folder.to_s.length > 255
        invalid_properties.push('invalid value for "scanned_images_folder", the character length must be smaller than or equal to 255.')
      end

      if @set_paid_through.nil?
        invalid_properties.push('invalid value for "set_paid_through", set_paid_through cannot be nil.')
      end

      if @single_refund_check_batch.nil?
        invalid_properties.push('invalid value for "single_refund_check_batch", single_refund_check_batch cannot be nil.')
      end

      if !@state.nil? && @state.to_s.length > 2
        invalid_properties.push('invalid value for "state", the character length must be smaller than or equal to 2.')
      end

      if !@subscriber_id_format.nil? && @subscriber_id_format.to_s.length > 20
        invalid_properties.push('invalid value for "subscriber_id_format", the character length must be smaller than or equal to 20.')
      end

      if !@tax_control_location.nil? && @tax_control_location.to_s.length > 255
        invalid_properties.push('invalid value for "tax_control_location", the character length must be smaller than or equal to 255.')
      end

      if @tax_on_adjudcation_date_fg.nil?
        invalid_properties.push('invalid value for "tax_on_adjudcation_date_fg", tax_on_adjudcation_date_fg cannot be nil.')
      end

      if !@termed_provider_ex_code.nil? && @termed_provider_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "termed_provider_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@toll_free_country_code.nil? && @toll_free_country_code.to_s.length > 8
        invalid_properties.push('invalid value for "toll_free_country_code", the character length must be smaller than or equal to 8.')
      end

      if !@toll_free_phone_number.nil? && @toll_free_phone_number.to_s.length > 20
        invalid_properties.push('invalid value for "toll_free_phone_number", the character length must be smaller than or equal to 20.')
      end

      if !@tooth_activity_ex_code.nil? && @tooth_activity_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "tooth_activity_ex_code", the character length must be smaller than or equal to 8.')
      end

      if !@tooth_chart_type.nil? && @tooth_chart_type.to_s.length > 8
        invalid_properties.push('invalid value for "tooth_chart_type", the character length must be smaller than or equal to 8.')
      end

      if !@u_b92_atp_paid_date_type.nil? && @u_b92_atp_paid_date_type.to_s.length > 32
        invalid_properties.push('invalid value for "u_b92_atp_paid_date_type", the character length must be smaller than or equal to 32.')
      end

      if !@u_c_price_used_ex_code.nil? && @u_c_price_used_ex_code.to_s.length > 8
        invalid_properties.push('invalid value for "u_c_price_used_ex_code", the character length must be smaller than or equal to 8.')
      end

      if @u_c_unit_mulitply.nil?
        invalid_properties.push('invalid value for "u_c_unit_mulitply", u_c_unit_mulitply cannot be nil.')
      end

      if !@unassigned_provider.nil? && @unassigned_provider.to_s.length > 8
        invalid_properties.push('invalid value for "unassigned_provider", the character length must be smaller than or equal to 8.')
      end

      if !@update_user.nil? && @update_user.to_s.length > 20
        invalid_properties.push('invalid value for "update_user", the character length must be smaller than or equal to 20.')
      end

      if @use_greater_user_amount_limit_fg.nil?
        invalid_properties.push('invalid value for "use_greater_user_amount_limit_fg", use_greater_user_amount_limit_fg cannot be nil.')
      end

      if @use_auth_over_unit_split.nil?
        invalid_properties.push('invalid value for "use_auth_over_unit_split", use_auth_over_unit_split cannot be nil.')
      end

      if @use_change_data_capture.nil?
        invalid_properties.push('invalid value for "use_change_data_capture", use_change_data_capture cannot be nil.')
      end

      if @use_commission_cluster_hierarchy.nil?
        invalid_properties.push('invalid value for "use_commission_cluster_hierarchy", use_commission_cluster_hierarchy cannot be nil.')
      end

      if @use_currency.nil?
        invalid_properties.push('invalid value for "use_currency", use_currency cannot be nil.')
      end

      if @use_disability_from_date.nil?
        invalid_properties.push('invalid value for "use_disability_from_date", use_disability_from_date cannot be nil.')
      end

      if @use_expanded_notes.nil?
        invalid_properties.push('invalid value for "use_expanded_notes", use_expanded_notes cannot be nil.')
      end

      if @use_first_match_pricing.nil?
        invalid_properties.push('invalid value for "use_first_match_pricing", use_first_match_pricing cannot be nil.')
      end

      if !@use_other_name.nil? && @use_other_name.to_s.length > 1
        invalid_properties.push('invalid value for "use_other_name", the character length must be smaller than or equal to 1.')
      end

      if @use_primary_diag_match.nil?
        invalid_properties.push('invalid value for "use_primary_diag_match", use_primary_diag_match cannot be nil.')
      end

      if @use_primary_diag_match_capitation.nil?
        invalid_properties.push('invalid value for "use_primary_diag_match_capitation", use_primary_diag_match_capitation cannot be nil.')
      end

      if @use_salary.nil?
        invalid_properties.push('invalid value for "use_salary", use_salary cannot be nil.')
      end

      if @use_tax_control.nil?
        invalid_properties.push('invalid value for "use_tax_control", use_tax_control cannot be nil.')
      end

      if @use_vba_software_2.nil?
        invalid_properties.push('invalid value for "use_vba_software_2", use_vba_software_2 cannot be nil.')
      end

      if @use_vb_adjudicate_2.nil?
        invalid_properties.push('invalid value for "use_vb_adjudicate_2", use_vb_adjudicate_2 cannot be nil.')
      end

      if @use_zip_code_auto_populate.nil?
        invalid_properties.push('invalid value for "use_zip_code_auto_populate", use_zip_code_auto_populate cannot be nil.')
      end

      if @vba_data_integration.nil?
        invalid_properties.push('invalid value for "vba_data_integration", vba_data_integration cannot be nil.')
      end

      if !@vba_data_integration_dbms.nil? && @vba_data_integration_dbms.to_s.length > 128
        invalid_properties.push('invalid value for "vba_data_integration_dbms", the character length must be smaller than or equal to 128.')
      end

      if !@vba_data_integration_db_parm.nil? && @vba_data_integration_db_parm.to_s.length > 1024
        invalid_properties.push('invalid value for "vba_data_integration_db_parm", the character length must be smaller than or equal to 1024.')
      end

      if !@vba_data_integration_database.nil? && @vba_data_integration_database.to_s.length > 128
        invalid_properties.push('invalid value for "vba_data_integration_database", the character length must be smaller than or equal to 128.')
      end

      if !@vba_data_integration_server.nil? && @vba_data_integration_server.to_s.length > 128
        invalid_properties.push('invalid value for "vba_data_integration_server", the character length must be smaller than or equal to 128.')
      end

      if @vba_gateway.nil?
        invalid_properties.push('invalid value for "vba_gateway", vba_gateway cannot be nil.')
      end

      if !@vba_gateway_dbms.nil? && @vba_gateway_dbms.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_dbms", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_db_parm.nil? && @vba_gateway_db_parm.to_s.length > 1024
        invalid_properties.push('invalid value for "vba_gateway_db_parm", the character length must be smaller than or equal to 1024.')
      end

      if !@vba_gateway_database.nil? && @vba_gateway_database.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_database", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_sftp_host.nil? && @vba_gateway_sftp_host.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_sftp_host", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_sftp_log_file.nil? && @vba_gateway_sftp_log_file.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_sftp_log_file", the character length must be smaller than or equal to 256.')
      end

      if @vba_gateway_sftp_mlst.nil?
        invalid_properties.push('invalid value for "vba_gateway_sftp_mlst", vba_gateway_sftp_mlst cannot be nil.')
      end

      if @vba_gateway_sftp_passive.nil?
        invalid_properties.push('invalid value for "vba_gateway_sftp_passive", vba_gateway_sftp_passive cannot be nil.')
      end

      if !@vba_gateway_sftp_password.nil? && @vba_gateway_sftp_password.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_sftp_password", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_sftp_user.nil? && @vba_gateway_sftp_user.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_sftp_user", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_server.nil? && @vba_gateway_server.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_server", the character length must be smaller than or equal to 128.')
      end

      if !@vbap_i_adjudicate_client_code.nil? && @vbap_i_adjudicate_client_code.to_s.length > 32
        invalid_properties.push('invalid value for "vbap_i_adjudicate_client_code", the character length must be smaller than or equal to 32.')
      end

      if !@vbap_i_adjudicate_client_id.nil? && @vbap_i_adjudicate_client_id.to_s.length > 32
        invalid_properties.push('invalid value for "vbap_i_adjudicate_client_id", the character length must be smaller than or equal to 32.')
      end

      if !@vbap_i_adjudicate_database.nil? && @vbap_i_adjudicate_database.to_s.length > 64
        invalid_properties.push('invalid value for "vbap_i_adjudicate_database", the character length must be smaller than or equal to 64.')
      end

      if !@vbap_i_claim_queue_url.nil? && @vbap_i_claim_queue_url.to_s.length > 1024
        invalid_properties.push('invalid value for "vbap_i_claim_queue_url", the character length must be smaller than or equal to 1024.')
      end

      if !@vbap_i_client_code.nil? && @vbap_i_client_code.to_s.length > 32
        invalid_properties.push('invalid value for "vbap_i_client_code", the character length must be smaller than or equal to 32.')
      end

      if @vbap_i_field_masking_enabled.nil?
        invalid_properties.push('invalid value for "vbap_i_field_masking_enabled", vbap_i_field_masking_enabled cannot be nil.')
      end

      if @vbap_i_ip_whitelist.nil?
        invalid_properties.push('invalid value for "vbap_i_ip_whitelist", vbap_i_ip_whitelist cannot be nil.')
      end

      if !@vba_report_mail_password.nil? && @vba_report_mail_password.to_s.length > 64
        invalid_properties.push('invalid value for "vba_report_mail_password", the character length must be smaller than or equal to 64.')
      end

      if !@vba_report_mail_server.nil? && @vba_report_mail_server.to_s.length > 128
        invalid_properties.push('invalid value for "vba_report_mail_server", the character length must be smaller than or equal to 128.')
      end

      if @vba_report_mail_use_ssl.nil?
        invalid_properties.push('invalid value for "vba_report_mail_use_ssl", vba_report_mail_use_ssl cannot be nil.')
      end

      if !@vba_report_mail_user.nil? && @vba_report_mail_user.to_s.length > 64
        invalid_properties.push('invalid value for "vba_report_mail_user", the character length must be smaller than or equal to 64.')
      end

      if !@vba_report_status.nil? && @vba_report_status.to_s.length > 32
        invalid_properties.push('invalid value for "vba_report_status", the character length must be smaller than or equal to 32.')
      end

      if !@vb_adjudicate_status.nil? && @vb_adjudicate_status.to_s.length > 32
        invalid_properties.push('invalid value for "vb_adjudicate_status", the character length must be smaller than or equal to 32.')
      end

      if @validate_federal_id_on_auth.nil?
        invalid_properties.push('invalid value for "validate_federal_id_on_auth", validate_federal_id_on_auth cannot be nil.')
      end

      if @validate_provider_on_auth.nil?
        invalid_properties.push('invalid value for "validate_provider_on_auth", validate_provider_on_auth cannot be nil.')
      end

      if @void_backout_use_current_date.nil?
        invalid_properties.push('invalid value for "void_backout_use_current_date", void_backout_use_current_date cannot be nil.')
      end

      if !@volume_max_met_ex_code.nil? && @volume_max_met_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "volume_max_met_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@volume_min_met_ex_code.nil? && @volume_min_met_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "volume_min_met_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@zelis_eob_code_not_found_ex_code.nil? && @zelis_eob_code_not_found_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "zelis_eob_code_not_found_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@zelis_edit_code_not_found_ex_code.nil? && @zelis_edit_code_not_found_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "zelis_edit_code_not_found_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@zelis_in_network_ex_code.nil? && @zelis_in_network_ex_code.to_s.length > 6
        invalid_properties.push('invalid value for "zelis_in_network_ex_code", the character length must be smaller than or equal to 6.')
      end

      if !@zelis_login.nil? && @zelis_login.to_s.length > 128
        invalid_properties.push('invalid value for "zelis_login", the character length must be smaller than or equal to 128.')
      end

      if !@zelis_password.nil? && @zelis_password.to_s.length > 128
        invalid_properties.push('invalid value for "zelis_password", the character length must be smaller than or equal to 128.')
      end

      if @zelis_poll.nil?
        invalid_properties.push('invalid value for "zelis_poll", zelis_poll cannot be nil.')
      end

      if @zelis_poll_testing.nil?
        invalid_properties.push('invalid value for "zelis_poll_testing", zelis_poll_testing cannot be nil.')
      end

      if !@zelis_url.nil? && @zelis_url.to_s.length > 1024
        invalid_properties.push('invalid value for "zelis_url", the character length must be smaller than or equal to 1024.')
      end

      if !@zip_code.nil? && @zip_code.to_s.length > 32
        invalid_properties.push('invalid value for "zip_code", the character length must be smaller than or equal to 32.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @key_value.nil?
      return false if !@ap_c_schedule.nil? && @ap_c_schedule.to_s.length > 16
      return false if !@accident_review_ex_code.nil? && @accident_review_ex_code.to_s.length > 6
      return false if !@accident_review_plan_benefit_ex_code.nil? && @accident_review_plan_benefit_ex_code.to_s.length > 6
      return false if @additional_invoice_rates.nil?
      return false if !@address.nil? && @address.to_s.length > 60
      return false if !@address2.nil? && @address2.to_s.length > 128
      return false if @adv_password_req.nil?
      return false if @allow_apostrophe_in_name.nil?
      return false if @allow_checks_post_date.nil?
      return false if @allow_claim_benefit_override.nil?
      return false if !@allow_max_at_subscriber.nil? && @allow_max_at_subscriber.to_s.length > 1
      return false if @allow_oop_on_override.nil?
      return false if !@allow_zero_billed.nil? && @allow_zero_billed.to_s.length > 1
      return false if @anesthesia_by_fee_sched.nil?
      return false if !@anesthesia_round_type.nil? && @anesthesia_round_type.to_s.length > 16
      return false if @apply_multiple_benefit_ex_code_manual.nil?
      return false if !@auth_review_full_path.nil? && @auth_review_full_path.to_s.length > 255
      return false if !@auth_review_object.nil? && @auth_review_object.to_s.length > 255
      return false if !@auth_code_closed.nil? && @auth_code_closed.to_s.length > 8
      return false if !@auth_code_pay_amt_zero.nil? && @auth_code_pay_amt_zero.to_s.length > 8
      return false if !@auth_code_reopen.nil? && @auth_code_reopen.to_s.length > 8
      return false if !@auth_code_under_auth_amt.nil? && @auth_code_under_auth_amt.to_s.length > 8
      return false if !@auth_over_unit_split_ex_code.nil? && @auth_over_unit_split_ex_code.to_s.length > 8
      return false if !@auth_penalty_ex_code.nil? && @auth_penalty_ex_code.to_s.length > 6
      return false if @auto_adj_return_to_batch.nil?
      return false if @auto_pay_capitated_claims.nil?
      return false if @auto_process_adjustment_backout.nil?
      return false if @auto_term_plan_on_gateway_request.nil?
      return false if !@b_r_domain_name.nil? && @b_r_domain_name.to_s.length > 256
      return false if !@b_r_site_name.nil? && @b_r_site_name.to_s.length > 256
      return false if !@b_r_site_secret.nil? && @b_r_site_secret.to_s.length > 256
      return false if !@b_r_site_user.nil? && @b_r_site_user.to_s.length > 256
      return false if !@base_load_pass.nil? && @base_load_pass.to_s.length > 256
      return false if @base_load_service_date_flag.nil?
      return false if !@base_load_url.nil? && @base_load_url.to_s.length > 8000
      return false if !@base_load_user.nil? && @base_load_user.to_s.length > 256
      return false if !@beneficiary_age_ex_code.nil? && @beneficiary_age_ex_code.to_s.length > 8
      return false if !@benefit_cascade_ex_code.nil? && @benefit_cascade_ex_code.to_s.length > 8
      return false if !@bridged_tooth_ex_code.nil? && @bridged_tooth_ex_code.to_s.length > 8
      return false if @ca_s_segment_ben_match.nil?
      return false if !@cli_a_certificate_ex_code.nil? && @cli_a_certificate_ex_code.to_s.length > 6
      return false if !@cm_o_installed.nil? && @cm_o_installed.to_s.length > 1
      return false if @cap_by_service_line.nil?
      return false if !@cap_disenroll_adj_reason.nil? && @cap_disenroll_adj_reason.to_s.length > 8
      return false if !@cap_enroll_adj_reason.nil? && @cap_enroll_adj_reason.to_s.length > 8
      return false if !@capitated_service_ex_code.nil? && @capitated_service_ex_code.to_s.length > 8
      return false if @case_default_report.nil?
      return false if @case_default_report.to_s.length > 256
      return false if @case_default_report.to_s.length < 1
      return false if @check_payee_address_flag.nil?
      return false if !@check_stock_location.nil? && @check_stock_location.to_s.length > 128
      return false if !@city.nil? && @city.to_s.length > 20
      return false if !@claim_upload_file_location.nil? && @claim_upload_file_location.to_s.length > 128
      return false if !@claim_upload_schedule.nil? && @claim_upload_schedule.to_s.length > 1
      return false if !@claim_age_ex_code.nil? && @claim_age_ex_code.to_s.length > 6
      return false if !@claim_allowed_billed_ex_code.nil? && @claim_allowed_billed_ex_code.to_s.length > 6
      return false if !@claim_amt_ex_code.nil? && @claim_amt_ex_code.to_s.length > 6
      return false if !@claim_auth_denied_ex_code.nil? && @claim_auth_denied_ex_code.to_s.length > 6
      return false if !@claim_auth_details_err_ex.nil? && @claim_auth_details_err_ex.to_s.length > 6
      return false if !@claim_auth_diff_mem_ex.nil? && @claim_auth_diff_mem_ex.to_s.length > 6
      return false if !@claim_auth_diff_prov_ex.nil? && @claim_auth_diff_prov_ex.to_s.length > 6
      return false if !@claim_auth_exceeded_ex_code.nil? && @claim_auth_exceeded_ex_code.to_s.length > 6
      return false if !@claim_auth_invalid_date_ex.nil? && @claim_auth_invalid_date_ex.to_s.length > 6
      return false if !@claim_auth_not_approved_ex.nil? && @claim_auth_not_approved_ex.to_s.length > 6
      return false if !@claim_auth_proc_exceeded_ex_code.nil? && @claim_auth_proc_exceeded_ex_code.to_s.length > 8
      return false if !@claim_auth_reqd_ex_code.nil? && @claim_auth_reqd_ex_code.to_s.length > 6
      return false if !@claim_ben_not_found_ex_code.nil? && @claim_ben_not_found_ex_code.to_s.length > 6
      return false if !@claim_cov_in_net_only_ex_code.nil? && @claim_cov_in_net_only_ex_code.to_s.length > 6
      return false if !@claim_dead_ex_code.nil? && @claim_dead_ex_code.to_s.length > 6
      return false if !@claim_ded_credit_oon_used_ex_code.nil? && @claim_ded_credit_oon_used_ex_code.to_s.length > 8
      return false if !@claim_ded_credit_ppo_used_ex_code.nil? && @claim_ded_credit_ppo_used_ex_code.to_s.length > 8
      return false if !@claim_denied_ex_code.nil? && @claim_denied_ex_code.to_s.length > 6
      return false if !@claim_diagnosis_age_ex_code.nil? && @claim_diagnosis_age_ex_code.to_s.length > 6
      return false if !@claim_diagnosis_gender_ex_code.nil? && @claim_diagnosis_gender_ex_code.to_s.length > 6
      return false if !@claim_dup_error_ex_code.nil? && @claim_dup_error_ex_code.to_s.length > 8
      return false if !@claim_error_ex_code.nil? && @claim_error_ex_code.to_s.length > 6
      return false if !@claim_exceed_daily_co_pay_max_ex_code.nil? && @claim_exceed_daily_co_pay_max_ex_code.to_s.length > 8
      return false if !@claim_exceed_injury_ex_code.nil? && @claim_exceed_injury_ex_code.to_s.length > 6
      return false if !@claim_exceed_lifetime_ex_code.nil? && @claim_exceed_lifetime_ex_code.to_s.length > 6
      return false if !@claim_exceed_lifetime_oon_ex_code.nil? && @claim_exceed_lifetime_oon_ex_code.to_s.length > 8
      return false if !@claim_exceed_lifetime_ppo_ex_code.nil? && @claim_exceed_lifetime_ppo_ex_code.to_s.length > 8
      return false if !@claim_exceed_maximum_ex_code.nil? && @claim_exceed_maximum_ex_code.to_s.length > 6
      return false if !@claim_exceed_per_diem_ex_code.nil? && @claim_exceed_per_diem_ex_code.to_s.length > 6
      return false if !@claim_fee_sched_error_ex.nil? && @claim_fee_sched_error_ex.to_s.length > 6
      return false if !@claim_lag_error_ex_code.nil? && @claim_lag_error_ex_code.to_s.length > 6
      return false if !@claim_late_ex_code.nil? && @claim_late_ex_code.to_s.length > 6
      return false if !@claim_life_benefit_met_ex_code.nil? && @claim_life_benefit_met_ex_code.to_s.length > 6
      return false if !@claim_life_plan_met_ex_code.nil? && @claim_life_plan_met_ex_code.to_s.length > 6
      return false if !@claim_no_prov_fee_sched.nil? && @claim_no_prov_fee_sched.to_s.length > 6
      return false if !@claim_no_rate_fee_ex_code.nil? && @claim_no_rate_fee_ex_code.to_s.length > 8
      return false if !@claim_not_adult_dependent.nil? && @claim_not_adult_dependent.to_s.length > 6
      return false if !@claim_not_at_place_ex_code.nil? && @claim_not_at_place_ex_code.to_s.length > 6
      return false if !@claim_not_by_prov_ex_code.nil? && @claim_not_by_prov_ex_code.to_s.length > 6
      return false if !@claim_not_cov_ex_code.nil? && @claim_not_cov_ex_code.to_s.length > 6
      return false if !@claim_not_enrolled_ex_code.nil? && @claim_not_enrolled_ex_code.to_s.length > 6
      return false if @claim_not_enrolled_ex_code_null_use_pre_post.nil?
      return false if !@claim_not_enrolled_post_ex_code.nil? && @claim_not_enrolled_post_ex_code.to_s.length > 8
      return false if !@claim_not_enrolled_pre_ex_code.nil? && @claim_not_enrolled_pre_ex_code.to_s.length > 8
      return false if !@claim_not_student_ex_code.nil? && @claim_not_student_ex_code.to_s.length > 6
      return false if !@claim_other_coverage_ex_code.nil? && @claim_other_coverage_ex_code.to_s.length > 6
      return false if !@claim_over_max_ex_code.nil? && @claim_over_max_ex_code.to_s.length > 6
      return false if !@claim_over_max_oon_ex_code.nil? && @claim_over_max_oon_ex_code.to_s.length > 8
      return false if !@claim_over_max_ppo_ex_code.nil? && @claim_over_max_ppo_ex_code.to_s.length > 8
      return false if !@claim_procedure_age_ex_code.nil? && @claim_procedure_age_ex_code.to_s.length > 6
      return false if !@claim_procedure_gender_ex_code.nil? && @claim_procedure_gender_ex_code.to_s.length > 6
      return false if !@claim_service_outside_enrollment_ex_code.nil? && @claim_service_outside_enrollment_ex_code.to_s.length > 6
      return false if !@claim_splits_plan_year_ex_code.nil? && @claim_splits_plan_year_ex_code.to_s.length > 8
      return false if @clear_auth_penalty_ex_code.nil?
      return false if !@client_id.nil? && @client_id.to_s.length > 6
      return false if !@client_name.nil? && @client_name.to_s.length > 90
      return false if !@co_ins_max_ex_code.nil? && @co_ins_max_ex_code.to_s.length > 8
      return false if !@co_ins_max_ex_code_member.nil? && @co_ins_max_ex_code_member.to_s.length > 8
      return false if @co_pay_by_billed.nil?
      return false if !@cogito_app_client_id.nil? && @cogito_app_client_id.to_s.length > 128
      return false if !@cogito_app_client_secret.nil? && @cogito_app_client_secret.to_s.length > 256
      return false if !@cogito_user_pool_id.nil? && @cogito_user_pool_id.to_s.length > 64
      return false if @combined_notes_report_fg.nil?
      return false if !@comm_disenroll_adj_reason.nil? && @comm_disenroll_adj_reason.to_s.length > 8
      return false if !@comm_enroll_adj_reason.nil? && @comm_enroll_adj_reason.to_s.length > 8
      return false if !@company_short.nil? && @company_short.to_s.length > 4
      return false if !@context4_fee_selector.nil? && @context4_fee_selector.to_s.length > 8
      return false if !@context4_fee_selector_oon.nil? && @context4_fee_selector_oon.to_s.length > 8
      return false if !@context4_password.nil? && @context4_password.to_s.length > 128
      return false if !@context4_payor_type.nil? && @context4_payor_type.to_s.length > 8
      return false if @context4_plan_price_not_greater_billed_fg.nil?
      return false if @context4_send_billing_address_fg.nil?
      return false if !@context4_user_id.nil? && @context4_user_id.to_s.length > 128
      return false if !@context4_web_uri.nil? && @context4_web_uri.to_s.length > 256
      return false if !@context4_web_uri_delete.nil? && @context4_web_uri_delete.to_s.length > 256
      return false if !@copay_ex_code.nil? && @copay_ex_code.to_s.length > 6
      return false if !@country_id.nil? && @country_id.to_s.length > 8
      return false if @credential_by_payee.nil?
      return false if !@credentialing.nil? && @credentialing.to_s.length > 1
      return false if !@crowned_tooth_ex_code.nil? && @crowned_tooth_ex_code.to_s.length > 8
      return false if !@currency_format.nil? && @currency_format.to_s.length > 20
      return false if !@dr_g_schedule.nil? && @dr_g_schedule.to_s.length > 16
      return false if !@database_version.nil? && @database_version.to_s.length > 32
      return false if !@date_format.nil? && @date_format.to_s.length > 20
      return false if !@deductible_ex_code.nil? && @deductible_ex_code.to_s.length > 6
      return false if !@deductible_max_ex_code.nil? && @deductible_max_ex_code.to_s.length > 8
      return false if !@deductible_max_ex_code_member.nil? && @deductible_max_ex_code_member.to_s.length > 8
      return false if !@default_1099_flag.nil? && @default_1099_flag.to_s.length > 1
      return false if !@default_auth_code.nil? && @default_auth_code.to_s.length > 8
      return false if !@default_currency_id.nil? && @default_currency_id.to_s.length > 16
      return false if !@default_id_card_request_type.nil? && @default_id_card_request_type.to_s.length > 16
      return false if !@default_login_sound.nil? && @default_login_sound.to_s.length > 255
      return false if !@default_payor_id.nil? && @default_payor_id.to_s.length > 10
      return false if !@dental_atp_paid_date_type.nil? && @dental_atp_paid_date_type.to_s.length > 32
      return false if @diagnostic_code_type_default.nil?
      return false if @diagnostic_code_type_default.to_s.length > 16
      return false if @diagnostic_code_type_default.to_s.length < 1
      return false if @disallow_spec_char_in_plan_id.nil?
      return false if @disconnect_call_notes_from_claim_provider.nil?
      return false if !@disenroll_auth_code.nil? && @disenroll_auth_code.to_s.length > 8
      return false if @display_ppo_null_network.nil?
      return false if !@ed_i_installed.nil? && @ed_i_installed.to_s.length > 1
      return false if !@eo_b_report_location.nil? && @eo_b_report_location.to_s.length > 255
      return false if !@e_r_place_of_service.nil? && @e_r_place_of_service.to_s.length > 5
      return false if @enforce_mfa.nil?
      return false if !@entry_user.nil? && @entry_user.to_s.length > 20
      return false if @error_invalid_diag.nil?
      return false if @error_invalid_proc.nil?
      return false if @error_multiple_plan_years.nil?
      return false if @error_termed_provider.nil?
      return false if !@exceed_exhaust_date_ex_code.nil? && @exceed_exhaust_date_ex_code.to_s.length > 8
      return false if !@exceed_return_to_work_ex_code.nil? && @exceed_return_to_work_ex_code.to_s.length > 8
      return false if !@exceeds_paid_through_ex_code.nil? && @exceeds_paid_through_ex_code.to_s.length > 8
      return false if !@fax_country_code.nil? && @fax_country_code.to_s.length > 8
      return false if !@fax_number.nil? && @fax_number.to_s.length > 20
      return false if !@federal_id.nil? && @federal_id.to_s.length > 20
      return false if @fee_sched_match_claim_year.nil?
      return false if @fee_schedule_ex_codes_manual.nil?
      return false if @fee_schedule_exact_match_fg.nil?
      return false if !@filled_tooth_ex_code.nil? && @filled_tooth_ex_code.to_s.length > 8
      return false if !@first_benefit_auto_selected_ex_code.nil? && @first_benefit_auto_selected_ex_code.to_s.length > 6
      return false if !@flex_claim_after_grace_period_ex_code.nil? && @flex_claim_after_grace_period_ex_code.to_s.length > 8
      return false if !@flex_claim_after_submit_period_ex_code.nil? && @flex_claim_after_submit_period_ex_code.to_s.length > 8
      return false if !@flex_claim_funds_exhausted_ex_code.nil? && @flex_claim_funds_exhausted_ex_code.to_s.length > 8
      return false if @force_call_track_note.nil?
      return false if @force_claim_rec_date.nil?
      return false if !@force_claim_sub_id.nil? && @force_claim_sub_id.to_s.length > 1
      return false if @force_latest_enrollment.nil?
      return false if @force_leading_zero_on_rev_code.nil?
      return false if @full_backout_on_void_distribution.nil?
      return false if @full_month_billing.nil?
      return false if @full_month_billing.to_s.length > 1
      return false if @full_month_billing.to_s.length < 1
      return false if !@generate_comm_user.nil? && @generate_comm_user.to_s.length > 16
      return false if !@generate_inv_user.nil? && @generate_inv_user.to_s.length > 16
      return false if @generate_negative_inv.nil?
      return false if !@global_cmu_id.nil? && @global_cmu_id.to_s.length > 16
      return false if !@i_d_card_location.nil? && @i_d_card_location.to_s.length > 255
      return false if !@iv_r_cs_country_code.nil? && @iv_r_cs_country_code.to_s.length > 8
      return false if !@iv_r_cs_phone_number.nil? && @iv_r_cs_phone_number.to_s.length > 20
      return false if @ignore_care_management_hierarchy_fg.nil?
      return false if @ignore_claim_funding_status_change_msg.nil?
      return false if !@inactive_payee_ex_code.nil? && @inactive_payee_ex_code.to_s.length > 6
      return false if @include_invalid_enrollments.nil?
      return false if !@inv_grace_period_type.nil? && @inv_grace_period_type.to_s.length > 1
      return false if !@invalid_diag_ex_code.nil? && @invalid_diag_ex_code.to_s.length > 6
      return false if !@invalid_proc_ex_code.nil? && @invalid_proc_ex_code.to_s.length > 6
      return false if @invoice_enrolled_by.nil?
      return false if !@invoice_grace_ex_code.nil? && @invoice_grace_ex_code.to_s.length > 6
      return false if !@invoice_remit_address1.nil? && @invoice_remit_address1.to_s.length > 128
      return false if !@invoice_remit_address2.nil? && @invoice_remit_address2.to_s.length > 128
      return false if !@invoice_remit_city.nil? && @invoice_remit_city.to_s.length > 32
      return false if !@invoice_remit_country_code.nil? && @invoice_remit_country_code.to_s.length > 8
      return false if !@invoice_remit_country_id.nil? && @invoice_remit_country_id.to_s.length > 8
      return false if !@invoice_remit_name.nil? && @invoice_remit_name.to_s.length > 128
      return false if !@invoice_remit_phone_number.nil? && @invoice_remit_phone_number.to_s.length > 32
      return false if !@invoice_remit_state.nil? && @invoice_remit_state.to_s.length > 2
      return false if !@invoice_remit_zip_code.nil? && @invoice_remit_zip_code.to_s.length > 32
      return false if @lag_time.nil?
      return false if @lock_auth_review.nil?
      return false if @lock_auth_review_all.nil?
      return false if @log_base_load_call.nil?
      return false if !@logo_file.nil? && @logo_file.to_s.length > 128
      return false if !@long_state_names.nil? && @long_state_names.to_s.length > 1
      return false if !@mail_password.nil? && @mail_password.to_s.length > 64
      return false if !@mail_server.nil? && @mail_server.to_s.length > 128
      return false if @mail_use_ssl.nil?
      return false if !@mail_user.nil? && @mail_user.to_s.length > 64
      return false if @medicare_on_benefit.nil?
      return false if @medicare_on_benefit.to_s.length > 1
      return false if @medicare_on_benefit.to_s.length < 1
      return false if @member_address_dob_not_reqd.nil?
      return false if @member_match_by_name_birth_date.nil?
      return false if !@modifier_not_eff_ex_code.nil? && @modifier_not_eff_ex_code.to_s.length > 8
      return false if !@multiple_auth_ex_code.nil? && @multiple_auth_ex_code.to_s.length > 6
      return false if !@name.nil? && @name.to_s.length > 60
      return false if !@network_does_not_match_repriced_network_ex_code.nil? && @network_does_not_match_repriced_network_ex_code.to_s.length > 6
      return false if @note_attachment_db.nil?
      return false if !@note_attachment_local_default.nil? && @note_attachment_local_default.to_s.length > 255
      return false if !@note_attachment_remote_default.nil? && @note_attachment_remote_default.to_s.length > 255
      return false if !@oo_p_max_ex_code.nil? && @oo_p_max_ex_code.to_s.length > 8
      return false if !@oo_p_max_ex_code_member.nil? && @oo_p_max_ex_code_member.to_s.length > 8
      return false if !@out_of_net_ex_code.nil? && @out_of_net_ex_code.to_s.length > 8
      return false if !@overpayment_deduction_type.nil? && @overpayment_deduction_type.to_s.length > 8
      return false if !@pc_p_only_ex_code.nil? && @pc_p_only_ex_code.to_s.length > 8
      return false if @partial_cap.nil?
      return false if @payment_proration.nil?
      return false if !@phone_country_code.nil? && @phone_country_code.to_s.length > 8
      return false if !@phone_format.nil? && @phone_format.to_s.length > 20
      return false if !@phone_number.nil? && @phone_number.to_s.length > 20
      return false if !@place_code_not_setup_ex_code.nil? && @place_code_not_setup_ex_code.to_s.length > 6
      return false if !@plan_benefit_override_network_id.nil? && @plan_benefit_override_network_id.to_s.length > 10
      return false if !@policy_forfeiture_grace_period_type.nil? && @policy_forfeiture_grace_period_type.to_s.length > 1
      return false if @premium_proration.nil?
      return false if @prevent_suspense_release_by_process_user.nil?
      return false if @process_auths_when_pended.nil?
      return false if @process_auto_cob.nil?
      return false if !@processing_mode.nil? && @processing_mode.to_s.length > 1
      return false if !@prof_atp_paid_date_type.nil? && @prof_atp_paid_date_type.to_s.length > 32
      return false if !@prosthesis_tooth_ex_code.nil? && @prosthesis_tooth_ex_code.to_s.length > 8
      return false if @protect_alternate_id.nil?
      return false if !@provider_auth_exempt_procedure_ex_code.nil? && @provider_auth_exempt_procedure_ex_code.to_s.length > 8
      return false if !@provider_not_active_auth_code.nil? && @provider_not_active_auth_code.to_s.length > 8
      return false if !@pulled_tooth_ex_code.nil? && @pulled_tooth_ex_code.to_s.length > 8
      return false if !@qp_a_method_1_ex_code.nil? && @qp_a_method_1_ex_code.to_s.length > 6
      return false if !@qp_a_method_2_ex_code.nil? && @qp_a_method_2_ex_code.to_s.length > 6
      return false if !@r_x_atp_paid_date_type.nil? && @r_x_atp_paid_date_type.to_s.length > 32
      return false if @reins_split_claim.nil?
      return false if !@repriced_line.nil? && @repriced_line.to_s.length > 64
      return false if @request_id_card_prompt_enrollment.nil?
      return false if !@request_provider_email.nil? && @request_provider_email.to_s.length > 255
      return false if !@request_reassess_email.nil? && @request_reassess_email.to_s.length > 255
      return false if @restrict_npi_federal_id.nil?
      return false if !@scanned_images_folder.nil? && @scanned_images_folder.to_s.length > 255
      return false if @set_paid_through.nil?
      return false if @single_refund_check_batch.nil?
      return false if !@state.nil? && @state.to_s.length > 2
      return false if !@subscriber_id_format.nil? && @subscriber_id_format.to_s.length > 20
      return false if !@tax_control_location.nil? && @tax_control_location.to_s.length > 255
      return false if @tax_on_adjudcation_date_fg.nil?
      return false if !@termed_provider_ex_code.nil? && @termed_provider_ex_code.to_s.length > 6
      return false if !@toll_free_country_code.nil? && @toll_free_country_code.to_s.length > 8
      return false if !@toll_free_phone_number.nil? && @toll_free_phone_number.to_s.length > 20
      return false if !@tooth_activity_ex_code.nil? && @tooth_activity_ex_code.to_s.length > 8
      return false if !@tooth_chart_type.nil? && @tooth_chart_type.to_s.length > 8
      return false if !@u_b92_atp_paid_date_type.nil? && @u_b92_atp_paid_date_type.to_s.length > 32
      return false if !@u_c_price_used_ex_code.nil? && @u_c_price_used_ex_code.to_s.length > 8
      return false if @u_c_unit_mulitply.nil?
      return false if !@unassigned_provider.nil? && @unassigned_provider.to_s.length > 8
      return false if !@update_user.nil? && @update_user.to_s.length > 20
      return false if @use_greater_user_amount_limit_fg.nil?
      return false if @use_auth_over_unit_split.nil?
      return false if @use_change_data_capture.nil?
      return false if @use_commission_cluster_hierarchy.nil?
      return false if @use_currency.nil?
      return false if @use_disability_from_date.nil?
      return false if @use_expanded_notes.nil?
      return false if @use_first_match_pricing.nil?
      return false if !@use_other_name.nil? && @use_other_name.to_s.length > 1
      return false if @use_primary_diag_match.nil?
      return false if @use_primary_diag_match_capitation.nil?
      return false if @use_salary.nil?
      return false if @use_tax_control.nil?
      return false if @use_vba_software_2.nil?
      return false if @use_vb_adjudicate_2.nil?
      return false if @use_zip_code_auto_populate.nil?
      return false if @vba_data_integration.nil?
      return false if !@vba_data_integration_dbms.nil? && @vba_data_integration_dbms.to_s.length > 128
      return false if !@vba_data_integration_db_parm.nil? && @vba_data_integration_db_parm.to_s.length > 1024
      return false if !@vba_data_integration_database.nil? && @vba_data_integration_database.to_s.length > 128
      return false if !@vba_data_integration_server.nil? && @vba_data_integration_server.to_s.length > 128
      return false if @vba_gateway.nil?
      return false if !@vba_gateway_dbms.nil? && @vba_gateway_dbms.to_s.length > 128
      return false if !@vba_gateway_db_parm.nil? && @vba_gateway_db_parm.to_s.length > 1024
      return false if !@vba_gateway_database.nil? && @vba_gateway_database.to_s.length > 128
      return false if !@vba_gateway_sftp_host.nil? && @vba_gateway_sftp_host.to_s.length > 256
      return false if !@vba_gateway_sftp_log_file.nil? && @vba_gateway_sftp_log_file.to_s.length > 256
      return false if @vba_gateway_sftp_mlst.nil?
      return false if @vba_gateway_sftp_passive.nil?
      return false if !@vba_gateway_sftp_password.nil? && @vba_gateway_sftp_password.to_s.length > 256
      return false if !@vba_gateway_sftp_user.nil? && @vba_gateway_sftp_user.to_s.length > 64
      return false if !@vba_gateway_server.nil? && @vba_gateway_server.to_s.length > 128
      return false if !@vbap_i_adjudicate_client_code.nil? && @vbap_i_adjudicate_client_code.to_s.length > 32
      return false if !@vbap_i_adjudicate_client_id.nil? && @vbap_i_adjudicate_client_id.to_s.length > 32
      return false if !@vbap_i_adjudicate_database.nil? && @vbap_i_adjudicate_database.to_s.length > 64
      return false if !@vbap_i_claim_queue_url.nil? && @vbap_i_claim_queue_url.to_s.length > 1024
      return false if !@vbap_i_client_code.nil? && @vbap_i_client_code.to_s.length > 32
      return false if @vbap_i_field_masking_enabled.nil?
      return false if @vbap_i_ip_whitelist.nil?
      return false if !@vba_report_mail_password.nil? && @vba_report_mail_password.to_s.length > 64
      return false if !@vba_report_mail_server.nil? && @vba_report_mail_server.to_s.length > 128
      return false if @vba_report_mail_use_ssl.nil?
      return false if !@vba_report_mail_user.nil? && @vba_report_mail_user.to_s.length > 64
      return false if !@vba_report_status.nil? && @vba_report_status.to_s.length > 32
      return false if !@vb_adjudicate_status.nil? && @vb_adjudicate_status.to_s.length > 32
      return false if @validate_federal_id_on_auth.nil?
      return false if @validate_provider_on_auth.nil?
      return false if @void_backout_use_current_date.nil?
      return false if !@volume_max_met_ex_code.nil? && @volume_max_met_ex_code.to_s.length > 6
      return false if !@volume_min_met_ex_code.nil? && @volume_min_met_ex_code.to_s.length > 6
      return false if !@zelis_eob_code_not_found_ex_code.nil? && @zelis_eob_code_not_found_ex_code.to_s.length > 6
      return false if !@zelis_edit_code_not_found_ex_code.nil? && @zelis_edit_code_not_found_ex_code.to_s.length > 6
      return false if !@zelis_in_network_ex_code.nil? && @zelis_in_network_ex_code.to_s.length > 6
      return false if !@zelis_login.nil? && @zelis_login.to_s.length > 128
      return false if !@zelis_password.nil? && @zelis_password.to_s.length > 128
      return false if @zelis_poll.nil?
      return false if @zelis_poll_testing.nil?
      return false if !@zelis_url.nil? && @zelis_url.to_s.length > 1024
      return false if !@zip_code.nil? && @zip_code.to_s.length > 32
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] key_value Value to be assigned
    def key_value=(key_value)
      if key_value.nil?
        fail ArgumentError, 'key_value cannot be nil'
      end

      @key_value = key_value
    end

    # Custom attribute writer method with validation
    # @param [Object] ap_c_schedule Value to be assigned
    def ap_c_schedule=(ap_c_schedule)
      if !ap_c_schedule.nil? && ap_c_schedule.to_s.length > 16
        fail ArgumentError, 'invalid value for "ap_c_schedule", the character length must be smaller than or equal to 16.'
      end

      @ap_c_schedule = ap_c_schedule
    end

    # Custom attribute writer method with validation
    # @param [Object] accident_review_ex_code Value to be assigned
    def accident_review_ex_code=(accident_review_ex_code)
      if !accident_review_ex_code.nil? && accident_review_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "accident_review_ex_code", the character length must be smaller than or equal to 6.'
      end

      @accident_review_ex_code = accident_review_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] accident_review_plan_benefit_ex_code Value to be assigned
    def accident_review_plan_benefit_ex_code=(accident_review_plan_benefit_ex_code)
      if !accident_review_plan_benefit_ex_code.nil? && accident_review_plan_benefit_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "accident_review_plan_benefit_ex_code", the character length must be smaller than or equal to 6.'
      end

      @accident_review_plan_benefit_ex_code = accident_review_plan_benefit_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] additional_invoice_rates Value to be assigned
    def additional_invoice_rates=(additional_invoice_rates)
      if additional_invoice_rates.nil?
        fail ArgumentError, 'additional_invoice_rates cannot be nil'
      end

      @additional_invoice_rates = additional_invoice_rates
    end

    # Custom attribute writer method with validation
    # @param [Object] address Value to be assigned
    def address=(address)
      if !address.nil? && address.to_s.length > 60
        fail ArgumentError, 'invalid value for "address", the character length must be smaller than or equal to 60.'
      end

      @address = address
    end

    # Custom attribute writer method with validation
    # @param [Object] address2 Value to be assigned
    def address2=(address2)
      if !address2.nil? && address2.to_s.length > 128
        fail ArgumentError, 'invalid value for "address2", the character length must be smaller than or equal to 128.'
      end

      @address2 = address2
    end

    # Custom attribute writer method with validation
    # @param [Object] adv_password_req Value to be assigned
    def adv_password_req=(adv_password_req)
      if adv_password_req.nil?
        fail ArgumentError, 'adv_password_req cannot be nil'
      end

      @adv_password_req = adv_password_req
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_apostrophe_in_name Value to be assigned
    def allow_apostrophe_in_name=(allow_apostrophe_in_name)
      if allow_apostrophe_in_name.nil?
        fail ArgumentError, 'allow_apostrophe_in_name cannot be nil'
      end

      @allow_apostrophe_in_name = allow_apostrophe_in_name
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_checks_post_date Value to be assigned
    def allow_checks_post_date=(allow_checks_post_date)
      if allow_checks_post_date.nil?
        fail ArgumentError, 'allow_checks_post_date cannot be nil'
      end

      @allow_checks_post_date = allow_checks_post_date
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_claim_benefit_override Value to be assigned
    def allow_claim_benefit_override=(allow_claim_benefit_override)
      if allow_claim_benefit_override.nil?
        fail ArgumentError, 'allow_claim_benefit_override cannot be nil'
      end

      @allow_claim_benefit_override = allow_claim_benefit_override
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_max_at_subscriber Value to be assigned
    def allow_max_at_subscriber=(allow_max_at_subscriber)
      if !allow_max_at_subscriber.nil? && allow_max_at_subscriber.to_s.length > 1
        fail ArgumentError, 'invalid value for "allow_max_at_subscriber", the character length must be smaller than or equal to 1.'
      end

      @allow_max_at_subscriber = allow_max_at_subscriber
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_oop_on_override Value to be assigned
    def allow_oop_on_override=(allow_oop_on_override)
      if allow_oop_on_override.nil?
        fail ArgumentError, 'allow_oop_on_override cannot be nil'
      end

      @allow_oop_on_override = allow_oop_on_override
    end

    # Custom attribute writer method with validation
    # @param [Object] allow_zero_billed Value to be assigned
    def allow_zero_billed=(allow_zero_billed)
      if !allow_zero_billed.nil? && allow_zero_billed.to_s.length > 1
        fail ArgumentError, 'invalid value for "allow_zero_billed", the character length must be smaller than or equal to 1.'
      end

      @allow_zero_billed = allow_zero_billed
    end

    # Custom attribute writer method with validation
    # @param [Object] anesthesia_by_fee_sched Value to be assigned
    def anesthesia_by_fee_sched=(anesthesia_by_fee_sched)
      if anesthesia_by_fee_sched.nil?
        fail ArgumentError, 'anesthesia_by_fee_sched cannot be nil'
      end

      @anesthesia_by_fee_sched = anesthesia_by_fee_sched
    end

    # Custom attribute writer method with validation
    # @param [Object] anesthesia_round_type Value to be assigned
    def anesthesia_round_type=(anesthesia_round_type)
      if !anesthesia_round_type.nil? && anesthesia_round_type.to_s.length > 16
        fail ArgumentError, 'invalid value for "anesthesia_round_type", the character length must be smaller than or equal to 16.'
      end

      @anesthesia_round_type = anesthesia_round_type
    end

    # Custom attribute writer method with validation
    # @param [Object] apply_multiple_benefit_ex_code_manual Value to be assigned
    def apply_multiple_benefit_ex_code_manual=(apply_multiple_benefit_ex_code_manual)
      if apply_multiple_benefit_ex_code_manual.nil?
        fail ArgumentError, 'apply_multiple_benefit_ex_code_manual cannot be nil'
      end

      @apply_multiple_benefit_ex_code_manual = apply_multiple_benefit_ex_code_manual
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_review_full_path Value to be assigned
    def auth_review_full_path=(auth_review_full_path)
      if !auth_review_full_path.nil? && auth_review_full_path.to_s.length > 255
        fail ArgumentError, 'invalid value for "auth_review_full_path", the character length must be smaller than or equal to 255.'
      end

      @auth_review_full_path = auth_review_full_path
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_review_object Value to be assigned
    def auth_review_object=(auth_review_object)
      if !auth_review_object.nil? && auth_review_object.to_s.length > 255
        fail ArgumentError, 'invalid value for "auth_review_object", the character length must be smaller than or equal to 255.'
      end

      @auth_review_object = auth_review_object
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_code_closed Value to be assigned
    def auth_code_closed=(auth_code_closed)
      if !auth_code_closed.nil? && auth_code_closed.to_s.length > 8
        fail ArgumentError, 'invalid value for "auth_code_closed", the character length must be smaller than or equal to 8.'
      end

      @auth_code_closed = auth_code_closed
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_code_pay_amt_zero Value to be assigned
    def auth_code_pay_amt_zero=(auth_code_pay_amt_zero)
      if !auth_code_pay_amt_zero.nil? && auth_code_pay_amt_zero.to_s.length > 8
        fail ArgumentError, 'invalid value for "auth_code_pay_amt_zero", the character length must be smaller than or equal to 8.'
      end

      @auth_code_pay_amt_zero = auth_code_pay_amt_zero
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_code_reopen Value to be assigned
    def auth_code_reopen=(auth_code_reopen)
      if !auth_code_reopen.nil? && auth_code_reopen.to_s.length > 8
        fail ArgumentError, 'invalid value for "auth_code_reopen", the character length must be smaller than or equal to 8.'
      end

      @auth_code_reopen = auth_code_reopen
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_code_under_auth_amt Value to be assigned
    def auth_code_under_auth_amt=(auth_code_under_auth_amt)
      if !auth_code_under_auth_amt.nil? && auth_code_under_auth_amt.to_s.length > 8
        fail ArgumentError, 'invalid value for "auth_code_under_auth_amt", the character length must be smaller than or equal to 8.'
      end

      @auth_code_under_auth_amt = auth_code_under_auth_amt
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_over_unit_split_ex_code Value to be assigned
    def auth_over_unit_split_ex_code=(auth_over_unit_split_ex_code)
      if !auth_over_unit_split_ex_code.nil? && auth_over_unit_split_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "auth_over_unit_split_ex_code", the character length must be smaller than or equal to 8.'
      end

      @auth_over_unit_split_ex_code = auth_over_unit_split_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] auth_penalty_ex_code Value to be assigned
    def auth_penalty_ex_code=(auth_penalty_ex_code)
      if !auth_penalty_ex_code.nil? && auth_penalty_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "auth_penalty_ex_code", the character length must be smaller than or equal to 6.'
      end

      @auth_penalty_ex_code = auth_penalty_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] auto_adj_return_to_batch Value to be assigned
    def auto_adj_return_to_batch=(auto_adj_return_to_batch)
      if auto_adj_return_to_batch.nil?
        fail ArgumentError, 'auto_adj_return_to_batch cannot be nil'
      end

      @auto_adj_return_to_batch = auto_adj_return_to_batch
    end

    # Custom attribute writer method with validation
    # @param [Object] auto_pay_capitated_claims Value to be assigned
    def auto_pay_capitated_claims=(auto_pay_capitated_claims)
      if auto_pay_capitated_claims.nil?
        fail ArgumentError, 'auto_pay_capitated_claims cannot be nil'
      end

      @auto_pay_capitated_claims = auto_pay_capitated_claims
    end

    # Custom attribute writer method with validation
    # @param [Object] auto_process_adjustment_backout Value to be assigned
    def auto_process_adjustment_backout=(auto_process_adjustment_backout)
      if auto_process_adjustment_backout.nil?
        fail ArgumentError, 'auto_process_adjustment_backout cannot be nil'
      end

      @auto_process_adjustment_backout = auto_process_adjustment_backout
    end

    # Custom attribute writer method with validation
    # @param [Object] auto_term_plan_on_gateway_request Value to be assigned
    def auto_term_plan_on_gateway_request=(auto_term_plan_on_gateway_request)
      if auto_term_plan_on_gateway_request.nil?
        fail ArgumentError, 'auto_term_plan_on_gateway_request cannot be nil'
      end

      @auto_term_plan_on_gateway_request = auto_term_plan_on_gateway_request
    end

    # Custom attribute writer method with validation
    # @param [Object] b_r_domain_name Value to be assigned
    def b_r_domain_name=(b_r_domain_name)
      if !b_r_domain_name.nil? && b_r_domain_name.to_s.length > 256
        fail ArgumentError, 'invalid value for "b_r_domain_name", the character length must be smaller than or equal to 256.'
      end

      @b_r_domain_name = b_r_domain_name
    end

    # Custom attribute writer method with validation
    # @param [Object] b_r_site_name Value to be assigned
    def b_r_site_name=(b_r_site_name)
      if !b_r_site_name.nil? && b_r_site_name.to_s.length > 256
        fail ArgumentError, 'invalid value for "b_r_site_name", the character length must be smaller than or equal to 256.'
      end

      @b_r_site_name = b_r_site_name
    end

    # Custom attribute writer method with validation
    # @param [Object] b_r_site_secret Value to be assigned
    def b_r_site_secret=(b_r_site_secret)
      if !b_r_site_secret.nil? && b_r_site_secret.to_s.length > 256
        fail ArgumentError, 'invalid value for "b_r_site_secret", the character length must be smaller than or equal to 256.'
      end

      @b_r_site_secret = b_r_site_secret
    end

    # Custom attribute writer method with validation
    # @param [Object] b_r_site_user Value to be assigned
    def b_r_site_user=(b_r_site_user)
      if !b_r_site_user.nil? && b_r_site_user.to_s.length > 256
        fail ArgumentError, 'invalid value for "b_r_site_user", the character length must be smaller than or equal to 256.'
      end

      @b_r_site_user = b_r_site_user
    end

    # Custom attribute writer method with validation
    # @param [Object] base_load_pass Value to be assigned
    def base_load_pass=(base_load_pass)
      if !base_load_pass.nil? && base_load_pass.to_s.length > 256
        fail ArgumentError, 'invalid value for "base_load_pass", the character length must be smaller than or equal to 256.'
      end

      @base_load_pass = base_load_pass
    end

    # Custom attribute writer method with validation
    # @param [Object] base_load_service_date_flag Value to be assigned
    def base_load_service_date_flag=(base_load_service_date_flag)
      if base_load_service_date_flag.nil?
        fail ArgumentError, 'base_load_service_date_flag cannot be nil'
      end

      @base_load_service_date_flag = base_load_service_date_flag
    end

    # Custom attribute writer method with validation
    # @param [Object] base_load_url Value to be assigned
    def base_load_url=(base_load_url)
      if !base_load_url.nil? && base_load_url.to_s.length > 8000
        fail ArgumentError, 'invalid value for "base_load_url", the character length must be smaller than or equal to 8000.'
      end

      @base_load_url = base_load_url
    end

    # Custom attribute writer method with validation
    # @param [Object] base_load_user Value to be assigned
    def base_load_user=(base_load_user)
      if !base_load_user.nil? && base_load_user.to_s.length > 256
        fail ArgumentError, 'invalid value for "base_load_user", the character length must be smaller than or equal to 256.'
      end

      @base_load_user = base_load_user
    end

    # Custom attribute writer method with validation
    # @param [Object] beneficiary_age_ex_code Value to be assigned
    def beneficiary_age_ex_code=(beneficiary_age_ex_code)
      if !beneficiary_age_ex_code.nil? && beneficiary_age_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "beneficiary_age_ex_code", the character length must be smaller than or equal to 8.'
      end

      @beneficiary_age_ex_code = beneficiary_age_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] benefit_cascade_ex_code Value to be assigned
    def benefit_cascade_ex_code=(benefit_cascade_ex_code)
      if !benefit_cascade_ex_code.nil? && benefit_cascade_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "benefit_cascade_ex_code", the character length must be smaller than or equal to 8.'
      end

      @benefit_cascade_ex_code = benefit_cascade_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] bridged_tooth_ex_code Value to be assigned
    def bridged_tooth_ex_code=(bridged_tooth_ex_code)
      if !bridged_tooth_ex_code.nil? && bridged_tooth_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "bridged_tooth_ex_code", the character length must be smaller than or equal to 8.'
      end

      @bridged_tooth_ex_code = bridged_tooth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] ca_s_segment_ben_match Value to be assigned
    def ca_s_segment_ben_match=(ca_s_segment_ben_match)
      if ca_s_segment_ben_match.nil?
        fail ArgumentError, 'ca_s_segment_ben_match cannot be nil'
      end

      @ca_s_segment_ben_match = ca_s_segment_ben_match
    end

    # Custom attribute writer method with validation
    # @param [Object] cli_a_certificate_ex_code Value to be assigned
    def cli_a_certificate_ex_code=(cli_a_certificate_ex_code)
      if !cli_a_certificate_ex_code.nil? && cli_a_certificate_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "cli_a_certificate_ex_code", the character length must be smaller than or equal to 6.'
      end

      @cli_a_certificate_ex_code = cli_a_certificate_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] cm_o_installed Value to be assigned
    def cm_o_installed=(cm_o_installed)
      if !cm_o_installed.nil? && cm_o_installed.to_s.length > 1
        fail ArgumentError, 'invalid value for "cm_o_installed", the character length must be smaller than or equal to 1.'
      end

      @cm_o_installed = cm_o_installed
    end

    # Custom attribute writer method with validation
    # @param [Object] cap_by_service_line Value to be assigned
    def cap_by_service_line=(cap_by_service_line)
      if cap_by_service_line.nil?
        fail ArgumentError, 'cap_by_service_line cannot be nil'
      end

      @cap_by_service_line = cap_by_service_line
    end

    # Custom attribute writer method with validation
    # @param [Object] cap_disenroll_adj_reason Value to be assigned
    def cap_disenroll_adj_reason=(cap_disenroll_adj_reason)
      if !cap_disenroll_adj_reason.nil? && cap_disenroll_adj_reason.to_s.length > 8
        fail ArgumentError, 'invalid value for "cap_disenroll_adj_reason", the character length must be smaller than or equal to 8.'
      end

      @cap_disenroll_adj_reason = cap_disenroll_adj_reason
    end

    # Custom attribute writer method with validation
    # @param [Object] cap_enroll_adj_reason Value to be assigned
    def cap_enroll_adj_reason=(cap_enroll_adj_reason)
      if !cap_enroll_adj_reason.nil? && cap_enroll_adj_reason.to_s.length > 8
        fail ArgumentError, 'invalid value for "cap_enroll_adj_reason", the character length must be smaller than or equal to 8.'
      end

      @cap_enroll_adj_reason = cap_enroll_adj_reason
    end

    # Custom attribute writer method with validation
    # @param [Object] capitated_service_ex_code Value to be assigned
    def capitated_service_ex_code=(capitated_service_ex_code)
      if !capitated_service_ex_code.nil? && capitated_service_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "capitated_service_ex_code", the character length must be smaller than or equal to 8.'
      end

      @capitated_service_ex_code = capitated_service_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] case_default_report Value to be assigned
    def case_default_report=(case_default_report)
      if case_default_report.nil?
        fail ArgumentError, 'case_default_report cannot be nil'
      end

      if case_default_report.to_s.length > 256
        fail ArgumentError, 'invalid value for "case_default_report", the character length must be smaller than or equal to 256.'
      end

      if case_default_report.to_s.length < 1
        fail ArgumentError, 'invalid value for "case_default_report", the character length must be great than or equal to 1.'
      end

      @case_default_report = case_default_report
    end

    # Custom attribute writer method with validation
    # @param [Object] check_payee_address_flag Value to be assigned
    def check_payee_address_flag=(check_payee_address_flag)
      if check_payee_address_flag.nil?
        fail ArgumentError, 'check_payee_address_flag cannot be nil'
      end

      @check_payee_address_flag = check_payee_address_flag
    end

    # Custom attribute writer method with validation
    # @param [Object] check_stock_location Value to be assigned
    def check_stock_location=(check_stock_location)
      if !check_stock_location.nil? && check_stock_location.to_s.length > 128
        fail ArgumentError, 'invalid value for "check_stock_location", the character length must be smaller than or equal to 128.'
      end

      @check_stock_location = check_stock_location
    end

    # Custom attribute writer method with validation
    # @param [Object] city Value to be assigned
    def city=(city)
      if !city.nil? && city.to_s.length > 20
        fail ArgumentError, 'invalid value for "city", the character length must be smaller than or equal to 20.'
      end

      @city = city
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_upload_file_location Value to be assigned
    def claim_upload_file_location=(claim_upload_file_location)
      if !claim_upload_file_location.nil? && claim_upload_file_location.to_s.length > 128
        fail ArgumentError, 'invalid value for "claim_upload_file_location", the character length must be smaller than or equal to 128.'
      end

      @claim_upload_file_location = claim_upload_file_location
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_upload_schedule Value to be assigned
    def claim_upload_schedule=(claim_upload_schedule)
      if !claim_upload_schedule.nil? && claim_upload_schedule.to_s.length > 1
        fail ArgumentError, 'invalid value for "claim_upload_schedule", the character length must be smaller than or equal to 1.'
      end

      @claim_upload_schedule = claim_upload_schedule
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_age_ex_code Value to be assigned
    def claim_age_ex_code=(claim_age_ex_code)
      if !claim_age_ex_code.nil? && claim_age_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_age_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_age_ex_code = claim_age_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_allowed_billed_ex_code Value to be assigned
    def claim_allowed_billed_ex_code=(claim_allowed_billed_ex_code)
      if !claim_allowed_billed_ex_code.nil? && claim_allowed_billed_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_allowed_billed_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_allowed_billed_ex_code = claim_allowed_billed_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_amt_ex_code Value to be assigned
    def claim_amt_ex_code=(claim_amt_ex_code)
      if !claim_amt_ex_code.nil? && claim_amt_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_amt_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_amt_ex_code = claim_amt_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_denied_ex_code Value to be assigned
    def claim_auth_denied_ex_code=(claim_auth_denied_ex_code)
      if !claim_auth_denied_ex_code.nil? && claim_auth_denied_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_denied_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_denied_ex_code = claim_auth_denied_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_details_err_ex Value to be assigned
    def claim_auth_details_err_ex=(claim_auth_details_err_ex)
      if !claim_auth_details_err_ex.nil? && claim_auth_details_err_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_details_err_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_details_err_ex = claim_auth_details_err_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_diff_mem_ex Value to be assigned
    def claim_auth_diff_mem_ex=(claim_auth_diff_mem_ex)
      if !claim_auth_diff_mem_ex.nil? && claim_auth_diff_mem_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_diff_mem_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_diff_mem_ex = claim_auth_diff_mem_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_diff_prov_ex Value to be assigned
    def claim_auth_diff_prov_ex=(claim_auth_diff_prov_ex)
      if !claim_auth_diff_prov_ex.nil? && claim_auth_diff_prov_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_diff_prov_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_diff_prov_ex = claim_auth_diff_prov_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_exceeded_ex_code Value to be assigned
    def claim_auth_exceeded_ex_code=(claim_auth_exceeded_ex_code)
      if !claim_auth_exceeded_ex_code.nil? && claim_auth_exceeded_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_exceeded_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_exceeded_ex_code = claim_auth_exceeded_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_invalid_date_ex Value to be assigned
    def claim_auth_invalid_date_ex=(claim_auth_invalid_date_ex)
      if !claim_auth_invalid_date_ex.nil? && claim_auth_invalid_date_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_invalid_date_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_invalid_date_ex = claim_auth_invalid_date_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_not_approved_ex Value to be assigned
    def claim_auth_not_approved_ex=(claim_auth_not_approved_ex)
      if !claim_auth_not_approved_ex.nil? && claim_auth_not_approved_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_not_approved_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_not_approved_ex = claim_auth_not_approved_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_proc_exceeded_ex_code Value to be assigned
    def claim_auth_proc_exceeded_ex_code=(claim_auth_proc_exceeded_ex_code)
      if !claim_auth_proc_exceeded_ex_code.nil? && claim_auth_proc_exceeded_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_auth_proc_exceeded_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_auth_proc_exceeded_ex_code = claim_auth_proc_exceeded_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_auth_reqd_ex_code Value to be assigned
    def claim_auth_reqd_ex_code=(claim_auth_reqd_ex_code)
      if !claim_auth_reqd_ex_code.nil? && claim_auth_reqd_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_auth_reqd_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_auth_reqd_ex_code = claim_auth_reqd_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_ben_not_found_ex_code Value to be assigned
    def claim_ben_not_found_ex_code=(claim_ben_not_found_ex_code)
      if !claim_ben_not_found_ex_code.nil? && claim_ben_not_found_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_ben_not_found_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_ben_not_found_ex_code = claim_ben_not_found_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_cov_in_net_only_ex_code Value to be assigned
    def claim_cov_in_net_only_ex_code=(claim_cov_in_net_only_ex_code)
      if !claim_cov_in_net_only_ex_code.nil? && claim_cov_in_net_only_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_cov_in_net_only_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_cov_in_net_only_ex_code = claim_cov_in_net_only_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_dead_ex_code Value to be assigned
    def claim_dead_ex_code=(claim_dead_ex_code)
      if !claim_dead_ex_code.nil? && claim_dead_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_dead_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_dead_ex_code = claim_dead_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_ded_credit_oon_used_ex_code Value to be assigned
    def claim_ded_credit_oon_used_ex_code=(claim_ded_credit_oon_used_ex_code)
      if !claim_ded_credit_oon_used_ex_code.nil? && claim_ded_credit_oon_used_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_ded_credit_oon_used_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_ded_credit_oon_used_ex_code = claim_ded_credit_oon_used_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_ded_credit_ppo_used_ex_code Value to be assigned
    def claim_ded_credit_ppo_used_ex_code=(claim_ded_credit_ppo_used_ex_code)
      if !claim_ded_credit_ppo_used_ex_code.nil? && claim_ded_credit_ppo_used_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_ded_credit_ppo_used_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_ded_credit_ppo_used_ex_code = claim_ded_credit_ppo_used_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_denied_ex_code Value to be assigned
    def claim_denied_ex_code=(claim_denied_ex_code)
      if !claim_denied_ex_code.nil? && claim_denied_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_denied_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_denied_ex_code = claim_denied_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_diagnosis_age_ex_code Value to be assigned
    def claim_diagnosis_age_ex_code=(claim_diagnosis_age_ex_code)
      if !claim_diagnosis_age_ex_code.nil? && claim_diagnosis_age_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_diagnosis_age_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_diagnosis_age_ex_code = claim_diagnosis_age_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_diagnosis_gender_ex_code Value to be assigned
    def claim_diagnosis_gender_ex_code=(claim_diagnosis_gender_ex_code)
      if !claim_diagnosis_gender_ex_code.nil? && claim_diagnosis_gender_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_diagnosis_gender_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_diagnosis_gender_ex_code = claim_diagnosis_gender_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_dup_error_ex_code Value to be assigned
    def claim_dup_error_ex_code=(claim_dup_error_ex_code)
      if !claim_dup_error_ex_code.nil? && claim_dup_error_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_dup_error_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_dup_error_ex_code = claim_dup_error_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_error_ex_code Value to be assigned
    def claim_error_ex_code=(claim_error_ex_code)
      if !claim_error_ex_code.nil? && claim_error_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_error_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_error_ex_code = claim_error_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_daily_co_pay_max_ex_code Value to be assigned
    def claim_exceed_daily_co_pay_max_ex_code=(claim_exceed_daily_co_pay_max_ex_code)
      if !claim_exceed_daily_co_pay_max_ex_code.nil? && claim_exceed_daily_co_pay_max_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_exceed_daily_co_pay_max_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_exceed_daily_co_pay_max_ex_code = claim_exceed_daily_co_pay_max_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_injury_ex_code Value to be assigned
    def claim_exceed_injury_ex_code=(claim_exceed_injury_ex_code)
      if !claim_exceed_injury_ex_code.nil? && claim_exceed_injury_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_exceed_injury_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_exceed_injury_ex_code = claim_exceed_injury_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_lifetime_ex_code Value to be assigned
    def claim_exceed_lifetime_ex_code=(claim_exceed_lifetime_ex_code)
      if !claim_exceed_lifetime_ex_code.nil? && claim_exceed_lifetime_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_exceed_lifetime_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_exceed_lifetime_ex_code = claim_exceed_lifetime_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_lifetime_oon_ex_code Value to be assigned
    def claim_exceed_lifetime_oon_ex_code=(claim_exceed_lifetime_oon_ex_code)
      if !claim_exceed_lifetime_oon_ex_code.nil? && claim_exceed_lifetime_oon_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_exceed_lifetime_oon_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_exceed_lifetime_oon_ex_code = claim_exceed_lifetime_oon_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_lifetime_ppo_ex_code Value to be assigned
    def claim_exceed_lifetime_ppo_ex_code=(claim_exceed_lifetime_ppo_ex_code)
      if !claim_exceed_lifetime_ppo_ex_code.nil? && claim_exceed_lifetime_ppo_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_exceed_lifetime_ppo_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_exceed_lifetime_ppo_ex_code = claim_exceed_lifetime_ppo_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_maximum_ex_code Value to be assigned
    def claim_exceed_maximum_ex_code=(claim_exceed_maximum_ex_code)
      if !claim_exceed_maximum_ex_code.nil? && claim_exceed_maximum_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_exceed_maximum_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_exceed_maximum_ex_code = claim_exceed_maximum_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_exceed_per_diem_ex_code Value to be assigned
    def claim_exceed_per_diem_ex_code=(claim_exceed_per_diem_ex_code)
      if !claim_exceed_per_diem_ex_code.nil? && claim_exceed_per_diem_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_exceed_per_diem_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_exceed_per_diem_ex_code = claim_exceed_per_diem_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_fee_sched_error_ex Value to be assigned
    def claim_fee_sched_error_ex=(claim_fee_sched_error_ex)
      if !claim_fee_sched_error_ex.nil? && claim_fee_sched_error_ex.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_fee_sched_error_ex", the character length must be smaller than or equal to 6.'
      end

      @claim_fee_sched_error_ex = claim_fee_sched_error_ex
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_lag_error_ex_code Value to be assigned
    def claim_lag_error_ex_code=(claim_lag_error_ex_code)
      if !claim_lag_error_ex_code.nil? && claim_lag_error_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_lag_error_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_lag_error_ex_code = claim_lag_error_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_late_ex_code Value to be assigned
    def claim_late_ex_code=(claim_late_ex_code)
      if !claim_late_ex_code.nil? && claim_late_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_late_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_late_ex_code = claim_late_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_life_benefit_met_ex_code Value to be assigned
    def claim_life_benefit_met_ex_code=(claim_life_benefit_met_ex_code)
      if !claim_life_benefit_met_ex_code.nil? && claim_life_benefit_met_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_life_benefit_met_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_life_benefit_met_ex_code = claim_life_benefit_met_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_life_plan_met_ex_code Value to be assigned
    def claim_life_plan_met_ex_code=(claim_life_plan_met_ex_code)
      if !claim_life_plan_met_ex_code.nil? && claim_life_plan_met_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_life_plan_met_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_life_plan_met_ex_code = claim_life_plan_met_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_no_prov_fee_sched Value to be assigned
    def claim_no_prov_fee_sched=(claim_no_prov_fee_sched)
      if !claim_no_prov_fee_sched.nil? && claim_no_prov_fee_sched.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_no_prov_fee_sched", the character length must be smaller than or equal to 6.'
      end

      @claim_no_prov_fee_sched = claim_no_prov_fee_sched
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_no_rate_fee_ex_code Value to be assigned
    def claim_no_rate_fee_ex_code=(claim_no_rate_fee_ex_code)
      if !claim_no_rate_fee_ex_code.nil? && claim_no_rate_fee_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_no_rate_fee_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_no_rate_fee_ex_code = claim_no_rate_fee_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_adult_dependent Value to be assigned
    def claim_not_adult_dependent=(claim_not_adult_dependent)
      if !claim_not_adult_dependent.nil? && claim_not_adult_dependent.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_adult_dependent", the character length must be smaller than or equal to 6.'
      end

      @claim_not_adult_dependent = claim_not_adult_dependent
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_at_place_ex_code Value to be assigned
    def claim_not_at_place_ex_code=(claim_not_at_place_ex_code)
      if !claim_not_at_place_ex_code.nil? && claim_not_at_place_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_at_place_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_not_at_place_ex_code = claim_not_at_place_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_by_prov_ex_code Value to be assigned
    def claim_not_by_prov_ex_code=(claim_not_by_prov_ex_code)
      if !claim_not_by_prov_ex_code.nil? && claim_not_by_prov_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_by_prov_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_not_by_prov_ex_code = claim_not_by_prov_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_cov_ex_code Value to be assigned
    def claim_not_cov_ex_code=(claim_not_cov_ex_code)
      if !claim_not_cov_ex_code.nil? && claim_not_cov_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_cov_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_not_cov_ex_code = claim_not_cov_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_enrolled_ex_code Value to be assigned
    def claim_not_enrolled_ex_code=(claim_not_enrolled_ex_code)
      if !claim_not_enrolled_ex_code.nil? && claim_not_enrolled_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_enrolled_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_not_enrolled_ex_code = claim_not_enrolled_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_enrolled_ex_code_null_use_pre_post Value to be assigned
    def claim_not_enrolled_ex_code_null_use_pre_post=(claim_not_enrolled_ex_code_null_use_pre_post)
      if claim_not_enrolled_ex_code_null_use_pre_post.nil?
        fail ArgumentError, 'claim_not_enrolled_ex_code_null_use_pre_post cannot be nil'
      end

      @claim_not_enrolled_ex_code_null_use_pre_post = claim_not_enrolled_ex_code_null_use_pre_post
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_enrolled_post_ex_code Value to be assigned
    def claim_not_enrolled_post_ex_code=(claim_not_enrolled_post_ex_code)
      if !claim_not_enrolled_post_ex_code.nil? && claim_not_enrolled_post_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_not_enrolled_post_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_not_enrolled_post_ex_code = claim_not_enrolled_post_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_enrolled_pre_ex_code Value to be assigned
    def claim_not_enrolled_pre_ex_code=(claim_not_enrolled_pre_ex_code)
      if !claim_not_enrolled_pre_ex_code.nil? && claim_not_enrolled_pre_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_not_enrolled_pre_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_not_enrolled_pre_ex_code = claim_not_enrolled_pre_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_not_student_ex_code Value to be assigned
    def claim_not_student_ex_code=(claim_not_student_ex_code)
      if !claim_not_student_ex_code.nil? && claim_not_student_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_not_student_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_not_student_ex_code = claim_not_student_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_other_coverage_ex_code Value to be assigned
    def claim_other_coverage_ex_code=(claim_other_coverage_ex_code)
      if !claim_other_coverage_ex_code.nil? && claim_other_coverage_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_other_coverage_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_other_coverage_ex_code = claim_other_coverage_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_over_max_ex_code Value to be assigned
    def claim_over_max_ex_code=(claim_over_max_ex_code)
      if !claim_over_max_ex_code.nil? && claim_over_max_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_over_max_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_over_max_ex_code = claim_over_max_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_over_max_oon_ex_code Value to be assigned
    def claim_over_max_oon_ex_code=(claim_over_max_oon_ex_code)
      if !claim_over_max_oon_ex_code.nil? && claim_over_max_oon_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_over_max_oon_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_over_max_oon_ex_code = claim_over_max_oon_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_over_max_ppo_ex_code Value to be assigned
    def claim_over_max_ppo_ex_code=(claim_over_max_ppo_ex_code)
      if !claim_over_max_ppo_ex_code.nil? && claim_over_max_ppo_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_over_max_ppo_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_over_max_ppo_ex_code = claim_over_max_ppo_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_procedure_age_ex_code Value to be assigned
    def claim_procedure_age_ex_code=(claim_procedure_age_ex_code)
      if !claim_procedure_age_ex_code.nil? && claim_procedure_age_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_procedure_age_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_procedure_age_ex_code = claim_procedure_age_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_procedure_gender_ex_code Value to be assigned
    def claim_procedure_gender_ex_code=(claim_procedure_gender_ex_code)
      if !claim_procedure_gender_ex_code.nil? && claim_procedure_gender_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_procedure_gender_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_procedure_gender_ex_code = claim_procedure_gender_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_service_outside_enrollment_ex_code Value to be assigned
    def claim_service_outside_enrollment_ex_code=(claim_service_outside_enrollment_ex_code)
      if !claim_service_outside_enrollment_ex_code.nil? && claim_service_outside_enrollment_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "claim_service_outside_enrollment_ex_code", the character length must be smaller than or equal to 6.'
      end

      @claim_service_outside_enrollment_ex_code = claim_service_outside_enrollment_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] claim_splits_plan_year_ex_code Value to be assigned
    def claim_splits_plan_year_ex_code=(claim_splits_plan_year_ex_code)
      if !claim_splits_plan_year_ex_code.nil? && claim_splits_plan_year_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "claim_splits_plan_year_ex_code", the character length must be smaller than or equal to 8.'
      end

      @claim_splits_plan_year_ex_code = claim_splits_plan_year_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] clear_auth_penalty_ex_code Value to be assigned
    def clear_auth_penalty_ex_code=(clear_auth_penalty_ex_code)
      if clear_auth_penalty_ex_code.nil?
        fail ArgumentError, 'clear_auth_penalty_ex_code cannot be nil'
      end

      @clear_auth_penalty_ex_code = clear_auth_penalty_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] client_id Value to be assigned
    def client_id=(client_id)
      if !client_id.nil? && client_id.to_s.length > 6
        fail ArgumentError, 'invalid value for "client_id", the character length must be smaller than or equal to 6.'
      end

      @client_id = client_id
    end

    # Custom attribute writer method with validation
    # @param [Object] client_name Value to be assigned
    def client_name=(client_name)
      if !client_name.nil? && client_name.to_s.length > 90
        fail ArgumentError, 'invalid value for "client_name", the character length must be smaller than or equal to 90.'
      end

      @client_name = client_name
    end

    # Custom attribute writer method with validation
    # @param [Object] co_ins_max_ex_code Value to be assigned
    def co_ins_max_ex_code=(co_ins_max_ex_code)
      if !co_ins_max_ex_code.nil? && co_ins_max_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "co_ins_max_ex_code", the character length must be smaller than or equal to 8.'
      end

      @co_ins_max_ex_code = co_ins_max_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] co_ins_max_ex_code_member Value to be assigned
    def co_ins_max_ex_code_member=(co_ins_max_ex_code_member)
      if !co_ins_max_ex_code_member.nil? && co_ins_max_ex_code_member.to_s.length > 8
        fail ArgumentError, 'invalid value for "co_ins_max_ex_code_member", the character length must be smaller than or equal to 8.'
      end

      @co_ins_max_ex_code_member = co_ins_max_ex_code_member
    end

    # Custom attribute writer method with validation
    # @param [Object] co_pay_by_billed Value to be assigned
    def co_pay_by_billed=(co_pay_by_billed)
      if co_pay_by_billed.nil?
        fail ArgumentError, 'co_pay_by_billed cannot be nil'
      end

      @co_pay_by_billed = co_pay_by_billed
    end

    # Custom attribute writer method with validation
    # @param [Object] cogito_app_client_id Value to be assigned
    def cogito_app_client_id=(cogito_app_client_id)
      if !cogito_app_client_id.nil? && cogito_app_client_id.to_s.length > 128
        fail ArgumentError, 'invalid value for "cogito_app_client_id", the character length must be smaller than or equal to 128.'
      end

      @cogito_app_client_id = cogito_app_client_id
    end

    # Custom attribute writer method with validation
    # @param [Object] cogito_app_client_secret Value to be assigned
    def cogito_app_client_secret=(cogito_app_client_secret)
      if !cogito_app_client_secret.nil? && cogito_app_client_secret.to_s.length > 256
        fail ArgumentError, 'invalid value for "cogito_app_client_secret", the character length must be smaller than or equal to 256.'
      end

      @cogito_app_client_secret = cogito_app_client_secret
    end

    # Custom attribute writer method with validation
    # @param [Object] cogito_user_pool_id Value to be assigned
    def cogito_user_pool_id=(cogito_user_pool_id)
      if !cogito_user_pool_id.nil? && cogito_user_pool_id.to_s.length > 64
        fail ArgumentError, 'invalid value for "cogito_user_pool_id", the character length must be smaller than or equal to 64.'
      end

      @cogito_user_pool_id = cogito_user_pool_id
    end

    # Custom attribute writer method with validation
    # @param [Object] combined_notes_report_fg Value to be assigned
    def combined_notes_report_fg=(combined_notes_report_fg)
      if combined_notes_report_fg.nil?
        fail ArgumentError, 'combined_notes_report_fg cannot be nil'
      end

      @combined_notes_report_fg = combined_notes_report_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] comm_disenroll_adj_reason Value to be assigned
    def comm_disenroll_adj_reason=(comm_disenroll_adj_reason)
      if !comm_disenroll_adj_reason.nil? && comm_disenroll_adj_reason.to_s.length > 8
        fail ArgumentError, 'invalid value for "comm_disenroll_adj_reason", the character length must be smaller than or equal to 8.'
      end

      @comm_disenroll_adj_reason = comm_disenroll_adj_reason
    end

    # Custom attribute writer method with validation
    # @param [Object] comm_enroll_adj_reason Value to be assigned
    def comm_enroll_adj_reason=(comm_enroll_adj_reason)
      if !comm_enroll_adj_reason.nil? && comm_enroll_adj_reason.to_s.length > 8
        fail ArgumentError, 'invalid value for "comm_enroll_adj_reason", the character length must be smaller than or equal to 8.'
      end

      @comm_enroll_adj_reason = comm_enroll_adj_reason
    end

    # Custom attribute writer method with validation
    # @param [Object] company_short Value to be assigned
    def company_short=(company_short)
      if !company_short.nil? && company_short.to_s.length > 4
        fail ArgumentError, 'invalid value for "company_short", the character length must be smaller than or equal to 4.'
      end

      @company_short = company_short
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_fee_selector Value to be assigned
    def context4_fee_selector=(context4_fee_selector)
      if !context4_fee_selector.nil? && context4_fee_selector.to_s.length > 8
        fail ArgumentError, 'invalid value for "context4_fee_selector", the character length must be smaller than or equal to 8.'
      end

      @context4_fee_selector = context4_fee_selector
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_fee_selector_oon Value to be assigned
    def context4_fee_selector_oon=(context4_fee_selector_oon)
      if !context4_fee_selector_oon.nil? && context4_fee_selector_oon.to_s.length > 8
        fail ArgumentError, 'invalid value for "context4_fee_selector_oon", the character length must be smaller than or equal to 8.'
      end

      @context4_fee_selector_oon = context4_fee_selector_oon
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_password Value to be assigned
    def context4_password=(context4_password)
      if !context4_password.nil? && context4_password.to_s.length > 128
        fail ArgumentError, 'invalid value for "context4_password", the character length must be smaller than or equal to 128.'
      end

      @context4_password = context4_password
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_payor_type Value to be assigned
    def context4_payor_type=(context4_payor_type)
      if !context4_payor_type.nil? && context4_payor_type.to_s.length > 8
        fail ArgumentError, 'invalid value for "context4_payor_type", the character length must be smaller than or equal to 8.'
      end

      @context4_payor_type = context4_payor_type
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_plan_price_not_greater_billed_fg Value to be assigned
    def context4_plan_price_not_greater_billed_fg=(context4_plan_price_not_greater_billed_fg)
      if context4_plan_price_not_greater_billed_fg.nil?
        fail ArgumentError, 'context4_plan_price_not_greater_billed_fg cannot be nil'
      end

      @context4_plan_price_not_greater_billed_fg = context4_plan_price_not_greater_billed_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_send_billing_address_fg Value to be assigned
    def context4_send_billing_address_fg=(context4_send_billing_address_fg)
      if context4_send_billing_address_fg.nil?
        fail ArgumentError, 'context4_send_billing_address_fg cannot be nil'
      end

      @context4_send_billing_address_fg = context4_send_billing_address_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_user_id Value to be assigned
    def context4_user_id=(context4_user_id)
      if !context4_user_id.nil? && context4_user_id.to_s.length > 128
        fail ArgumentError, 'invalid value for "context4_user_id", the character length must be smaller than or equal to 128.'
      end

      @context4_user_id = context4_user_id
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_web_uri Value to be assigned
    def context4_web_uri=(context4_web_uri)
      if !context4_web_uri.nil? && context4_web_uri.to_s.length > 256
        fail ArgumentError, 'invalid value for "context4_web_uri", the character length must be smaller than or equal to 256.'
      end

      @context4_web_uri = context4_web_uri
    end

    # Custom attribute writer method with validation
    # @param [Object] context4_web_uri_delete Value to be assigned
    def context4_web_uri_delete=(context4_web_uri_delete)
      if !context4_web_uri_delete.nil? && context4_web_uri_delete.to_s.length > 256
        fail ArgumentError, 'invalid value for "context4_web_uri_delete", the character length must be smaller than or equal to 256.'
      end

      @context4_web_uri_delete = context4_web_uri_delete
    end

    # Custom attribute writer method with validation
    # @param [Object] copay_ex_code Value to be assigned
    def copay_ex_code=(copay_ex_code)
      if !copay_ex_code.nil? && copay_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "copay_ex_code", the character length must be smaller than or equal to 6.'
      end

      @copay_ex_code = copay_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] country_id Value to be assigned
    def country_id=(country_id)
      if !country_id.nil? && country_id.to_s.length > 8
        fail ArgumentError, 'invalid value for "country_id", the character length must be smaller than or equal to 8.'
      end

      @country_id = country_id
    end

    # Custom attribute writer method with validation
    # @param [Object] credential_by_payee Value to be assigned
    def credential_by_payee=(credential_by_payee)
      if credential_by_payee.nil?
        fail ArgumentError, 'credential_by_payee cannot be nil'
      end

      @credential_by_payee = credential_by_payee
    end

    # Custom attribute writer method with validation
    # @param [Object] credentialing Value to be assigned
    def credentialing=(credentialing)
      if !credentialing.nil? && credentialing.to_s.length > 1
        fail ArgumentError, 'invalid value for "credentialing", the character length must be smaller than or equal to 1.'
      end

      @credentialing = credentialing
    end

    # Custom attribute writer method with validation
    # @param [Object] crowned_tooth_ex_code Value to be assigned
    def crowned_tooth_ex_code=(crowned_tooth_ex_code)
      if !crowned_tooth_ex_code.nil? && crowned_tooth_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "crowned_tooth_ex_code", the character length must be smaller than or equal to 8.'
      end

      @crowned_tooth_ex_code = crowned_tooth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] currency_format Value to be assigned
    def currency_format=(currency_format)
      if !currency_format.nil? && currency_format.to_s.length > 20
        fail ArgumentError, 'invalid value for "currency_format", the character length must be smaller than or equal to 20.'
      end

      @currency_format = currency_format
    end

    # Custom attribute writer method with validation
    # @param [Object] dr_g_schedule Value to be assigned
    def dr_g_schedule=(dr_g_schedule)
      if !dr_g_schedule.nil? && dr_g_schedule.to_s.length > 16
        fail ArgumentError, 'invalid value for "dr_g_schedule", the character length must be smaller than or equal to 16.'
      end

      @dr_g_schedule = dr_g_schedule
    end

    # Custom attribute writer method with validation
    # @param [Object] database_version Value to be assigned
    def database_version=(database_version)
      if !database_version.nil? && database_version.to_s.length > 32
        fail ArgumentError, 'invalid value for "database_version", the character length must be smaller than or equal to 32.'
      end

      @database_version = database_version
    end

    # Custom attribute writer method with validation
    # @param [Object] date_format Value to be assigned
    def date_format=(date_format)
      if !date_format.nil? && date_format.to_s.length > 20
        fail ArgumentError, 'invalid value for "date_format", the character length must be smaller than or equal to 20.'
      end

      @date_format = date_format
    end

    # Custom attribute writer method with validation
    # @param [Object] deductible_ex_code Value to be assigned
    def deductible_ex_code=(deductible_ex_code)
      if !deductible_ex_code.nil? && deductible_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "deductible_ex_code", the character length must be smaller than or equal to 6.'
      end

      @deductible_ex_code = deductible_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] deductible_max_ex_code Value to be assigned
    def deductible_max_ex_code=(deductible_max_ex_code)
      if !deductible_max_ex_code.nil? && deductible_max_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "deductible_max_ex_code", the character length must be smaller than or equal to 8.'
      end

      @deductible_max_ex_code = deductible_max_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] deductible_max_ex_code_member Value to be assigned
    def deductible_max_ex_code_member=(deductible_max_ex_code_member)
      if !deductible_max_ex_code_member.nil? && deductible_max_ex_code_member.to_s.length > 8
        fail ArgumentError, 'invalid value for "deductible_max_ex_code_member", the character length must be smaller than or equal to 8.'
      end

      @deductible_max_ex_code_member = deductible_max_ex_code_member
    end

    # Custom attribute writer method with validation
    # @param [Object] default_1099_flag Value to be assigned
    def default_1099_flag=(default_1099_flag)
      if !default_1099_flag.nil? && default_1099_flag.to_s.length > 1
        fail ArgumentError, 'invalid value for "default_1099_flag", the character length must be smaller than or equal to 1.'
      end

      @default_1099_flag = default_1099_flag
    end

    # Custom attribute writer method with validation
    # @param [Object] default_auth_code Value to be assigned
    def default_auth_code=(default_auth_code)
      if !default_auth_code.nil? && default_auth_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "default_auth_code", the character length must be smaller than or equal to 8.'
      end

      @default_auth_code = default_auth_code
    end

    # Custom attribute writer method with validation
    # @param [Object] default_currency_id Value to be assigned
    def default_currency_id=(default_currency_id)
      if !default_currency_id.nil? && default_currency_id.to_s.length > 16
        fail ArgumentError, 'invalid value for "default_currency_id", the character length must be smaller than or equal to 16.'
      end

      @default_currency_id = default_currency_id
    end

    # Custom attribute writer method with validation
    # @param [Object] default_id_card_request_type Value to be assigned
    def default_id_card_request_type=(default_id_card_request_type)
      if !default_id_card_request_type.nil? && default_id_card_request_type.to_s.length > 16
        fail ArgumentError, 'invalid value for "default_id_card_request_type", the character length must be smaller than or equal to 16.'
      end

      @default_id_card_request_type = default_id_card_request_type
    end

    # Custom attribute writer method with validation
    # @param [Object] default_login_sound Value to be assigned
    def default_login_sound=(default_login_sound)
      if !default_login_sound.nil? && default_login_sound.to_s.length > 255
        fail ArgumentError, 'invalid value for "default_login_sound", the character length must be smaller than or equal to 255.'
      end

      @default_login_sound = default_login_sound
    end

    # Custom attribute writer method with validation
    # @param [Object] default_payor_id Value to be assigned
    def default_payor_id=(default_payor_id)
      if !default_payor_id.nil? && default_payor_id.to_s.length > 10
        fail ArgumentError, 'invalid value for "default_payor_id", the character length must be smaller than or equal to 10.'
      end

      @default_payor_id = default_payor_id
    end

    # Custom attribute writer method with validation
    # @param [Object] dental_atp_paid_date_type Value to be assigned
    def dental_atp_paid_date_type=(dental_atp_paid_date_type)
      if !dental_atp_paid_date_type.nil? && dental_atp_paid_date_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "dental_atp_paid_date_type", the character length must be smaller than or equal to 32.'
      end

      @dental_atp_paid_date_type = dental_atp_paid_date_type
    end

    # Custom attribute writer method with validation
    # @param [Object] diagnostic_code_type_default Value to be assigned
    def diagnostic_code_type_default=(diagnostic_code_type_default)
      if diagnostic_code_type_default.nil?
        fail ArgumentError, 'diagnostic_code_type_default cannot be nil'
      end

      if diagnostic_code_type_default.to_s.length > 16
        fail ArgumentError, 'invalid value for "diagnostic_code_type_default", the character length must be smaller than or equal to 16.'
      end

      if diagnostic_code_type_default.to_s.length < 1
        fail ArgumentError, 'invalid value for "diagnostic_code_type_default", the character length must be great than or equal to 1.'
      end

      @diagnostic_code_type_default = diagnostic_code_type_default
    end

    # Custom attribute writer method with validation
    # @param [Object] disallow_spec_char_in_plan_id Value to be assigned
    def disallow_spec_char_in_plan_id=(disallow_spec_char_in_plan_id)
      if disallow_spec_char_in_plan_id.nil?
        fail ArgumentError, 'disallow_spec_char_in_plan_id cannot be nil'
      end

      @disallow_spec_char_in_plan_id = disallow_spec_char_in_plan_id
    end

    # Custom attribute writer method with validation
    # @param [Object] disconnect_call_notes_from_claim_provider Value to be assigned
    def disconnect_call_notes_from_claim_provider=(disconnect_call_notes_from_claim_provider)
      if disconnect_call_notes_from_claim_provider.nil?
        fail ArgumentError, 'disconnect_call_notes_from_claim_provider cannot be nil'
      end

      @disconnect_call_notes_from_claim_provider = disconnect_call_notes_from_claim_provider
    end

    # Custom attribute writer method with validation
    # @param [Object] disenroll_auth_code Value to be assigned
    def disenroll_auth_code=(disenroll_auth_code)
      if !disenroll_auth_code.nil? && disenroll_auth_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "disenroll_auth_code", the character length must be smaller than or equal to 8.'
      end

      @disenroll_auth_code = disenroll_auth_code
    end

    # Custom attribute writer method with validation
    # @param [Object] display_ppo_null_network Value to be assigned
    def display_ppo_null_network=(display_ppo_null_network)
      if display_ppo_null_network.nil?
        fail ArgumentError, 'display_ppo_null_network cannot be nil'
      end

      @display_ppo_null_network = display_ppo_null_network
    end

    # Custom attribute writer method with validation
    # @param [Object] ed_i_installed Value to be assigned
    def ed_i_installed=(ed_i_installed)
      if !ed_i_installed.nil? && ed_i_installed.to_s.length > 1
        fail ArgumentError, 'invalid value for "ed_i_installed", the character length must be smaller than or equal to 1.'
      end

      @ed_i_installed = ed_i_installed
    end

    # Custom attribute writer method with validation
    # @param [Object] eo_b_report_location Value to be assigned
    def eo_b_report_location=(eo_b_report_location)
      if !eo_b_report_location.nil? && eo_b_report_location.to_s.length > 255
        fail ArgumentError, 'invalid value for "eo_b_report_location", the character length must be smaller than or equal to 255.'
      end

      @eo_b_report_location = eo_b_report_location
    end

    # Custom attribute writer method with validation
    # @param [Object] e_r_place_of_service Value to be assigned
    def e_r_place_of_service=(e_r_place_of_service)
      if !e_r_place_of_service.nil? && e_r_place_of_service.to_s.length > 5
        fail ArgumentError, 'invalid value for "e_r_place_of_service", the character length must be smaller than or equal to 5.'
      end

      @e_r_place_of_service = e_r_place_of_service
    end

    # Custom attribute writer method with validation
    # @param [Object] enforce_mfa Value to be assigned
    def enforce_mfa=(enforce_mfa)
      if enforce_mfa.nil?
        fail ArgumentError, 'enforce_mfa cannot be nil'
      end

      @enforce_mfa = enforce_mfa
    end

    # Custom attribute writer method with validation
    # @param [Object] entry_user Value to be assigned
    def entry_user=(entry_user)
      if !entry_user.nil? && entry_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "entry_user", the character length must be smaller than or equal to 20.'
      end

      @entry_user = entry_user
    end

    # Custom attribute writer method with validation
    # @param [Object] error_invalid_diag Value to be assigned
    def error_invalid_diag=(error_invalid_diag)
      if error_invalid_diag.nil?
        fail ArgumentError, 'error_invalid_diag cannot be nil'
      end

      @error_invalid_diag = error_invalid_diag
    end

    # Custom attribute writer method with validation
    # @param [Object] error_invalid_proc Value to be assigned
    def error_invalid_proc=(error_invalid_proc)
      if error_invalid_proc.nil?
        fail ArgumentError, 'error_invalid_proc cannot be nil'
      end

      @error_invalid_proc = error_invalid_proc
    end

    # Custom attribute writer method with validation
    # @param [Object] error_multiple_plan_years Value to be assigned
    def error_multiple_plan_years=(error_multiple_plan_years)
      if error_multiple_plan_years.nil?
        fail ArgumentError, 'error_multiple_plan_years cannot be nil'
      end

      @error_multiple_plan_years = error_multiple_plan_years
    end

    # Custom attribute writer method with validation
    # @param [Object] error_termed_provider Value to be assigned
    def error_termed_provider=(error_termed_provider)
      if error_termed_provider.nil?
        fail ArgumentError, 'error_termed_provider cannot be nil'
      end

      @error_termed_provider = error_termed_provider
    end

    # Custom attribute writer method with validation
    # @param [Object] exceed_exhaust_date_ex_code Value to be assigned
    def exceed_exhaust_date_ex_code=(exceed_exhaust_date_ex_code)
      if !exceed_exhaust_date_ex_code.nil? && exceed_exhaust_date_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "exceed_exhaust_date_ex_code", the character length must be smaller than or equal to 8.'
      end

      @exceed_exhaust_date_ex_code = exceed_exhaust_date_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] exceed_return_to_work_ex_code Value to be assigned
    def exceed_return_to_work_ex_code=(exceed_return_to_work_ex_code)
      if !exceed_return_to_work_ex_code.nil? && exceed_return_to_work_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "exceed_return_to_work_ex_code", the character length must be smaller than or equal to 8.'
      end

      @exceed_return_to_work_ex_code = exceed_return_to_work_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] exceeds_paid_through_ex_code Value to be assigned
    def exceeds_paid_through_ex_code=(exceeds_paid_through_ex_code)
      if !exceeds_paid_through_ex_code.nil? && exceeds_paid_through_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "exceeds_paid_through_ex_code", the character length must be smaller than or equal to 8.'
      end

      @exceeds_paid_through_ex_code = exceeds_paid_through_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] fax_country_code Value to be assigned
    def fax_country_code=(fax_country_code)
      if !fax_country_code.nil? && fax_country_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "fax_country_code", the character length must be smaller than or equal to 8.'
      end

      @fax_country_code = fax_country_code
    end

    # Custom attribute writer method with validation
    # @param [Object] fax_number Value to be assigned
    def fax_number=(fax_number)
      if !fax_number.nil? && fax_number.to_s.length > 20
        fail ArgumentError, 'invalid value for "fax_number", the character length must be smaller than or equal to 20.'
      end

      @fax_number = fax_number
    end

    # Custom attribute writer method with validation
    # @param [Object] federal_id Value to be assigned
    def federal_id=(federal_id)
      if !federal_id.nil? && federal_id.to_s.length > 20
        fail ArgumentError, 'invalid value for "federal_id", the character length must be smaller than or equal to 20.'
      end

      @federal_id = federal_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fee_sched_match_claim_year Value to be assigned
    def fee_sched_match_claim_year=(fee_sched_match_claim_year)
      if fee_sched_match_claim_year.nil?
        fail ArgumentError, 'fee_sched_match_claim_year cannot be nil'
      end

      @fee_sched_match_claim_year = fee_sched_match_claim_year
    end

    # Custom attribute writer method with validation
    # @param [Object] fee_schedule_ex_codes_manual Value to be assigned
    def fee_schedule_ex_codes_manual=(fee_schedule_ex_codes_manual)
      if fee_schedule_ex_codes_manual.nil?
        fail ArgumentError, 'fee_schedule_ex_codes_manual cannot be nil'
      end

      @fee_schedule_ex_codes_manual = fee_schedule_ex_codes_manual
    end

    # Custom attribute writer method with validation
    # @param [Object] fee_schedule_exact_match_fg Value to be assigned
    def fee_schedule_exact_match_fg=(fee_schedule_exact_match_fg)
      if fee_schedule_exact_match_fg.nil?
        fail ArgumentError, 'fee_schedule_exact_match_fg cannot be nil'
      end

      @fee_schedule_exact_match_fg = fee_schedule_exact_match_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] filled_tooth_ex_code Value to be assigned
    def filled_tooth_ex_code=(filled_tooth_ex_code)
      if !filled_tooth_ex_code.nil? && filled_tooth_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "filled_tooth_ex_code", the character length must be smaller than or equal to 8.'
      end

      @filled_tooth_ex_code = filled_tooth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] first_benefit_auto_selected_ex_code Value to be assigned
    def first_benefit_auto_selected_ex_code=(first_benefit_auto_selected_ex_code)
      if !first_benefit_auto_selected_ex_code.nil? && first_benefit_auto_selected_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "first_benefit_auto_selected_ex_code", the character length must be smaller than or equal to 6.'
      end

      @first_benefit_auto_selected_ex_code = first_benefit_auto_selected_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] flex_claim_after_grace_period_ex_code Value to be assigned
    def flex_claim_after_grace_period_ex_code=(flex_claim_after_grace_period_ex_code)
      if !flex_claim_after_grace_period_ex_code.nil? && flex_claim_after_grace_period_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "flex_claim_after_grace_period_ex_code", the character length must be smaller than or equal to 8.'
      end

      @flex_claim_after_grace_period_ex_code = flex_claim_after_grace_period_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] flex_claim_after_submit_period_ex_code Value to be assigned
    def flex_claim_after_submit_period_ex_code=(flex_claim_after_submit_period_ex_code)
      if !flex_claim_after_submit_period_ex_code.nil? && flex_claim_after_submit_period_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "flex_claim_after_submit_period_ex_code", the character length must be smaller than or equal to 8.'
      end

      @flex_claim_after_submit_period_ex_code = flex_claim_after_submit_period_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] flex_claim_funds_exhausted_ex_code Value to be assigned
    def flex_claim_funds_exhausted_ex_code=(flex_claim_funds_exhausted_ex_code)
      if !flex_claim_funds_exhausted_ex_code.nil? && flex_claim_funds_exhausted_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "flex_claim_funds_exhausted_ex_code", the character length must be smaller than or equal to 8.'
      end

      @flex_claim_funds_exhausted_ex_code = flex_claim_funds_exhausted_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] force_call_track_note Value to be assigned
    def force_call_track_note=(force_call_track_note)
      if force_call_track_note.nil?
        fail ArgumentError, 'force_call_track_note cannot be nil'
      end

      @force_call_track_note = force_call_track_note
    end

    # Custom attribute writer method with validation
    # @param [Object] force_claim_rec_date Value to be assigned
    def force_claim_rec_date=(force_claim_rec_date)
      if force_claim_rec_date.nil?
        fail ArgumentError, 'force_claim_rec_date cannot be nil'
      end

      @force_claim_rec_date = force_claim_rec_date
    end

    # Custom attribute writer method with validation
    # @param [Object] force_claim_sub_id Value to be assigned
    def force_claim_sub_id=(force_claim_sub_id)
      if !force_claim_sub_id.nil? && force_claim_sub_id.to_s.length > 1
        fail ArgumentError, 'invalid value for "force_claim_sub_id", the character length must be smaller than or equal to 1.'
      end

      @force_claim_sub_id = force_claim_sub_id
    end

    # Custom attribute writer method with validation
    # @param [Object] force_latest_enrollment Value to be assigned
    def force_latest_enrollment=(force_latest_enrollment)
      if force_latest_enrollment.nil?
        fail ArgumentError, 'force_latest_enrollment cannot be nil'
      end

      @force_latest_enrollment = force_latest_enrollment
    end

    # Custom attribute writer method with validation
    # @param [Object] force_leading_zero_on_rev_code Value to be assigned
    def force_leading_zero_on_rev_code=(force_leading_zero_on_rev_code)
      if force_leading_zero_on_rev_code.nil?
        fail ArgumentError, 'force_leading_zero_on_rev_code cannot be nil'
      end

      @force_leading_zero_on_rev_code = force_leading_zero_on_rev_code
    end

    # Custom attribute writer method with validation
    # @param [Object] full_backout_on_void_distribution Value to be assigned
    def full_backout_on_void_distribution=(full_backout_on_void_distribution)
      if full_backout_on_void_distribution.nil?
        fail ArgumentError, 'full_backout_on_void_distribution cannot be nil'
      end

      @full_backout_on_void_distribution = full_backout_on_void_distribution
    end

    # Custom attribute writer method with validation
    # @param [Object] full_month_billing Value to be assigned
    def full_month_billing=(full_month_billing)
      if full_month_billing.nil?
        fail ArgumentError, 'full_month_billing cannot be nil'
      end

      if full_month_billing.to_s.length > 1
        fail ArgumentError, 'invalid value for "full_month_billing", the character length must be smaller than or equal to 1.'
      end

      if full_month_billing.to_s.length < 1
        fail ArgumentError, 'invalid value for "full_month_billing", the character length must be great than or equal to 1.'
      end

      @full_month_billing = full_month_billing
    end

    # Custom attribute writer method with validation
    # @param [Object] generate_comm_user Value to be assigned
    def generate_comm_user=(generate_comm_user)
      if !generate_comm_user.nil? && generate_comm_user.to_s.length > 16
        fail ArgumentError, 'invalid value for "generate_comm_user", the character length must be smaller than or equal to 16.'
      end

      @generate_comm_user = generate_comm_user
    end

    # Custom attribute writer method with validation
    # @param [Object] generate_inv_user Value to be assigned
    def generate_inv_user=(generate_inv_user)
      if !generate_inv_user.nil? && generate_inv_user.to_s.length > 16
        fail ArgumentError, 'invalid value for "generate_inv_user", the character length must be smaller than or equal to 16.'
      end

      @generate_inv_user = generate_inv_user
    end

    # Custom attribute writer method with validation
    # @param [Object] generate_negative_inv Value to be assigned
    def generate_negative_inv=(generate_negative_inv)
      if generate_negative_inv.nil?
        fail ArgumentError, 'generate_negative_inv cannot be nil'
      end

      @generate_negative_inv = generate_negative_inv
    end

    # Custom attribute writer method with validation
    # @param [Object] global_cmu_id Value to be assigned
    def global_cmu_id=(global_cmu_id)
      if !global_cmu_id.nil? && global_cmu_id.to_s.length > 16
        fail ArgumentError, 'invalid value for "global_cmu_id", the character length must be smaller than or equal to 16.'
      end

      @global_cmu_id = global_cmu_id
    end

    # Custom attribute writer method with validation
    # @param [Object] i_d_card_location Value to be assigned
    def i_d_card_location=(i_d_card_location)
      if !i_d_card_location.nil? && i_d_card_location.to_s.length > 255
        fail ArgumentError, 'invalid value for "i_d_card_location", the character length must be smaller than or equal to 255.'
      end

      @i_d_card_location = i_d_card_location
    end

    # Custom attribute writer method with validation
    # @param [Object] iv_r_cs_country_code Value to be assigned
    def iv_r_cs_country_code=(iv_r_cs_country_code)
      if !iv_r_cs_country_code.nil? && iv_r_cs_country_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "iv_r_cs_country_code", the character length must be smaller than or equal to 8.'
      end

      @iv_r_cs_country_code = iv_r_cs_country_code
    end

    # Custom attribute writer method with validation
    # @param [Object] iv_r_cs_phone_number Value to be assigned
    def iv_r_cs_phone_number=(iv_r_cs_phone_number)
      if !iv_r_cs_phone_number.nil? && iv_r_cs_phone_number.to_s.length > 20
        fail ArgumentError, 'invalid value for "iv_r_cs_phone_number", the character length must be smaller than or equal to 20.'
      end

      @iv_r_cs_phone_number = iv_r_cs_phone_number
    end

    # Custom attribute writer method with validation
    # @param [Object] ignore_care_management_hierarchy_fg Value to be assigned
    def ignore_care_management_hierarchy_fg=(ignore_care_management_hierarchy_fg)
      if ignore_care_management_hierarchy_fg.nil?
        fail ArgumentError, 'ignore_care_management_hierarchy_fg cannot be nil'
      end

      @ignore_care_management_hierarchy_fg = ignore_care_management_hierarchy_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] ignore_claim_funding_status_change_msg Value to be assigned
    def ignore_claim_funding_status_change_msg=(ignore_claim_funding_status_change_msg)
      if ignore_claim_funding_status_change_msg.nil?
        fail ArgumentError, 'ignore_claim_funding_status_change_msg cannot be nil'
      end

      @ignore_claim_funding_status_change_msg = ignore_claim_funding_status_change_msg
    end

    # Custom attribute writer method with validation
    # @param [Object] inactive_payee_ex_code Value to be assigned
    def inactive_payee_ex_code=(inactive_payee_ex_code)
      if !inactive_payee_ex_code.nil? && inactive_payee_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "inactive_payee_ex_code", the character length must be smaller than or equal to 6.'
      end

      @inactive_payee_ex_code = inactive_payee_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] include_invalid_enrollments Value to be assigned
    def include_invalid_enrollments=(include_invalid_enrollments)
      if include_invalid_enrollments.nil?
        fail ArgumentError, 'include_invalid_enrollments cannot be nil'
      end

      @include_invalid_enrollments = include_invalid_enrollments
    end

    # Custom attribute writer method with validation
    # @param [Object] inv_grace_period_type Value to be assigned
    def inv_grace_period_type=(inv_grace_period_type)
      if !inv_grace_period_type.nil? && inv_grace_period_type.to_s.length > 1
        fail ArgumentError, 'invalid value for "inv_grace_period_type", the character length must be smaller than or equal to 1.'
      end

      @inv_grace_period_type = inv_grace_period_type
    end

    # Custom attribute writer method with validation
    # @param [Object] invalid_diag_ex_code Value to be assigned
    def invalid_diag_ex_code=(invalid_diag_ex_code)
      if !invalid_diag_ex_code.nil? && invalid_diag_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "invalid_diag_ex_code", the character length must be smaller than or equal to 6.'
      end

      @invalid_diag_ex_code = invalid_diag_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] invalid_proc_ex_code Value to be assigned
    def invalid_proc_ex_code=(invalid_proc_ex_code)
      if !invalid_proc_ex_code.nil? && invalid_proc_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "invalid_proc_ex_code", the character length must be smaller than or equal to 6.'
      end

      @invalid_proc_ex_code = invalid_proc_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_enrolled_by Value to be assigned
    def invoice_enrolled_by=(invoice_enrolled_by)
      if invoice_enrolled_by.nil?
        fail ArgumentError, 'invoice_enrolled_by cannot be nil'
      end

      @invoice_enrolled_by = invoice_enrolled_by
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_grace_ex_code Value to be assigned
    def invoice_grace_ex_code=(invoice_grace_ex_code)
      if !invoice_grace_ex_code.nil? && invoice_grace_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "invoice_grace_ex_code", the character length must be smaller than or equal to 6.'
      end

      @invoice_grace_ex_code = invoice_grace_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_address1 Value to be assigned
    def invoice_remit_address1=(invoice_remit_address1)
      if !invoice_remit_address1.nil? && invoice_remit_address1.to_s.length > 128
        fail ArgumentError, 'invalid value for "invoice_remit_address1", the character length must be smaller than or equal to 128.'
      end

      @invoice_remit_address1 = invoice_remit_address1
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_address2 Value to be assigned
    def invoice_remit_address2=(invoice_remit_address2)
      if !invoice_remit_address2.nil? && invoice_remit_address2.to_s.length > 128
        fail ArgumentError, 'invalid value for "invoice_remit_address2", the character length must be smaller than or equal to 128.'
      end

      @invoice_remit_address2 = invoice_remit_address2
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_city Value to be assigned
    def invoice_remit_city=(invoice_remit_city)
      if !invoice_remit_city.nil? && invoice_remit_city.to_s.length > 32
        fail ArgumentError, 'invalid value for "invoice_remit_city", the character length must be smaller than or equal to 32.'
      end

      @invoice_remit_city = invoice_remit_city
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_country_code Value to be assigned
    def invoice_remit_country_code=(invoice_remit_country_code)
      if !invoice_remit_country_code.nil? && invoice_remit_country_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "invoice_remit_country_code", the character length must be smaller than or equal to 8.'
      end

      @invoice_remit_country_code = invoice_remit_country_code
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_country_id Value to be assigned
    def invoice_remit_country_id=(invoice_remit_country_id)
      if !invoice_remit_country_id.nil? && invoice_remit_country_id.to_s.length > 8
        fail ArgumentError, 'invalid value for "invoice_remit_country_id", the character length must be smaller than or equal to 8.'
      end

      @invoice_remit_country_id = invoice_remit_country_id
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_name Value to be assigned
    def invoice_remit_name=(invoice_remit_name)
      if !invoice_remit_name.nil? && invoice_remit_name.to_s.length > 128
        fail ArgumentError, 'invalid value for "invoice_remit_name", the character length must be smaller than or equal to 128.'
      end

      @invoice_remit_name = invoice_remit_name
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_phone_number Value to be assigned
    def invoice_remit_phone_number=(invoice_remit_phone_number)
      if !invoice_remit_phone_number.nil? && invoice_remit_phone_number.to_s.length > 32
        fail ArgumentError, 'invalid value for "invoice_remit_phone_number", the character length must be smaller than or equal to 32.'
      end

      @invoice_remit_phone_number = invoice_remit_phone_number
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_state Value to be assigned
    def invoice_remit_state=(invoice_remit_state)
      if !invoice_remit_state.nil? && invoice_remit_state.to_s.length > 2
        fail ArgumentError, 'invalid value for "invoice_remit_state", the character length must be smaller than or equal to 2.'
      end

      @invoice_remit_state = invoice_remit_state
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_remit_zip_code Value to be assigned
    def invoice_remit_zip_code=(invoice_remit_zip_code)
      if !invoice_remit_zip_code.nil? && invoice_remit_zip_code.to_s.length > 32
        fail ArgumentError, 'invalid value for "invoice_remit_zip_code", the character length must be smaller than or equal to 32.'
      end

      @invoice_remit_zip_code = invoice_remit_zip_code
    end

    # Custom attribute writer method with validation
    # @param [Object] lag_time Value to be assigned
    def lag_time=(lag_time)
      if lag_time.nil?
        fail ArgumentError, 'lag_time cannot be nil'
      end

      @lag_time = lag_time
    end

    # Custom attribute writer method with validation
    # @param [Object] lock_auth_review Value to be assigned
    def lock_auth_review=(lock_auth_review)
      if lock_auth_review.nil?
        fail ArgumentError, 'lock_auth_review cannot be nil'
      end

      @lock_auth_review = lock_auth_review
    end

    # Custom attribute writer method with validation
    # @param [Object] lock_auth_review_all Value to be assigned
    def lock_auth_review_all=(lock_auth_review_all)
      if lock_auth_review_all.nil?
        fail ArgumentError, 'lock_auth_review_all cannot be nil'
      end

      @lock_auth_review_all = lock_auth_review_all
    end

    # Custom attribute writer method with validation
    # @param [Object] log_base_load_call Value to be assigned
    def log_base_load_call=(log_base_load_call)
      if log_base_load_call.nil?
        fail ArgumentError, 'log_base_load_call cannot be nil'
      end

      @log_base_load_call = log_base_load_call
    end

    # Custom attribute writer method with validation
    # @param [Object] logo_file Value to be assigned
    def logo_file=(logo_file)
      if !logo_file.nil? && logo_file.to_s.length > 128
        fail ArgumentError, 'invalid value for "logo_file", the character length must be smaller than or equal to 128.'
      end

      @logo_file = logo_file
    end

    # Custom attribute writer method with validation
    # @param [Object] long_state_names Value to be assigned
    def long_state_names=(long_state_names)
      if !long_state_names.nil? && long_state_names.to_s.length > 1
        fail ArgumentError, 'invalid value for "long_state_names", the character length must be smaller than or equal to 1.'
      end

      @long_state_names = long_state_names
    end

    # Custom attribute writer method with validation
    # @param [Object] mail_password Value to be assigned
    def mail_password=(mail_password)
      if !mail_password.nil? && mail_password.to_s.length > 64
        fail ArgumentError, 'invalid value for "mail_password", the character length must be smaller than or equal to 64.'
      end

      @mail_password = mail_password
    end

    # Custom attribute writer method with validation
    # @param [Object] mail_server Value to be assigned
    def mail_server=(mail_server)
      if !mail_server.nil? && mail_server.to_s.length > 128
        fail ArgumentError, 'invalid value for "mail_server", the character length must be smaller than or equal to 128.'
      end

      @mail_server = mail_server
    end

    # Custom attribute writer method with validation
    # @param [Object] mail_use_ssl Value to be assigned
    def mail_use_ssl=(mail_use_ssl)
      if mail_use_ssl.nil?
        fail ArgumentError, 'mail_use_ssl cannot be nil'
      end

      @mail_use_ssl = mail_use_ssl
    end

    # Custom attribute writer method with validation
    # @param [Object] mail_user Value to be assigned
    def mail_user=(mail_user)
      if !mail_user.nil? && mail_user.to_s.length > 64
        fail ArgumentError, 'invalid value for "mail_user", the character length must be smaller than or equal to 64.'
      end

      @mail_user = mail_user
    end

    # Custom attribute writer method with validation
    # @param [Object] medicare_on_benefit Value to be assigned
    def medicare_on_benefit=(medicare_on_benefit)
      if medicare_on_benefit.nil?
        fail ArgumentError, 'medicare_on_benefit cannot be nil'
      end

      if medicare_on_benefit.to_s.length > 1
        fail ArgumentError, 'invalid value for "medicare_on_benefit", the character length must be smaller than or equal to 1.'
      end

      if medicare_on_benefit.to_s.length < 1
        fail ArgumentError, 'invalid value for "medicare_on_benefit", the character length must be great than or equal to 1.'
      end

      @medicare_on_benefit = medicare_on_benefit
    end

    # Custom attribute writer method with validation
    # @param [Object] member_address_dob_not_reqd Value to be assigned
    def member_address_dob_not_reqd=(member_address_dob_not_reqd)
      if member_address_dob_not_reqd.nil?
        fail ArgumentError, 'member_address_dob_not_reqd cannot be nil'
      end

      @member_address_dob_not_reqd = member_address_dob_not_reqd
    end

    # Custom attribute writer method with validation
    # @param [Object] member_match_by_name_birth_date Value to be assigned
    def member_match_by_name_birth_date=(member_match_by_name_birth_date)
      if member_match_by_name_birth_date.nil?
        fail ArgumentError, 'member_match_by_name_birth_date cannot be nil'
      end

      @member_match_by_name_birth_date = member_match_by_name_birth_date
    end

    # Custom attribute writer method with validation
    # @param [Object] modifier_not_eff_ex_code Value to be assigned
    def modifier_not_eff_ex_code=(modifier_not_eff_ex_code)
      if !modifier_not_eff_ex_code.nil? && modifier_not_eff_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "modifier_not_eff_ex_code", the character length must be smaller than or equal to 8.'
      end

      @modifier_not_eff_ex_code = modifier_not_eff_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] multiple_auth_ex_code Value to be assigned
    def multiple_auth_ex_code=(multiple_auth_ex_code)
      if !multiple_auth_ex_code.nil? && multiple_auth_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "multiple_auth_ex_code", the character length must be smaller than or equal to 6.'
      end

      @multiple_auth_ex_code = multiple_auth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] name Value to be assigned
    def name=(name)
      if !name.nil? && name.to_s.length > 60
        fail ArgumentError, 'invalid value for "name", the character length must be smaller than or equal to 60.'
      end

      @name = name
    end

    # Custom attribute writer method with validation
    # @param [Object] network_does_not_match_repriced_network_ex_code Value to be assigned
    def network_does_not_match_repriced_network_ex_code=(network_does_not_match_repriced_network_ex_code)
      if !network_does_not_match_repriced_network_ex_code.nil? && network_does_not_match_repriced_network_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "network_does_not_match_repriced_network_ex_code", the character length must be smaller than or equal to 6.'
      end

      @network_does_not_match_repriced_network_ex_code = network_does_not_match_repriced_network_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] note_attachment_db Value to be assigned
    def note_attachment_db=(note_attachment_db)
      if note_attachment_db.nil?
        fail ArgumentError, 'note_attachment_db cannot be nil'
      end

      @note_attachment_db = note_attachment_db
    end

    # Custom attribute writer method with validation
    # @param [Object] note_attachment_local_default Value to be assigned
    def note_attachment_local_default=(note_attachment_local_default)
      if !note_attachment_local_default.nil? && note_attachment_local_default.to_s.length > 255
        fail ArgumentError, 'invalid value for "note_attachment_local_default", the character length must be smaller than or equal to 255.'
      end

      @note_attachment_local_default = note_attachment_local_default
    end

    # Custom attribute writer method with validation
    # @param [Object] note_attachment_remote_default Value to be assigned
    def note_attachment_remote_default=(note_attachment_remote_default)
      if !note_attachment_remote_default.nil? && note_attachment_remote_default.to_s.length > 255
        fail ArgumentError, 'invalid value for "note_attachment_remote_default", the character length must be smaller than or equal to 255.'
      end

      @note_attachment_remote_default = note_attachment_remote_default
    end

    # Custom attribute writer method with validation
    # @param [Object] oo_p_max_ex_code Value to be assigned
    def oo_p_max_ex_code=(oo_p_max_ex_code)
      if !oo_p_max_ex_code.nil? && oo_p_max_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "oo_p_max_ex_code", the character length must be smaller than or equal to 8.'
      end

      @oo_p_max_ex_code = oo_p_max_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] oo_p_max_ex_code_member Value to be assigned
    def oo_p_max_ex_code_member=(oo_p_max_ex_code_member)
      if !oo_p_max_ex_code_member.nil? && oo_p_max_ex_code_member.to_s.length > 8
        fail ArgumentError, 'invalid value for "oo_p_max_ex_code_member", the character length must be smaller than or equal to 8.'
      end

      @oo_p_max_ex_code_member = oo_p_max_ex_code_member
    end

    # Custom attribute writer method with validation
    # @param [Object] out_of_net_ex_code Value to be assigned
    def out_of_net_ex_code=(out_of_net_ex_code)
      if !out_of_net_ex_code.nil? && out_of_net_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "out_of_net_ex_code", the character length must be smaller than or equal to 8.'
      end

      @out_of_net_ex_code = out_of_net_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] overpayment_deduction_type Value to be assigned
    def overpayment_deduction_type=(overpayment_deduction_type)
      if !overpayment_deduction_type.nil? && overpayment_deduction_type.to_s.length > 8
        fail ArgumentError, 'invalid value for "overpayment_deduction_type", the character length must be smaller than or equal to 8.'
      end

      @overpayment_deduction_type = overpayment_deduction_type
    end

    # Custom attribute writer method with validation
    # @param [Object] pc_p_only_ex_code Value to be assigned
    def pc_p_only_ex_code=(pc_p_only_ex_code)
      if !pc_p_only_ex_code.nil? && pc_p_only_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "pc_p_only_ex_code", the character length must be smaller than or equal to 8.'
      end

      @pc_p_only_ex_code = pc_p_only_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] partial_cap Value to be assigned
    def partial_cap=(partial_cap)
      if partial_cap.nil?
        fail ArgumentError, 'partial_cap cannot be nil'
      end

      @partial_cap = partial_cap
    end

    # Custom attribute writer method with validation
    # @param [Object] payment_proration Value to be assigned
    def payment_proration=(payment_proration)
      if payment_proration.nil?
        fail ArgumentError, 'payment_proration cannot be nil'
      end

      @payment_proration = payment_proration
    end

    # Custom attribute writer method with validation
    # @param [Object] phone_country_code Value to be assigned
    def phone_country_code=(phone_country_code)
      if !phone_country_code.nil? && phone_country_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "phone_country_code", the character length must be smaller than or equal to 8.'
      end

      @phone_country_code = phone_country_code
    end

    # Custom attribute writer method with validation
    # @param [Object] phone_format Value to be assigned
    def phone_format=(phone_format)
      if !phone_format.nil? && phone_format.to_s.length > 20
        fail ArgumentError, 'invalid value for "phone_format", the character length must be smaller than or equal to 20.'
      end

      @phone_format = phone_format
    end

    # Custom attribute writer method with validation
    # @param [Object] phone_number Value to be assigned
    def phone_number=(phone_number)
      if !phone_number.nil? && phone_number.to_s.length > 20
        fail ArgumentError, 'invalid value for "phone_number", the character length must be smaller than or equal to 20.'
      end

      @phone_number = phone_number
    end

    # Custom attribute writer method with validation
    # @param [Object] place_code_not_setup_ex_code Value to be assigned
    def place_code_not_setup_ex_code=(place_code_not_setup_ex_code)
      if !place_code_not_setup_ex_code.nil? && place_code_not_setup_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "place_code_not_setup_ex_code", the character length must be smaller than or equal to 6.'
      end

      @place_code_not_setup_ex_code = place_code_not_setup_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] plan_benefit_override_network_id Value to be assigned
    def plan_benefit_override_network_id=(plan_benefit_override_network_id)
      if !plan_benefit_override_network_id.nil? && plan_benefit_override_network_id.to_s.length > 10
        fail ArgumentError, 'invalid value for "plan_benefit_override_network_id", the character length must be smaller than or equal to 10.'
      end

      @plan_benefit_override_network_id = plan_benefit_override_network_id
    end

    # Custom attribute writer method with validation
    # @param [Object] policy_forfeiture_grace_period_type Value to be assigned
    def policy_forfeiture_grace_period_type=(policy_forfeiture_grace_period_type)
      if !policy_forfeiture_grace_period_type.nil? && policy_forfeiture_grace_period_type.to_s.length > 1
        fail ArgumentError, 'invalid value for "policy_forfeiture_grace_period_type", the character length must be smaller than or equal to 1.'
      end

      @policy_forfeiture_grace_period_type = policy_forfeiture_grace_period_type
    end

    # Custom attribute writer method with validation
    # @param [Object] premium_proration Value to be assigned
    def premium_proration=(premium_proration)
      if premium_proration.nil?
        fail ArgumentError, 'premium_proration cannot be nil'
      end

      @premium_proration = premium_proration
    end

    # Custom attribute writer method with validation
    # @param [Object] prevent_suspense_release_by_process_user Value to be assigned
    def prevent_suspense_release_by_process_user=(prevent_suspense_release_by_process_user)
      if prevent_suspense_release_by_process_user.nil?
        fail ArgumentError, 'prevent_suspense_release_by_process_user cannot be nil'
      end

      @prevent_suspense_release_by_process_user = prevent_suspense_release_by_process_user
    end

    # Custom attribute writer method with validation
    # @param [Object] process_auths_when_pended Value to be assigned
    def process_auths_when_pended=(process_auths_when_pended)
      if process_auths_when_pended.nil?
        fail ArgumentError, 'process_auths_when_pended cannot be nil'
      end

      @process_auths_when_pended = process_auths_when_pended
    end

    # Custom attribute writer method with validation
    # @param [Object] process_auto_cob Value to be assigned
    def process_auto_cob=(process_auto_cob)
      if process_auto_cob.nil?
        fail ArgumentError, 'process_auto_cob cannot be nil'
      end

      @process_auto_cob = process_auto_cob
    end

    # Custom attribute writer method with validation
    # @param [Object] processing_mode Value to be assigned
    def processing_mode=(processing_mode)
      if !processing_mode.nil? && processing_mode.to_s.length > 1
        fail ArgumentError, 'invalid value for "processing_mode", the character length must be smaller than or equal to 1.'
      end

      @processing_mode = processing_mode
    end

    # Custom attribute writer method with validation
    # @param [Object] prof_atp_paid_date_type Value to be assigned
    def prof_atp_paid_date_type=(prof_atp_paid_date_type)
      if !prof_atp_paid_date_type.nil? && prof_atp_paid_date_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "prof_atp_paid_date_type", the character length must be smaller than or equal to 32.'
      end

      @prof_atp_paid_date_type = prof_atp_paid_date_type
    end

    # Custom attribute writer method with validation
    # @param [Object] prosthesis_tooth_ex_code Value to be assigned
    def prosthesis_tooth_ex_code=(prosthesis_tooth_ex_code)
      if !prosthesis_tooth_ex_code.nil? && prosthesis_tooth_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "prosthesis_tooth_ex_code", the character length must be smaller than or equal to 8.'
      end

      @prosthesis_tooth_ex_code = prosthesis_tooth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] protect_alternate_id Value to be assigned
    def protect_alternate_id=(protect_alternate_id)
      if protect_alternate_id.nil?
        fail ArgumentError, 'protect_alternate_id cannot be nil'
      end

      @protect_alternate_id = protect_alternate_id
    end

    # Custom attribute writer method with validation
    # @param [Object] provider_auth_exempt_procedure_ex_code Value to be assigned
    def provider_auth_exempt_procedure_ex_code=(provider_auth_exempt_procedure_ex_code)
      if !provider_auth_exempt_procedure_ex_code.nil? && provider_auth_exempt_procedure_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "provider_auth_exempt_procedure_ex_code", the character length must be smaller than or equal to 8.'
      end

      @provider_auth_exempt_procedure_ex_code = provider_auth_exempt_procedure_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] provider_not_active_auth_code Value to be assigned
    def provider_not_active_auth_code=(provider_not_active_auth_code)
      if !provider_not_active_auth_code.nil? && provider_not_active_auth_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "provider_not_active_auth_code", the character length must be smaller than or equal to 8.'
      end

      @provider_not_active_auth_code = provider_not_active_auth_code
    end

    # Custom attribute writer method with validation
    # @param [Object] pulled_tooth_ex_code Value to be assigned
    def pulled_tooth_ex_code=(pulled_tooth_ex_code)
      if !pulled_tooth_ex_code.nil? && pulled_tooth_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "pulled_tooth_ex_code", the character length must be smaller than or equal to 8.'
      end

      @pulled_tooth_ex_code = pulled_tooth_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] qp_a_method_1_ex_code Value to be assigned
    def qp_a_method_1_ex_code=(qp_a_method_1_ex_code)
      if !qp_a_method_1_ex_code.nil? && qp_a_method_1_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "qp_a_method_1_ex_code", the character length must be smaller than or equal to 6.'
      end

      @qp_a_method_1_ex_code = qp_a_method_1_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] qp_a_method_2_ex_code Value to be assigned
    def qp_a_method_2_ex_code=(qp_a_method_2_ex_code)
      if !qp_a_method_2_ex_code.nil? && qp_a_method_2_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "qp_a_method_2_ex_code", the character length must be smaller than or equal to 6.'
      end

      @qp_a_method_2_ex_code = qp_a_method_2_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] r_x_atp_paid_date_type Value to be assigned
    def r_x_atp_paid_date_type=(r_x_atp_paid_date_type)
      if !r_x_atp_paid_date_type.nil? && r_x_atp_paid_date_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "r_x_atp_paid_date_type", the character length must be smaller than or equal to 32.'
      end

      @r_x_atp_paid_date_type = r_x_atp_paid_date_type
    end

    # Custom attribute writer method with validation
    # @param [Object] reins_split_claim Value to be assigned
    def reins_split_claim=(reins_split_claim)
      if reins_split_claim.nil?
        fail ArgumentError, 'reins_split_claim cannot be nil'
      end

      @reins_split_claim = reins_split_claim
    end

    # Custom attribute writer method with validation
    # @param [Object] repriced_line Value to be assigned
    def repriced_line=(repriced_line)
      if !repriced_line.nil? && repriced_line.to_s.length > 64
        fail ArgumentError, 'invalid value for "repriced_line", the character length must be smaller than or equal to 64.'
      end

      @repriced_line = repriced_line
    end

    # Custom attribute writer method with validation
    # @param [Object] request_id_card_prompt_enrollment Value to be assigned
    def request_id_card_prompt_enrollment=(request_id_card_prompt_enrollment)
      if request_id_card_prompt_enrollment.nil?
        fail ArgumentError, 'request_id_card_prompt_enrollment cannot be nil'
      end

      @request_id_card_prompt_enrollment = request_id_card_prompt_enrollment
    end

    # Custom attribute writer method with validation
    # @param [Object] request_provider_email Value to be assigned
    def request_provider_email=(request_provider_email)
      if !request_provider_email.nil? && request_provider_email.to_s.length > 255
        fail ArgumentError, 'invalid value for "request_provider_email", the character length must be smaller than or equal to 255.'
      end

      @request_provider_email = request_provider_email
    end

    # Custom attribute writer method with validation
    # @param [Object] request_reassess_email Value to be assigned
    def request_reassess_email=(request_reassess_email)
      if !request_reassess_email.nil? && request_reassess_email.to_s.length > 255
        fail ArgumentError, 'invalid value for "request_reassess_email", the character length must be smaller than or equal to 255.'
      end

      @request_reassess_email = request_reassess_email
    end

    # Custom attribute writer method with validation
    # @param [Object] restrict_npi_federal_id Value to be assigned
    def restrict_npi_federal_id=(restrict_npi_federal_id)
      if restrict_npi_federal_id.nil?
        fail ArgumentError, 'restrict_npi_federal_id cannot be nil'
      end

      @restrict_npi_federal_id = restrict_npi_federal_id
    end

    # Custom attribute writer method with validation
    # @param [Object] scanned_images_folder Value to be assigned
    def scanned_images_folder=(scanned_images_folder)
      if !scanned_images_folder.nil? && scanned_images_folder.to_s.length > 255
        fail ArgumentError, 'invalid value for "scanned_images_folder", the character length must be smaller than or equal to 255.'
      end

      @scanned_images_folder = scanned_images_folder
    end

    # Custom attribute writer method with validation
    # @param [Object] set_paid_through Value to be assigned
    def set_paid_through=(set_paid_through)
      if set_paid_through.nil?
        fail ArgumentError, 'set_paid_through cannot be nil'
      end

      @set_paid_through = set_paid_through
    end

    # Custom attribute writer method with validation
    # @param [Object] single_refund_check_batch Value to be assigned
    def single_refund_check_batch=(single_refund_check_batch)
      if single_refund_check_batch.nil?
        fail ArgumentError, 'single_refund_check_batch cannot be nil'
      end

      @single_refund_check_batch = single_refund_check_batch
    end

    # Custom attribute writer method with validation
    # @param [Object] state Value to be assigned
    def state=(state)
      if !state.nil? && state.to_s.length > 2
        fail ArgumentError, 'invalid value for "state", the character length must be smaller than or equal to 2.'
      end

      @state = state
    end

    # Custom attribute writer method with validation
    # @param [Object] subscriber_id_format Value to be assigned
    def subscriber_id_format=(subscriber_id_format)
      if !subscriber_id_format.nil? && subscriber_id_format.to_s.length > 20
        fail ArgumentError, 'invalid value for "subscriber_id_format", the character length must be smaller than or equal to 20.'
      end

      @subscriber_id_format = subscriber_id_format
    end

    # Custom attribute writer method with validation
    # @param [Object] tax_control_location Value to be assigned
    def tax_control_location=(tax_control_location)
      if !tax_control_location.nil? && tax_control_location.to_s.length > 255
        fail ArgumentError, 'invalid value for "tax_control_location", the character length must be smaller than or equal to 255.'
      end

      @tax_control_location = tax_control_location
    end

    # Custom attribute writer method with validation
    # @param [Object] tax_on_adjudcation_date_fg Value to be assigned
    def tax_on_adjudcation_date_fg=(tax_on_adjudcation_date_fg)
      if tax_on_adjudcation_date_fg.nil?
        fail ArgumentError, 'tax_on_adjudcation_date_fg cannot be nil'
      end

      @tax_on_adjudcation_date_fg = tax_on_adjudcation_date_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] termed_provider_ex_code Value to be assigned
    def termed_provider_ex_code=(termed_provider_ex_code)
      if !termed_provider_ex_code.nil? && termed_provider_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "termed_provider_ex_code", the character length must be smaller than or equal to 6.'
      end

      @termed_provider_ex_code = termed_provider_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] toll_free_country_code Value to be assigned
    def toll_free_country_code=(toll_free_country_code)
      if !toll_free_country_code.nil? && toll_free_country_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "toll_free_country_code", the character length must be smaller than or equal to 8.'
      end

      @toll_free_country_code = toll_free_country_code
    end

    # Custom attribute writer method with validation
    # @param [Object] toll_free_phone_number Value to be assigned
    def toll_free_phone_number=(toll_free_phone_number)
      if !toll_free_phone_number.nil? && toll_free_phone_number.to_s.length > 20
        fail ArgumentError, 'invalid value for "toll_free_phone_number", the character length must be smaller than or equal to 20.'
      end

      @toll_free_phone_number = toll_free_phone_number
    end

    # Custom attribute writer method with validation
    # @param [Object] tooth_activity_ex_code Value to be assigned
    def tooth_activity_ex_code=(tooth_activity_ex_code)
      if !tooth_activity_ex_code.nil? && tooth_activity_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "tooth_activity_ex_code", the character length must be smaller than or equal to 8.'
      end

      @tooth_activity_ex_code = tooth_activity_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] tooth_chart_type Value to be assigned
    def tooth_chart_type=(tooth_chart_type)
      if !tooth_chart_type.nil? && tooth_chart_type.to_s.length > 8
        fail ArgumentError, 'invalid value for "tooth_chart_type", the character length must be smaller than or equal to 8.'
      end

      @tooth_chart_type = tooth_chart_type
    end

    # Custom attribute writer method with validation
    # @param [Object] u_b92_atp_paid_date_type Value to be assigned
    def u_b92_atp_paid_date_type=(u_b92_atp_paid_date_type)
      if !u_b92_atp_paid_date_type.nil? && u_b92_atp_paid_date_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "u_b92_atp_paid_date_type", the character length must be smaller than or equal to 32.'
      end

      @u_b92_atp_paid_date_type = u_b92_atp_paid_date_type
    end

    # Custom attribute writer method with validation
    # @param [Object] u_c_price_used_ex_code Value to be assigned
    def u_c_price_used_ex_code=(u_c_price_used_ex_code)
      if !u_c_price_used_ex_code.nil? && u_c_price_used_ex_code.to_s.length > 8
        fail ArgumentError, 'invalid value for "u_c_price_used_ex_code", the character length must be smaller than or equal to 8.'
      end

      @u_c_price_used_ex_code = u_c_price_used_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] u_c_unit_mulitply Value to be assigned
    def u_c_unit_mulitply=(u_c_unit_mulitply)
      if u_c_unit_mulitply.nil?
        fail ArgumentError, 'u_c_unit_mulitply cannot be nil'
      end

      @u_c_unit_mulitply = u_c_unit_mulitply
    end

    # Custom attribute writer method with validation
    # @param [Object] unassigned_provider Value to be assigned
    def unassigned_provider=(unassigned_provider)
      if !unassigned_provider.nil? && unassigned_provider.to_s.length > 8
        fail ArgumentError, 'invalid value for "unassigned_provider", the character length must be smaller than or equal to 8.'
      end

      @unassigned_provider = unassigned_provider
    end

    # Custom attribute writer method with validation
    # @param [Object] update_user Value to be assigned
    def update_user=(update_user)
      if !update_user.nil? && update_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "update_user", the character length must be smaller than or equal to 20.'
      end

      @update_user = update_user
    end

    # Custom attribute writer method with validation
    # @param [Object] use_greater_user_amount_limit_fg Value to be assigned
    def use_greater_user_amount_limit_fg=(use_greater_user_amount_limit_fg)
      if use_greater_user_amount_limit_fg.nil?
        fail ArgumentError, 'use_greater_user_amount_limit_fg cannot be nil'
      end

      @use_greater_user_amount_limit_fg = use_greater_user_amount_limit_fg
    end

    # Custom attribute writer method with validation
    # @param [Object] use_auth_over_unit_split Value to be assigned
    def use_auth_over_unit_split=(use_auth_over_unit_split)
      if use_auth_over_unit_split.nil?
        fail ArgumentError, 'use_auth_over_unit_split cannot be nil'
      end

      @use_auth_over_unit_split = use_auth_over_unit_split
    end

    # Custom attribute writer method with validation
    # @param [Object] use_change_data_capture Value to be assigned
    def use_change_data_capture=(use_change_data_capture)
      if use_change_data_capture.nil?
        fail ArgumentError, 'use_change_data_capture cannot be nil'
      end

      @use_change_data_capture = use_change_data_capture
    end

    # Custom attribute writer method with validation
    # @param [Object] use_commission_cluster_hierarchy Value to be assigned
    def use_commission_cluster_hierarchy=(use_commission_cluster_hierarchy)
      if use_commission_cluster_hierarchy.nil?
        fail ArgumentError, 'use_commission_cluster_hierarchy cannot be nil'
      end

      @use_commission_cluster_hierarchy = use_commission_cluster_hierarchy
    end

    # Custom attribute writer method with validation
    # @param [Object] use_currency Value to be assigned
    def use_currency=(use_currency)
      if use_currency.nil?
        fail ArgumentError, 'use_currency cannot be nil'
      end

      @use_currency = use_currency
    end

    # Custom attribute writer method with validation
    # @param [Object] use_disability_from_date Value to be assigned
    def use_disability_from_date=(use_disability_from_date)
      if use_disability_from_date.nil?
        fail ArgumentError, 'use_disability_from_date cannot be nil'
      end

      @use_disability_from_date = use_disability_from_date
    end

    # Custom attribute writer method with validation
    # @param [Object] use_expanded_notes Value to be assigned
    def use_expanded_notes=(use_expanded_notes)
      if use_expanded_notes.nil?
        fail ArgumentError, 'use_expanded_notes cannot be nil'
      end

      @use_expanded_notes = use_expanded_notes
    end

    # Custom attribute writer method with validation
    # @param [Object] use_first_match_pricing Value to be assigned
    def use_first_match_pricing=(use_first_match_pricing)
      if use_first_match_pricing.nil?
        fail ArgumentError, 'use_first_match_pricing cannot be nil'
      end

      @use_first_match_pricing = use_first_match_pricing
    end

    # Custom attribute writer method with validation
    # @param [Object] use_other_name Value to be assigned
    def use_other_name=(use_other_name)
      if !use_other_name.nil? && use_other_name.to_s.length > 1
        fail ArgumentError, 'invalid value for "use_other_name", the character length must be smaller than or equal to 1.'
      end

      @use_other_name = use_other_name
    end

    # Custom attribute writer method with validation
    # @param [Object] use_primary_diag_match Value to be assigned
    def use_primary_diag_match=(use_primary_diag_match)
      if use_primary_diag_match.nil?
        fail ArgumentError, 'use_primary_diag_match cannot be nil'
      end

      @use_primary_diag_match = use_primary_diag_match
    end

    # Custom attribute writer method with validation
    # @param [Object] use_primary_diag_match_capitation Value to be assigned
    def use_primary_diag_match_capitation=(use_primary_diag_match_capitation)
      if use_primary_diag_match_capitation.nil?
        fail ArgumentError, 'use_primary_diag_match_capitation cannot be nil'
      end

      @use_primary_diag_match_capitation = use_primary_diag_match_capitation
    end

    # Custom attribute writer method with validation
    # @param [Object] use_salary Value to be assigned
    def use_salary=(use_salary)
      if use_salary.nil?
        fail ArgumentError, 'use_salary cannot be nil'
      end

      @use_salary = use_salary
    end

    # Custom attribute writer method with validation
    # @param [Object] use_tax_control Value to be assigned
    def use_tax_control=(use_tax_control)
      if use_tax_control.nil?
        fail ArgumentError, 'use_tax_control cannot be nil'
      end

      @use_tax_control = use_tax_control
    end

    # Custom attribute writer method with validation
    # @param [Object] use_vba_software_2 Value to be assigned
    def use_vba_software_2=(use_vba_software_2)
      if use_vba_software_2.nil?
        fail ArgumentError, 'use_vba_software_2 cannot be nil'
      end

      @use_vba_software_2 = use_vba_software_2
    end

    # Custom attribute writer method with validation
    # @param [Object] use_vb_adjudicate_2 Value to be assigned
    def use_vb_adjudicate_2=(use_vb_adjudicate_2)
      if use_vb_adjudicate_2.nil?
        fail ArgumentError, 'use_vb_adjudicate_2 cannot be nil'
      end

      @use_vb_adjudicate_2 = use_vb_adjudicate_2
    end

    # Custom attribute writer method with validation
    # @param [Object] use_zip_code_auto_populate Value to be assigned
    def use_zip_code_auto_populate=(use_zip_code_auto_populate)
      if use_zip_code_auto_populate.nil?
        fail ArgumentError, 'use_zip_code_auto_populate cannot be nil'
      end

      @use_zip_code_auto_populate = use_zip_code_auto_populate
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_data_integration Value to be assigned
    def vba_data_integration=(vba_data_integration)
      if vba_data_integration.nil?
        fail ArgumentError, 'vba_data_integration cannot be nil'
      end

      @vba_data_integration = vba_data_integration
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_data_integration_dbms Value to be assigned
    def vba_data_integration_dbms=(vba_data_integration_dbms)
      if !vba_data_integration_dbms.nil? && vba_data_integration_dbms.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_data_integration_dbms", the character length must be smaller than or equal to 128.'
      end

      @vba_data_integration_dbms = vba_data_integration_dbms
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_data_integration_db_parm Value to be assigned
    def vba_data_integration_db_parm=(vba_data_integration_db_parm)
      if !vba_data_integration_db_parm.nil? && vba_data_integration_db_parm.to_s.length > 1024
        fail ArgumentError, 'invalid value for "vba_data_integration_db_parm", the character length must be smaller than or equal to 1024.'
      end

      @vba_data_integration_db_parm = vba_data_integration_db_parm
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_data_integration_database Value to be assigned
    def vba_data_integration_database=(vba_data_integration_database)
      if !vba_data_integration_database.nil? && vba_data_integration_database.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_data_integration_database", the character length must be smaller than or equal to 128.'
      end

      @vba_data_integration_database = vba_data_integration_database
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_data_integration_server Value to be assigned
    def vba_data_integration_server=(vba_data_integration_server)
      if !vba_data_integration_server.nil? && vba_data_integration_server.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_data_integration_server", the character length must be smaller than or equal to 128.'
      end

      @vba_data_integration_server = vba_data_integration_server
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway Value to be assigned
    def vba_gateway=(vba_gateway)
      if vba_gateway.nil?
        fail ArgumentError, 'vba_gateway cannot be nil'
      end

      @vba_gateway = vba_gateway
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_dbms Value to be assigned
    def vba_gateway_dbms=(vba_gateway_dbms)
      if !vba_gateway_dbms.nil? && vba_gateway_dbms.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_dbms", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_dbms = vba_gateway_dbms
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_db_parm Value to be assigned
    def vba_gateway_db_parm=(vba_gateway_db_parm)
      if !vba_gateway_db_parm.nil? && vba_gateway_db_parm.to_s.length > 1024
        fail ArgumentError, 'invalid value for "vba_gateway_db_parm", the character length must be smaller than or equal to 1024.'
      end

      @vba_gateway_db_parm = vba_gateway_db_parm
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_database Value to be assigned
    def vba_gateway_database=(vba_gateway_database)
      if !vba_gateway_database.nil? && vba_gateway_database.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_database", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_database = vba_gateway_database
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_host Value to be assigned
    def vba_gateway_sftp_host=(vba_gateway_sftp_host)
      if !vba_gateway_sftp_host.nil? && vba_gateway_sftp_host.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_sftp_host", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_sftp_host = vba_gateway_sftp_host
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_log_file Value to be assigned
    def vba_gateway_sftp_log_file=(vba_gateway_sftp_log_file)
      if !vba_gateway_sftp_log_file.nil? && vba_gateway_sftp_log_file.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_sftp_log_file", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_sftp_log_file = vba_gateway_sftp_log_file
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_mlst Value to be assigned
    def vba_gateway_sftp_mlst=(vba_gateway_sftp_mlst)
      if vba_gateway_sftp_mlst.nil?
        fail ArgumentError, 'vba_gateway_sftp_mlst cannot be nil'
      end

      @vba_gateway_sftp_mlst = vba_gateway_sftp_mlst
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_passive Value to be assigned
    def vba_gateway_sftp_passive=(vba_gateway_sftp_passive)
      if vba_gateway_sftp_passive.nil?
        fail ArgumentError, 'vba_gateway_sftp_passive cannot be nil'
      end

      @vba_gateway_sftp_passive = vba_gateway_sftp_passive
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_password Value to be assigned
    def vba_gateway_sftp_password=(vba_gateway_sftp_password)
      if !vba_gateway_sftp_password.nil? && vba_gateway_sftp_password.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_sftp_password", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_sftp_password = vba_gateway_sftp_password
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_sftp_user Value to be assigned
    def vba_gateway_sftp_user=(vba_gateway_sftp_user)
      if !vba_gateway_sftp_user.nil? && vba_gateway_sftp_user.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_sftp_user", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_sftp_user = vba_gateway_sftp_user
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_server Value to be assigned
    def vba_gateway_server=(vba_gateway_server)
      if !vba_gateway_server.nil? && vba_gateway_server.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_server", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_server = vba_gateway_server
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_adjudicate_client_code Value to be assigned
    def vbap_i_adjudicate_client_code=(vbap_i_adjudicate_client_code)
      if !vbap_i_adjudicate_client_code.nil? && vbap_i_adjudicate_client_code.to_s.length > 32
        fail ArgumentError, 'invalid value for "vbap_i_adjudicate_client_code", the character length must be smaller than or equal to 32.'
      end

      @vbap_i_adjudicate_client_code = vbap_i_adjudicate_client_code
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_adjudicate_client_id Value to be assigned
    def vbap_i_adjudicate_client_id=(vbap_i_adjudicate_client_id)
      if !vbap_i_adjudicate_client_id.nil? && vbap_i_adjudicate_client_id.to_s.length > 32
        fail ArgumentError, 'invalid value for "vbap_i_adjudicate_client_id", the character length must be smaller than or equal to 32.'
      end

      @vbap_i_adjudicate_client_id = vbap_i_adjudicate_client_id
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_adjudicate_database Value to be assigned
    def vbap_i_adjudicate_database=(vbap_i_adjudicate_database)
      if !vbap_i_adjudicate_database.nil? && vbap_i_adjudicate_database.to_s.length > 64
        fail ArgumentError, 'invalid value for "vbap_i_adjudicate_database", the character length must be smaller than or equal to 64.'
      end

      @vbap_i_adjudicate_database = vbap_i_adjudicate_database
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_claim_queue_url Value to be assigned
    def vbap_i_claim_queue_url=(vbap_i_claim_queue_url)
      if !vbap_i_claim_queue_url.nil? && vbap_i_claim_queue_url.to_s.length > 1024
        fail ArgumentError, 'invalid value for "vbap_i_claim_queue_url", the character length must be smaller than or equal to 1024.'
      end

      @vbap_i_claim_queue_url = vbap_i_claim_queue_url
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_client_code Value to be assigned
    def vbap_i_client_code=(vbap_i_client_code)
      if !vbap_i_client_code.nil? && vbap_i_client_code.to_s.length > 32
        fail ArgumentError, 'invalid value for "vbap_i_client_code", the character length must be smaller than or equal to 32.'
      end

      @vbap_i_client_code = vbap_i_client_code
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_field_masking_enabled Value to be assigned
    def vbap_i_field_masking_enabled=(vbap_i_field_masking_enabled)
      if vbap_i_field_masking_enabled.nil?
        fail ArgumentError, 'vbap_i_field_masking_enabled cannot be nil'
      end

      @vbap_i_field_masking_enabled = vbap_i_field_masking_enabled
    end

    # Custom attribute writer method with validation
    # @param [Object] vbap_i_ip_whitelist Value to be assigned
    def vbap_i_ip_whitelist=(vbap_i_ip_whitelist)
      if vbap_i_ip_whitelist.nil?
        fail ArgumentError, 'vbap_i_ip_whitelist cannot be nil'
      end

      @vbap_i_ip_whitelist = vbap_i_ip_whitelist
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_report_mail_password Value to be assigned
    def vba_report_mail_password=(vba_report_mail_password)
      if !vba_report_mail_password.nil? && vba_report_mail_password.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_report_mail_password", the character length must be smaller than or equal to 64.'
      end

      @vba_report_mail_password = vba_report_mail_password
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_report_mail_server Value to be assigned
    def vba_report_mail_server=(vba_report_mail_server)
      if !vba_report_mail_server.nil? && vba_report_mail_server.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_report_mail_server", the character length must be smaller than or equal to 128.'
      end

      @vba_report_mail_server = vba_report_mail_server
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_report_mail_use_ssl Value to be assigned
    def vba_report_mail_use_ssl=(vba_report_mail_use_ssl)
      if vba_report_mail_use_ssl.nil?
        fail ArgumentError, 'vba_report_mail_use_ssl cannot be nil'
      end

      @vba_report_mail_use_ssl = vba_report_mail_use_ssl
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_report_mail_user Value to be assigned
    def vba_report_mail_user=(vba_report_mail_user)
      if !vba_report_mail_user.nil? && vba_report_mail_user.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_report_mail_user", the character length must be smaller than or equal to 64.'
      end

      @vba_report_mail_user = vba_report_mail_user
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_report_status Value to be assigned
    def vba_report_status=(vba_report_status)
      if !vba_report_status.nil? && vba_report_status.to_s.length > 32
        fail ArgumentError, 'invalid value for "vba_report_status", the character length must be smaller than or equal to 32.'
      end

      @vba_report_status = vba_report_status
    end

    # Custom attribute writer method with validation
    # @param [Object] vb_adjudicate_status Value to be assigned
    def vb_adjudicate_status=(vb_adjudicate_status)
      if !vb_adjudicate_status.nil? && vb_adjudicate_status.to_s.length > 32
        fail ArgumentError, 'invalid value for "vb_adjudicate_status", the character length must be smaller than or equal to 32.'
      end

      @vb_adjudicate_status = vb_adjudicate_status
    end

    # Custom attribute writer method with validation
    # @param [Object] validate_federal_id_on_auth Value to be assigned
    def validate_federal_id_on_auth=(validate_federal_id_on_auth)
      if validate_federal_id_on_auth.nil?
        fail ArgumentError, 'validate_federal_id_on_auth cannot be nil'
      end

      @validate_federal_id_on_auth = validate_federal_id_on_auth
    end

    # Custom attribute writer method with validation
    # @param [Object] validate_provider_on_auth Value to be assigned
    def validate_provider_on_auth=(validate_provider_on_auth)
      if validate_provider_on_auth.nil?
        fail ArgumentError, 'validate_provider_on_auth cannot be nil'
      end

      @validate_provider_on_auth = validate_provider_on_auth
    end

    # Custom attribute writer method with validation
    # @param [Object] void_backout_use_current_date Value to be assigned
    def void_backout_use_current_date=(void_backout_use_current_date)
      if void_backout_use_current_date.nil?
        fail ArgumentError, 'void_backout_use_current_date cannot be nil'
      end

      @void_backout_use_current_date = void_backout_use_current_date
    end

    # Custom attribute writer method with validation
    # @param [Object] volume_max_met_ex_code Value to be assigned
    def volume_max_met_ex_code=(volume_max_met_ex_code)
      if !volume_max_met_ex_code.nil? && volume_max_met_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "volume_max_met_ex_code", the character length must be smaller than or equal to 6.'
      end

      @volume_max_met_ex_code = volume_max_met_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] volume_min_met_ex_code Value to be assigned
    def volume_min_met_ex_code=(volume_min_met_ex_code)
      if !volume_min_met_ex_code.nil? && volume_min_met_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "volume_min_met_ex_code", the character length must be smaller than or equal to 6.'
      end

      @volume_min_met_ex_code = volume_min_met_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_eob_code_not_found_ex_code Value to be assigned
    def zelis_eob_code_not_found_ex_code=(zelis_eob_code_not_found_ex_code)
      if !zelis_eob_code_not_found_ex_code.nil? && zelis_eob_code_not_found_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "zelis_eob_code_not_found_ex_code", the character length must be smaller than or equal to 6.'
      end

      @zelis_eob_code_not_found_ex_code = zelis_eob_code_not_found_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_edit_code_not_found_ex_code Value to be assigned
    def zelis_edit_code_not_found_ex_code=(zelis_edit_code_not_found_ex_code)
      if !zelis_edit_code_not_found_ex_code.nil? && zelis_edit_code_not_found_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "zelis_edit_code_not_found_ex_code", the character length must be smaller than or equal to 6.'
      end

      @zelis_edit_code_not_found_ex_code = zelis_edit_code_not_found_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_in_network_ex_code Value to be assigned
    def zelis_in_network_ex_code=(zelis_in_network_ex_code)
      if !zelis_in_network_ex_code.nil? && zelis_in_network_ex_code.to_s.length > 6
        fail ArgumentError, 'invalid value for "zelis_in_network_ex_code", the character length must be smaller than or equal to 6.'
      end

      @zelis_in_network_ex_code = zelis_in_network_ex_code
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_login Value to be assigned
    def zelis_login=(zelis_login)
      if !zelis_login.nil? && zelis_login.to_s.length > 128
        fail ArgumentError, 'invalid value for "zelis_login", the character length must be smaller than or equal to 128.'
      end

      @zelis_login = zelis_login
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_password Value to be assigned
    def zelis_password=(zelis_password)
      if !zelis_password.nil? && zelis_password.to_s.length > 128
        fail ArgumentError, 'invalid value for "zelis_password", the character length must be smaller than or equal to 128.'
      end

      @zelis_password = zelis_password
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_poll Value to be assigned
    def zelis_poll=(zelis_poll)
      if zelis_poll.nil?
        fail ArgumentError, 'zelis_poll cannot be nil'
      end

      @zelis_poll = zelis_poll
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_poll_testing Value to be assigned
    def zelis_poll_testing=(zelis_poll_testing)
      if zelis_poll_testing.nil?
        fail ArgumentError, 'zelis_poll_testing cannot be nil'
      end

      @zelis_poll_testing = zelis_poll_testing
    end

    # Custom attribute writer method with validation
    # @param [Object] zelis_url Value to be assigned
    def zelis_url=(zelis_url)
      if !zelis_url.nil? && zelis_url.to_s.length > 1024
        fail ArgumentError, 'invalid value for "zelis_url", the character length must be smaller than or equal to 1024.'
      end

      @zelis_url = zelis_url
    end

    # Custom attribute writer method with validation
    # @param [Object] zip_code Value to be assigned
    def zip_code=(zip_code)
      if !zip_code.nil? && zip_code.to_s.length > 32
        fail ArgumentError, 'invalid value for "zip_code", the character length must be smaller than or equal to 32.'
      end

      @zip_code = zip_code
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          key_value == o.key_value &&
          ap_c_schedule == o.ap_c_schedule &&
          as_o_percentage == o.as_o_percentage &&
          accident_review_ex_code == o.accident_review_ex_code &&
          accident_review_plan_benefit_ex_code == o.accident_review_plan_benefit_ex_code &&
          additional_invoice_rates == o.additional_invoice_rates &&
          address == o.address &&
          address2 == o.address2 &&
          adv_password_req == o.adv_password_req &&
          age_disenroll_reason == o.age_disenroll_reason &&
          allow_apostrophe_in_name == o.allow_apostrophe_in_name &&
          allow_checks_post_date == o.allow_checks_post_date &&
          allow_claim_benefit_override == o.allow_claim_benefit_override &&
          allow_max_at_subscriber == o.allow_max_at_subscriber &&
          allow_oop_on_override == o.allow_oop_on_override &&
          allow_zero_billed == o.allow_zero_billed &&
          anesthesia_by_fee_sched == o.anesthesia_by_fee_sched &&
          anesthesia_round_precision == o.anesthesia_round_precision &&
          anesthesia_round_type == o.anesthesia_round_type &&
          apply_multiple_benefit_ex_code_manual == o.apply_multiple_benefit_ex_code_manual &&
          auth_review_full_path == o.auth_review_full_path &&
          auth_review_object == o.auth_review_object &&
          auth_code_closed == o.auth_code_closed &&
          auth_code_pay_amt_zero == o.auth_code_pay_amt_zero &&
          auth_code_reopen == o.auth_code_reopen &&
          auth_code_under_auth_amt == o.auth_code_under_auth_amt &&
          auth_over_unit_split_ex_code == o.auth_over_unit_split_ex_code &&
          auth_penalty_ex_code == o.auth_penalty_ex_code &&
          auto_adj_return_to_batch == o.auto_adj_return_to_batch &&
          auto_pay_capitated_claims == o.auto_pay_capitated_claims &&
          auto_process_adjustment_backout == o.auto_process_adjustment_backout &&
          auto_term_plan_on_gateway_request == o.auto_term_plan_on_gateway_request &&
          b_r_domain_name == o.b_r_domain_name &&
          b_r_site_name == o.b_r_site_name &&
          b_r_site_secret == o.b_r_site_secret &&
          b_r_site_user == o.b_r_site_user &&
          base_load_fg == o.base_load_fg &&
          base_load_pass == o.base_load_pass &&
          base_load_service_date_flag == o.base_load_service_date_flag &&
          base_load_url == o.base_load_url &&
          base_load_user == o.base_load_user &&
          beneficiary_age_limit == o.beneficiary_age_limit &&
          beneficiary_age_ex_code == o.beneficiary_age_ex_code &&
          benefit_cascade_ex_code == o.benefit_cascade_ex_code &&
          benefit_length == o.benefit_length &&
          bridged_tooth_ex_code == o.bridged_tooth_ex_code &&
          ca_s_segment_ben_match == o.ca_s_segment_ben_match &&
          cli_a_certificate_ex_code == o.cli_a_certificate_ex_code &&
          cm_o_installed == o.cm_o_installed &&
          cap_by_service_line == o.cap_by_service_line &&
          cap_disenroll_adj_reason == o.cap_disenroll_adj_reason &&
          cap_enroll_adj_reason == o.cap_enroll_adj_reason &&
          cap_enrolled_by == o.cap_enrolled_by &&
          cap_enrolled_thru == o.cap_enrolled_thru &&
          cap_in_accum == o.cap_in_accum &&
          capitated_service_ex_code == o.capitated_service_ex_code &&
          case_default_report == o.case_default_report &&
          cash_value_default == o.cash_value_default &&
          check_payee_address_flag == o.check_payee_address_flag &&
          check_stock_location == o.check_stock_location &&
          checks_max_post_date == o.checks_max_post_date &&
          city == o.city &&
          claim_upload_date == o.claim_upload_date &&
          claim_upload_file_location == o.claim_upload_file_location &&
          claim_upload_schedule == o.claim_upload_schedule &&
          claim_age_ex_code == o.claim_age_ex_code &&
          claim_allowed_billed_ex_code == o.claim_allowed_billed_ex_code &&
          claim_amt_ex_code == o.claim_amt_ex_code &&
          claim_auth_denied_ex_code == o.claim_auth_denied_ex_code &&
          claim_auth_details_err_ex == o.claim_auth_details_err_ex &&
          claim_auth_diff_mem_ex == o.claim_auth_diff_mem_ex &&
          claim_auth_diff_prov_ex == o.claim_auth_diff_prov_ex &&
          claim_auth_exceeded_ex_code == o.claim_auth_exceeded_ex_code &&
          claim_auth_invalid_date_ex == o.claim_auth_invalid_date_ex &&
          claim_auth_not_approved_ex == o.claim_auth_not_approved_ex &&
          claim_auth_proc_exceeded_ex_code == o.claim_auth_proc_exceeded_ex_code &&
          claim_auth_reqd_ex_code == o.claim_auth_reqd_ex_code &&
          claim_ben_not_found_ex_code == o.claim_ben_not_found_ex_code &&
          claim_cov_in_net_only_ex_code == o.claim_cov_in_net_only_ex_code &&
          claim_days_allowed == o.claim_days_allowed &&
          claim_dead_ex_code == o.claim_dead_ex_code &&
          claim_ded_credit_oon_used_ex_code == o.claim_ded_credit_oon_used_ex_code &&
          claim_ded_credit_ppo_used_ex_code == o.claim_ded_credit_ppo_used_ex_code &&
          claim_denied_ex_code == o.claim_denied_ex_code &&
          claim_diagnosis_age_ex_code == o.claim_diagnosis_age_ex_code &&
          claim_diagnosis_gender_ex_code == o.claim_diagnosis_gender_ex_code &&
          claim_dup_error_ex_code == o.claim_dup_error_ex_code &&
          claim_error_ex_code == o.claim_error_ex_code &&
          claim_exceed_daily_co_pay_max_ex_code == o.claim_exceed_daily_co_pay_max_ex_code &&
          claim_exceed_injury_ex_code == o.claim_exceed_injury_ex_code &&
          claim_exceed_lifetime_ex_code == o.claim_exceed_lifetime_ex_code &&
          claim_exceed_lifetime_oon_ex_code == o.claim_exceed_lifetime_oon_ex_code &&
          claim_exceed_lifetime_ppo_ex_code == o.claim_exceed_lifetime_ppo_ex_code &&
          claim_exceed_maximum_ex_code == o.claim_exceed_maximum_ex_code &&
          claim_exceed_per_diem_ex_code == o.claim_exceed_per_diem_ex_code &&
          claim_fee_sched_error_ex == o.claim_fee_sched_error_ex &&
          claim_lag_error_ex_code == o.claim_lag_error_ex_code &&
          claim_late_ex_code == o.claim_late_ex_code &&
          claim_life_benefit_met_ex_code == o.claim_life_benefit_met_ex_code &&
          claim_life_plan_met_ex_code == o.claim_life_plan_met_ex_code &&
          claim_no_prov_fee_sched == o.claim_no_prov_fee_sched &&
          claim_no_rate_fee_ex_code == o.claim_no_rate_fee_ex_code &&
          claim_not_adult_dependent == o.claim_not_adult_dependent &&
          claim_not_at_place_ex_code == o.claim_not_at_place_ex_code &&
          claim_not_by_prov_ex_code == o.claim_not_by_prov_ex_code &&
          claim_not_cov_ex_code == o.claim_not_cov_ex_code &&
          claim_not_enrolled_ex_code == o.claim_not_enrolled_ex_code &&
          claim_not_enrolled_ex_code_null_use_pre_post == o.claim_not_enrolled_ex_code_null_use_pre_post &&
          claim_not_enrolled_post_ex_code == o.claim_not_enrolled_post_ex_code &&
          claim_not_enrolled_pre_ex_code == o.claim_not_enrolled_pre_ex_code &&
          claim_not_student_ex_code == o.claim_not_student_ex_code &&
          claim_other_coverage_ex_code == o.claim_other_coverage_ex_code &&
          claim_over_max_ex_code == o.claim_over_max_ex_code &&
          claim_over_max_oon_ex_code == o.claim_over_max_oon_ex_code &&
          claim_over_max_ppo_ex_code == o.claim_over_max_ppo_ex_code &&
          claim_pend_age_max == o.claim_pend_age_max &&
          claim_pend_age_min == o.claim_pend_age_min &&
          claim_pend_amount == o.claim_pend_amount &&
          claim_procedure_age_ex_code == o.claim_procedure_age_ex_code &&
          claim_procedure_gender_ex_code == o.claim_procedure_gender_ex_code &&
          claim_service_date_range == o.claim_service_date_range &&
          claim_service_outside_enrollment_ex_code == o.claim_service_outside_enrollment_ex_code &&
          claim_splits_plan_year_ex_code == o.claim_splits_plan_year_ex_code &&
          class_length == o.class_length &&
          clear_auth_penalty_ex_code == o.clear_auth_penalty_ex_code &&
          client_id == o.client_id &&
          client_name == o.client_name &&
          co_ins_max_ex_code == o.co_ins_max_ex_code &&
          co_ins_max_ex_code_member == o.co_ins_max_ex_code_member &&
          co_pay_by_billed == o.co_pay_by_billed &&
          cogito_app_client_id == o.cogito_app_client_id &&
          cogito_app_client_secret == o.cogito_app_client_secret &&
          cogito_user_pool_id == o.cogito_user_pool_id &&
          combined_notes_report_fg == o.combined_notes_report_fg &&
          comm_disenroll_adj_reason == o.comm_disenroll_adj_reason &&
          comm_enroll_adj_reason == o.comm_enroll_adj_reason &&
          comm_enrolled_by == o.comm_enrolled_by &&
          comm_enrolled_thru == o.comm_enrolled_thru &&
          company_length == o.company_length &&
          company_short == o.company_short &&
          company_start_date == o.company_start_date &&
          context4_clm_ucr_pct == o.context4_clm_ucr_pct &&
          context4_clm_ucr_pct_oon == o.context4_clm_ucr_pct_oon &&
          context4_fee_selector == o.context4_fee_selector &&
          context4_fee_selector_oon == o.context4_fee_selector_oon &&
          context4_medicare_pct == o.context4_medicare_pct &&
          context4_medicare_pct_oon == o.context4_medicare_pct_oon &&
          context4_password == o.context4_password &&
          context4_payor_type == o.context4_payor_type &&
          context4_payor_type_oon == o.context4_payor_type_oon &&
          context4_pct_of_chg == o.context4_pct_of_chg &&
          context4_pct_of_chg_oon == o.context4_pct_of_chg_oon &&
          context4_plan_price_not_greater_billed_fg == o.context4_plan_price_not_greater_billed_fg &&
          context4_send_billing_address_fg == o.context4_send_billing_address_fg &&
          context4_user_id == o.context4_user_id &&
          context4_web_uri == o.context4_web_uri &&
          context4_web_uri_delete == o.context4_web_uri_delete &&
          copay_ex_code == o.copay_ex_code &&
          country_id == o.country_id &&
          credential_by_payee == o.credential_by_payee &&
          credentialing == o.credentialing &&
          crowned_tooth_ex_code == o.crowned_tooth_ex_code &&
          currency_format == o.currency_format &&
          d_b_version_date == o.d_b_version_date &&
          dr_g_schedule == o.dr_g_schedule &&
          database_version == o.database_version &&
          date_format == o.date_format &&
          deductible_ex_code == o.deductible_ex_code &&
          deductible_max_ex_code == o.deductible_max_ex_code &&
          deductible_max_ex_code_member == o.deductible_max_ex_code_member &&
          default_1099_flag == o.default_1099_flag &&
          default_auth_code == o.default_auth_code &&
          default_check_stock == o.default_check_stock &&
          default_currency_id == o.default_currency_id &&
          default_eob_report == o.default_eob_report &&
          default_federal_tax == o.default_federal_tax &&
          default_federal_tax_day_limit == o.default_federal_tax_day_limit &&
          default_federal_tax_pct == o.default_federal_tax_pct &&
          default_federal_wage_limit == o.default_federal_wage_limit &&
          default_id_card_request_type == o.default_id_card_request_type &&
          default_invoice_report_definition_key == o.default_invoice_report_definition_key &&
          default_login_sound == o.default_login_sound &&
          default_medicare_tax_day_limit == o.default_medicare_tax_day_limit &&
          default_medicare_wage_limit == o.default_medicare_wage_limit &&
          default_pay_date_range == o.default_pay_date_range &&
          default_payor_id == o.default_payor_id &&
          default_ss_tax_day_limit == o.default_ss_tax_day_limit &&
          default_ss_wage_limit == o.default_ss_wage_limit &&
          default_state_tax_day_limit == o.default_state_tax_day_limit &&
          default_state_wage_limit == o.default_state_wage_limit &&
          dental_atp_paid_date_type == o.dental_atp_paid_date_type &&
          diagnostic_code_type_default == o.diagnostic_code_type_default &&
          disallow_spec_char_in_plan_id == o.disallow_spec_char_in_plan_id &&
          disconnect_call_notes_from_claim_provider == o.disconnect_call_notes_from_claim_provider &&
          disenroll_adj_reason == o.disenroll_adj_reason &&
          disenroll_auth_code == o.disenroll_auth_code &&
          display_ppo_null_network == o.display_ppo_null_network &&
          division_length == o.division_length &&
          dup_password_days == o.dup_password_days &&
          duplicate_master_key == o.duplicate_master_key &&
          ed_i_installed == o.ed_i_installed &&
          eo_b_disclaimer == o.eo_b_disclaimer &&
          eo_b_report_location == o.eo_b_report_location &&
          e_r_place_of_service == o.e_r_place_of_service &&
          enforce_mfa == o.enforce_mfa &&
          enroll_adj_reason == o.enroll_adj_reason &&
          entry_date == o.entry_date &&
          entry_user == o.entry_user &&
          error_invalid_diag == o.error_invalid_diag &&
          error_invalid_proc == o.error_invalid_proc &&
          error_multiple_plan_years == o.error_multiple_plan_years &&
          error_paid_to_provider == o.error_paid_to_provider &&
          error_termed_provider == o.error_termed_provider &&
          exceed_exhaust_date_ex_code == o.exceed_exhaust_date_ex_code &&
          exceed_return_to_work_ex_code == o.exceed_return_to_work_ex_code &&
          exceeds_paid_through_ex_code == o.exceeds_paid_through_ex_code &&
          extended_term_default == o.extended_term_default &&
          fax_country_code == o.fax_country_code &&
          fax_number == o.fax_number &&
          federal_id == o.federal_id &&
          fee_sched_match_claim_year == o.fee_sched_match_claim_year &&
          fee_schedule_ex_codes_manual == o.fee_schedule_ex_codes_manual &&
          fee_schedule_exact_match_fg == o.fee_schedule_exact_match_fg &&
          filled_tooth_ex_code == o.filled_tooth_ex_code &&
          first_benefit_auto_selected_ex_code == o.first_benefit_auto_selected_ex_code &&
          flex_claim_after_grace_period_ex_code == o.flex_claim_after_grace_period_ex_code &&
          flex_claim_after_submit_period_ex_code == o.flex_claim_after_submit_period_ex_code &&
          flex_claim_funds_exhausted_ex_code == o.flex_claim_funds_exhausted_ex_code &&
          force_call_track_note == o.force_call_track_note &&
          force_claim_rec_date == o.force_claim_rec_date &&
          force_claim_sub_id == o.force_claim_sub_id &&
          force_latest_enrollment == o.force_latest_enrollment &&
          force_leading_zero_on_rev_code == o.force_leading_zero_on_rev_code &&
          full_backout_on_void_distribution == o.full_backout_on_void_distribution &&
          full_month_billing == o.full_month_billing &&
          generate_comm_date == o.generate_comm_date &&
          generate_comm_user == o.generate_comm_user &&
          generate_inv_date == o.generate_inv_date &&
          generate_inv_user == o.generate_inv_user &&
          generate_negative_inv == o.generate_negative_inv &&
          generate_prem_dist_after == o.generate_prem_dist_after &&
          global_cmu_id == o.global_cmu_id &&
          grace_logins == o.grace_logins &&
          group_length == o.group_length &&
          i_d_card_location == o.i_d_card_location &&
          iv_r_cs_country_code == o.iv_r_cs_country_code &&
          iv_r_cs_phone_number == o.iv_r_cs_phone_number &&
          ignore_care_management_hierarchy_fg == o.ignore_care_management_hierarchy_fg &&
          ignore_claim_funding_status_change_msg == o.ignore_claim_funding_status_change_msg &&
          inactive_payee_ex_code == o.inactive_payee_ex_code &&
          include_invalid_enrollments == o.include_invalid_enrollments &&
          inv_grace_period == o.inv_grace_period &&
          inv_grace_period_type == o.inv_grace_period_type &&
          invalid_diag_ex_code == o.invalid_diag_ex_code &&
          invalid_proc_ex_code == o.invalid_proc_ex_code &&
          invoice_close_adj_reason == o.invoice_close_adj_reason &&
          invoice_enrolled_by == o.invoice_enrolled_by &&
          invoice_enrolled_thru == o.invoice_enrolled_thru &&
          invoice_grace_ex_code == o.invoice_grace_ex_code &&
          invoice_grace_period == o.invoice_grace_period &&
          invoice_remit_account_key == o.invoice_remit_account_key &&
          invoice_remit_address1 == o.invoice_remit_address1 &&
          invoice_remit_address2 == o.invoice_remit_address2 &&
          invoice_remit_city == o.invoice_remit_city &&
          invoice_remit_country_code == o.invoice_remit_country_code &&
          invoice_remit_country_id == o.invoice_remit_country_id &&
          invoice_remit_name == o.invoice_remit_name &&
          invoice_remit_phone_number == o.invoice_remit_phone_number &&
          invoice_remit_state == o.invoice_remit_state &&
          invoice_remit_zip_code == o.invoice_remit_zip_code &&
          lag_time == o.lag_time &&
          last_age_disenroll == o.last_age_disenroll &&
          last_authorization == o.last_authorization &&
          last_billing == o.last_billing &&
          last_case_number == o.last_case_number &&
          last_check_batch == o.last_check_batch &&
          last_claim_number == o.last_claim_number &&
          last_day_worked_range == o.last_day_worked_range &&
          last_encounter == o.last_encounter &&
          last_invoice == o.last_invoice &&
          lock_auth_review == o.lock_auth_review &&
          lock_auth_review_all == o.lock_auth_review_all &&
          log_base_load_call == o.log_base_load_call &&
          logo_file == o.logo_file &&
          long_state_names == o.long_state_names &&
          mail_auth_mode == o.mail_auth_mode &&
          mail_password == o.mail_password &&
          mail_port == o.mail_port &&
          mail_server == o.mail_server &&
          mail_use_ssl == o.mail_use_ssl &&
          mail_user == o.mail_user &&
          medicare_on_benefit == o.medicare_on_benefit &&
          member_address_dob_not_reqd == o.member_address_dob_not_reqd &&
          member_match_by_name_birth_date == o.member_match_by_name_birth_date &&
          modifier_not_eff_ex_code == o.modifier_not_eff_ex_code &&
          multiple_auth_ex_code == o.multiple_auth_ex_code &&
          name == o.name &&
          network_does_not_match_repriced_network_ex_code == o.network_does_not_match_repriced_network_ex_code &&
          new_member_reason == o.new_member_reason &&
          note_attachment_db == o.note_attachment_db &&
          note_attachment_local_default == o.note_attachment_local_default &&
          note_attachment_remote_default == o.note_attachment_remote_default &&
          oo_p_max_ex_code == o.oo_p_max_ex_code &&
          oo_p_max_ex_code_member == o.oo_p_max_ex_code_member &&
          out_of_net_ex_code == o.out_of_net_ex_code &&
          overpayment_deduction_type == o.overpayment_deduction_type &&
          pc_p_only_ex_code == o.pc_p_only_ex_code &&
          partial_cap == o.partial_cap &&
          password_expiration == o.password_expiration &&
          password_minimum == o.password_minimum &&
          pay_period_start_date == o.pay_period_start_date &&
          payment_proration == o.payment_proration &&
          phone_country_code == o.phone_country_code &&
          phone_format == o.phone_format &&
          phone_number == o.phone_number &&
          place_code_not_setup_ex_code == o.place_code_not_setup_ex_code &&
          plan_benefit_override_network_id == o.plan_benefit_override_network_id &&
          plan_length == o.plan_length &&
          policy_forfeiture_grace_period == o.policy_forfeiture_grace_period &&
          policy_forfeiture_grace_period_type == o.policy_forfeiture_grace_period_type &&
          premium_proration == o.premium_proration &&
          prevent_suspense_release_by_process_user == o.prevent_suspense_release_by_process_user &&
          primary_account_key == o.primary_account_key &&
          process_auths_when_pended == o.process_auths_when_pended &&
          process_auto_cob == o.process_auto_cob &&
          processing_mode == o.processing_mode &&
          prof_atp_paid_date_type == o.prof_atp_paid_date_type &&
          prosthesis_tooth_ex_code == o.prosthesis_tooth_ex_code &&
          protect_alternate_id == o.protect_alternate_id &&
          provider_auth_exempt_procedure_ex_code == o.provider_auth_exempt_procedure_ex_code &&
          provider_not_active_auth_code == o.provider_not_active_auth_code &&
          pulled_tooth_ex_code == o.pulled_tooth_ex_code &&
          qp_a_method_1_ex_code == o.qp_a_method_1_ex_code &&
          qp_a_method_2_ex_code == o.qp_a_method_2_ex_code &&
          r_x_atp_paid_date_type == o.r_x_atp_paid_date_type &&
          reduced_paid_up_default == o.reduced_paid_up_default &&
          reins_split_claim == o.reins_split_claim &&
          repetitive_payment == o.repetitive_payment &&
          repriced_line == o.repriced_line &&
          request_id_card_prompt_enrollment == o.request_id_card_prompt_enrollment &&
          request_provider_email == o.request_provider_email &&
          request_reassess_email == o.request_reassess_email &&
          restrict_npi_federal_id == o.restrict_npi_federal_id &&
          return_to_work_range == o.return_to_work_range &&
          scanned_images_folder == o.scanned_images_folder &&
          set_paid_through == o.set_paid_through &&
          single_refund_check_batch == o.single_refund_check_batch &&
          state == o.state &&
          subscriber_id_format == o.subscriber_id_format &&
          subscriber_length == o.subscriber_length &&
          system_idle == o.system_idle &&
          tax_control_location == o.tax_control_location &&
          tax_on_adjudcation_date_fg == o.tax_on_adjudcation_date_fg &&
          temporary_save_criteria_count == o.temporary_save_criteria_count &&
          termed_provider_ex_code == o.termed_provider_ex_code &&
          toll_free_country_code == o.toll_free_country_code &&
          toll_free_phone_number == o.toll_free_phone_number &&
          tooth_activity_ex_code == o.tooth_activity_ex_code &&
          tooth_chart_type == o.tooth_chart_type &&
          u_b92_atp_paid_date_type == o.u_b92_atp_paid_date_type &&
          u_c_price_used_ex_code == o.u_c_price_used_ex_code &&
          u_c_unit_mulitply == o.u_c_unit_mulitply &&
          unassigned_provider == o.unassigned_provider &&
          update_date == o.update_date &&
          update_user == o.update_user &&
          use_greater_user_amount_limit_fg == o.use_greater_user_amount_limit_fg &&
          use_auth_over_unit_split == o.use_auth_over_unit_split &&
          use_change_data_capture == o.use_change_data_capture &&
          use_commission_cluster_hierarchy == o.use_commission_cluster_hierarchy &&
          use_currency == o.use_currency &&
          use_disability_from_date == o.use_disability_from_date &&
          use_expanded_notes == o.use_expanded_notes &&
          use_first_match_pricing == o.use_first_match_pricing &&
          use_other_name == o.use_other_name &&
          use_primary_diag_match == o.use_primary_diag_match &&
          use_primary_diag_match_capitation == o.use_primary_diag_match_capitation &&
          use_salary == o.use_salary &&
          use_tax_control == o.use_tax_control &&
          use_vba_software_2 == o.use_vba_software_2 &&
          use_vb_adjudicate_2 == o.use_vb_adjudicate_2 &&
          use_zip_code_auto_populate == o.use_zip_code_auto_populate &&
          vba_data_integration == o.vba_data_integration &&
          vba_data_integration_dbms == o.vba_data_integration_dbms &&
          vba_data_integration_db_parm == o.vba_data_integration_db_parm &&
          vba_data_integration_database == o.vba_data_integration_database &&
          vba_data_integration_server == o.vba_data_integration_server &&
          vba_gateway == o.vba_gateway &&
          vba_gateway_dbms == o.vba_gateway_dbms &&
          vba_gateway_db_parm == o.vba_gateway_db_parm &&
          vba_gateway_database == o.vba_gateway_database &&
          vba_gateway_sftp_host == o.vba_gateway_sftp_host &&
          vba_gateway_sftp_log_file == o.vba_gateway_sftp_log_file &&
          vba_gateway_sftp_mlst == o.vba_gateway_sftp_mlst &&
          vba_gateway_sftp_passive == o.vba_gateway_sftp_passive &&
          vba_gateway_sftp_password == o.vba_gateway_sftp_password &&
          vba_gateway_sftp_port == o.vba_gateway_sftp_port &&
          vba_gateway_sftp_protocol == o.vba_gateway_sftp_protocol &&
          vba_gateway_sftp_user == o.vba_gateway_sftp_user &&
          vba_gateway_server == o.vba_gateway_server &&
          vbap_i_adjudicate_client_code == o.vbap_i_adjudicate_client_code &&
          vbap_i_adjudicate_client_id == o.vbap_i_adjudicate_client_id &&
          vbap_i_adjudicate_database == o.vbap_i_adjudicate_database &&
          vbap_i_claim_queue_url == o.vbap_i_claim_queue_url &&
          vbap_i_client_code == o.vbap_i_client_code &&
          vbap_i_field_masking_enabled == o.vbap_i_field_masking_enabled &&
          vbap_i_ip_whitelist == o.vbap_i_ip_whitelist &&
          vba_report_event_timer == o.vba_report_event_timer &&
          vba_report_mail_auth_mode == o.vba_report_mail_auth_mode &&
          vba_report_mail_password == o.vba_report_mail_password &&
          vba_report_mail_port == o.vba_report_mail_port &&
          vba_report_mail_server == o.vba_report_mail_server &&
          vba_report_mail_use_ssl == o.vba_report_mail_use_ssl &&
          vba_report_mail_user == o.vba_report_mail_user &&
          vba_report_so_count == o.vba_report_so_count &&
          vba_report_series_timer == o.vba_report_series_timer &&
          vba_report_status == o.vba_report_status &&
          vba_report_timer == o.vba_report_timer &&
          vb_adjudicate_so_count == o.vb_adjudicate_so_count &&
          vb_adjudicate_status == o.vb_adjudicate_status &&
          vb_adjudicate_timer == o.vb_adjudicate_timer &&
          validate_federal_id_on_auth == o.validate_federal_id_on_auth &&
          validate_provider_on_auth == o.validate_provider_on_auth &&
          void_backout_use_current_date == o.void_backout_use_current_date &&
          volume_max_met_ex_code == o.volume_max_met_ex_code &&
          volume_min_met_ex_code == o.volume_min_met_ex_code &&
          workflow_execute_count == o.workflow_execute_count &&
          zelis_eob_code_not_found_ex_code == o.zelis_eob_code_not_found_ex_code &&
          zelis_edit_code_not_found_ex_code == o.zelis_edit_code_not_found_ex_code &&
          zelis_in_network_ex_code == o.zelis_in_network_ex_code &&
          zelis_login == o.zelis_login &&
          zelis_password == o.zelis_password &&
          zelis_poll == o.zelis_poll &&
          zelis_poll_testing == o.zelis_poll_testing &&
          zelis_url == o.zelis_url &&
          zip_code == o.zip_code &&
          use_vb_adjudicate_benefit_matching == o.use_vb_adjudicate_benefit_matching &&
          display_member_primary_network == o.display_member_primary_network &&
          disable_ghostscript == o.disable_ghostscript &&
          vba_software_end_date == o.vba_software_end_date &&
          open_invoice_paid_through == o.open_invoice_paid_through &&
          claim_returned_to_batch_ex_code == o.claim_returned_to_batch_ex_code
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [key_value, ap_c_schedule, as_o_percentage, accident_review_ex_code, accident_review_plan_benefit_ex_code, additional_invoice_rates, address, address2, adv_password_req, age_disenroll_reason, allow_apostrophe_in_name, allow_checks_post_date, allow_claim_benefit_override, allow_max_at_subscriber, allow_oop_on_override, allow_zero_billed, anesthesia_by_fee_sched, anesthesia_round_precision, anesthesia_round_type, apply_multiple_benefit_ex_code_manual, auth_review_full_path, auth_review_object, auth_code_closed, auth_code_pay_amt_zero, auth_code_reopen, auth_code_under_auth_amt, auth_over_unit_split_ex_code, auth_penalty_ex_code, auto_adj_return_to_batch, auto_pay_capitated_claims, auto_process_adjustment_backout, auto_term_plan_on_gateway_request, b_r_domain_name, b_r_site_name, b_r_site_secret, b_r_site_user, base_load_fg, base_load_pass, base_load_service_date_flag, base_load_url, base_load_user, beneficiary_age_limit, beneficiary_age_ex_code, benefit_cascade_ex_code, benefit_length, bridged_tooth_ex_code, ca_s_segment_ben_match, cli_a_certificate_ex_code, cm_o_installed, cap_by_service_line, cap_disenroll_adj_reason, cap_enroll_adj_reason, cap_enrolled_by, cap_enrolled_thru, cap_in_accum, capitated_service_ex_code, case_default_report, cash_value_default, check_payee_address_flag, check_stock_location, checks_max_post_date, city, claim_upload_date, claim_upload_file_location, claim_upload_schedule, claim_age_ex_code, claim_allowed_billed_ex_code, claim_amt_ex_code, claim_auth_denied_ex_code, claim_auth_details_err_ex, claim_auth_diff_mem_ex, claim_auth_diff_prov_ex, claim_auth_exceeded_ex_code, claim_auth_invalid_date_ex, claim_auth_not_approved_ex, claim_auth_proc_exceeded_ex_code, claim_auth_reqd_ex_code, claim_ben_not_found_ex_code, claim_cov_in_net_only_ex_code, claim_days_allowed, claim_dead_ex_code, claim_ded_credit_oon_used_ex_code, claim_ded_credit_ppo_used_ex_code, claim_denied_ex_code, claim_diagnosis_age_ex_code, claim_diagnosis_gender_ex_code, claim_dup_error_ex_code, claim_error_ex_code, claim_exceed_daily_co_pay_max_ex_code, claim_exceed_injury_ex_code, claim_exceed_lifetime_ex_code, claim_exceed_lifetime_oon_ex_code, claim_exceed_lifetime_ppo_ex_code, claim_exceed_maximum_ex_code, claim_exceed_per_diem_ex_code, claim_fee_sched_error_ex, claim_lag_error_ex_code, claim_late_ex_code, claim_life_benefit_met_ex_code, claim_life_plan_met_ex_code, claim_no_prov_fee_sched, claim_no_rate_fee_ex_code, claim_not_adult_dependent, claim_not_at_place_ex_code, claim_not_by_prov_ex_code, claim_not_cov_ex_code, claim_not_enrolled_ex_code, claim_not_enrolled_ex_code_null_use_pre_post, claim_not_enrolled_post_ex_code, claim_not_enrolled_pre_ex_code, claim_not_student_ex_code, claim_other_coverage_ex_code, claim_over_max_ex_code, claim_over_max_oon_ex_code, claim_over_max_ppo_ex_code, claim_pend_age_max, claim_pend_age_min, claim_pend_amount, claim_procedure_age_ex_code, claim_procedure_gender_ex_code, claim_service_date_range, claim_service_outside_enrollment_ex_code, claim_splits_plan_year_ex_code, class_length, clear_auth_penalty_ex_code, client_id, client_name, co_ins_max_ex_code, co_ins_max_ex_code_member, co_pay_by_billed, cogito_app_client_id, cogito_app_client_secret, cogito_user_pool_id, combined_notes_report_fg, comm_disenroll_adj_reason, comm_enroll_adj_reason, comm_enrolled_by, comm_enrolled_thru, company_length, company_short, company_start_date, context4_clm_ucr_pct, context4_clm_ucr_pct_oon, context4_fee_selector, context4_fee_selector_oon, context4_medicare_pct, context4_medicare_pct_oon, context4_password, context4_payor_type, context4_payor_type_oon, context4_pct_of_chg, context4_pct_of_chg_oon, context4_plan_price_not_greater_billed_fg, context4_send_billing_address_fg, context4_user_id, context4_web_uri, context4_web_uri_delete, copay_ex_code, country_id, credential_by_payee, credentialing, crowned_tooth_ex_code, currency_format, d_b_version_date, dr_g_schedule, database_version, date_format, deductible_ex_code, deductible_max_ex_code, deductible_max_ex_code_member, default_1099_flag, default_auth_code, default_check_stock, default_currency_id, default_eob_report, default_federal_tax, default_federal_tax_day_limit, default_federal_tax_pct, default_federal_wage_limit, default_id_card_request_type, default_invoice_report_definition_key, default_login_sound, default_medicare_tax_day_limit, default_medicare_wage_limit, default_pay_date_range, default_payor_id, default_ss_tax_day_limit, default_ss_wage_limit, default_state_tax_day_limit, default_state_wage_limit, dental_atp_paid_date_type, diagnostic_code_type_default, disallow_spec_char_in_plan_id, disconnect_call_notes_from_claim_provider, disenroll_adj_reason, disenroll_auth_code, display_ppo_null_network, division_length, dup_password_days, duplicate_master_key, ed_i_installed, eo_b_disclaimer, eo_b_report_location, e_r_place_of_service, enforce_mfa, enroll_adj_reason, entry_date, entry_user, error_invalid_diag, error_invalid_proc, error_multiple_plan_years, error_paid_to_provider, error_termed_provider, exceed_exhaust_date_ex_code, exceed_return_to_work_ex_code, exceeds_paid_through_ex_code, extended_term_default, fax_country_code, fax_number, federal_id, fee_sched_match_claim_year, fee_schedule_ex_codes_manual, fee_schedule_exact_match_fg, filled_tooth_ex_code, first_benefit_auto_selected_ex_code, flex_claim_after_grace_period_ex_code, flex_claim_after_submit_period_ex_code, flex_claim_funds_exhausted_ex_code, force_call_track_note, force_claim_rec_date, force_claim_sub_id, force_latest_enrollment, force_leading_zero_on_rev_code, full_backout_on_void_distribution, full_month_billing, generate_comm_date, generate_comm_user, generate_inv_date, generate_inv_user, generate_negative_inv, generate_prem_dist_after, global_cmu_id, grace_logins, group_length, i_d_card_location, iv_r_cs_country_code, iv_r_cs_phone_number, ignore_care_management_hierarchy_fg, ignore_claim_funding_status_change_msg, inactive_payee_ex_code, include_invalid_enrollments, inv_grace_period, inv_grace_period_type, invalid_diag_ex_code, invalid_proc_ex_code, invoice_close_adj_reason, invoice_enrolled_by, invoice_enrolled_thru, invoice_grace_ex_code, invoice_grace_period, invoice_remit_account_key, invoice_remit_address1, invoice_remit_address2, invoice_remit_city, invoice_remit_country_code, invoice_remit_country_id, invoice_remit_name, invoice_remit_phone_number, invoice_remit_state, invoice_remit_zip_code, lag_time, last_age_disenroll, last_authorization, last_billing, last_case_number, last_check_batch, last_claim_number, last_day_worked_range, last_encounter, last_invoice, lock_auth_review, lock_auth_review_all, log_base_load_call, logo_file, long_state_names, mail_auth_mode, mail_password, mail_port, mail_server, mail_use_ssl, mail_user, medicare_on_benefit, member_address_dob_not_reqd, member_match_by_name_birth_date, modifier_not_eff_ex_code, multiple_auth_ex_code, name, network_does_not_match_repriced_network_ex_code, new_member_reason, note_attachment_db, note_attachment_local_default, note_attachment_remote_default, oo_p_max_ex_code, oo_p_max_ex_code_member, out_of_net_ex_code, overpayment_deduction_type, pc_p_only_ex_code, partial_cap, password_expiration, password_minimum, pay_period_start_date, payment_proration, phone_country_code, phone_format, phone_number, place_code_not_setup_ex_code, plan_benefit_override_network_id, plan_length, policy_forfeiture_grace_period, policy_forfeiture_grace_period_type, premium_proration, prevent_suspense_release_by_process_user, primary_account_key, process_auths_when_pended, process_auto_cob, processing_mode, prof_atp_paid_date_type, prosthesis_tooth_ex_code, protect_alternate_id, provider_auth_exempt_procedure_ex_code, provider_not_active_auth_code, pulled_tooth_ex_code, qp_a_method_1_ex_code, qp_a_method_2_ex_code, r_x_atp_paid_date_type, reduced_paid_up_default, reins_split_claim, repetitive_payment, repriced_line, request_id_card_prompt_enrollment, request_provider_email, request_reassess_email, restrict_npi_federal_id, return_to_work_range, scanned_images_folder, set_paid_through, single_refund_check_batch, state, subscriber_id_format, subscriber_length, system_idle, tax_control_location, tax_on_adjudcation_date_fg, temporary_save_criteria_count, termed_provider_ex_code, toll_free_country_code, toll_free_phone_number, tooth_activity_ex_code, tooth_chart_type, u_b92_atp_paid_date_type, u_c_price_used_ex_code, u_c_unit_mulitply, unassigned_provider, update_date, update_user, use_greater_user_amount_limit_fg, use_auth_over_unit_split, use_change_data_capture, use_commission_cluster_hierarchy, use_currency, use_disability_from_date, use_expanded_notes, use_first_match_pricing, use_other_name, use_primary_diag_match, use_primary_diag_match_capitation, use_salary, use_tax_control, use_vba_software_2, use_vb_adjudicate_2, use_zip_code_auto_populate, vba_data_integration, vba_data_integration_dbms, vba_data_integration_db_parm, vba_data_integration_database, vba_data_integration_server, vba_gateway, vba_gateway_dbms, vba_gateway_db_parm, vba_gateway_database, vba_gateway_sftp_host, vba_gateway_sftp_log_file, vba_gateway_sftp_mlst, vba_gateway_sftp_passive, vba_gateway_sftp_password, vba_gateway_sftp_port, vba_gateway_sftp_protocol, vba_gateway_sftp_user, vba_gateway_server, vbap_i_adjudicate_client_code, vbap_i_adjudicate_client_id, vbap_i_adjudicate_database, vbap_i_claim_queue_url, vbap_i_client_code, vbap_i_field_masking_enabled, vbap_i_ip_whitelist, vba_report_event_timer, vba_report_mail_auth_mode, vba_report_mail_password, vba_report_mail_port, vba_report_mail_server, vba_report_mail_use_ssl, vba_report_mail_user, vba_report_so_count, vba_report_series_timer, vba_report_status, vba_report_timer, vb_adjudicate_so_count, vb_adjudicate_status, vb_adjudicate_timer, validate_federal_id_on_auth, validate_provider_on_auth, void_backout_use_current_date, volume_max_met_ex_code, volume_min_met_ex_code, workflow_execute_count, zelis_eob_code_not_found_ex_code, zelis_edit_code_not_found_ex_code, zelis_in_network_ex_code, zelis_login, zelis_password, zelis_poll, zelis_poll_testing, zelis_url, zip_code, use_vb_adjudicate_benefit_matching, display_member_primary_network, disable_ghostscript, vba_software_end_date, open_invoice_paid_through, claim_returned_to_batch_ex_code].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = Vba.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
