=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'date'
require 'time'

module Vba
  class ReportQueueDetail
    # ID of the report queue detail. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :report_queue_detail_key

    # Date record was first added to the system
    attr_accessor :entry_date

    # User that first added the record to the system
    attr_accessor :entry_user

    # File Name of the file to export.
    attr_accessor :queue_export_file_name

    # Type of Export of the Queue.
    attr_accessor :queue_export_type

    # Used to store a file used by the Queue.
    attr_accessor :queue_file

    # Result code used when Queue completes.
    attr_accessor :queue_result

    # Date the Result was updated.
    attr_accessor :queue_result_date

    # Used to store XML used by the Queue.
    attr_accessor :queue_xml

    # ID of the report definition.
    attr_accessor :report_definition_key

    # ID of the report queue. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :report_queue_key

    # Identifies which report library the User wishes to choose from.
    attr_accessor :report_library

    # Indicates which report will be used with the automation step.
    attr_accessor :report_object

    # Utilize the file explorer to choose a location where the report will be saved.
    attr_accessor :report_save_location

    # File type used to save.
    attr_accessor :report_save_type

    # Date the record was last updated in the system
    attr_accessor :update_date

    # User that last updated the record in the system
    attr_accessor :update_user

    # Identifies which category the document belongs to.
    attr_accessor :vba_gateway_document_category

    # Field1 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field1

    # Field2 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field2

    # Field3 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field3

    # Field4 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field4

    # Field5 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field5

    # File of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_file

    # Folder of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_folder

    # Name of the document.
    attr_accessor :vba_gateway_document_id

    # Short description of the document.
    attr_accessor :vba_gateway_document_label

    # Identifies the type associated with the document.
    attr_accessor :vba_gateway_document_type

    # Value1 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value1

    # Value2 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value2

    # Value3 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value3

    # Value4 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value4

    # Value5 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value5

    # ID of the Gateway User who will receive the chosen document.
    attr_accessor :vba_gateway_user_id

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'report_queue_detail_key' => :'reportQueueDetail_Key',
        :'entry_date' => :'entry_Date',
        :'entry_user' => :'entry_User',
        :'queue_export_file_name' => :'queue_Export_File_Name',
        :'queue_export_type' => :'queue_Export_Type',
        :'queue_file' => :'queue_File',
        :'queue_result' => :'queue_Result',
        :'queue_result_date' => :'queue_Result_Date',
        :'queue_xml' => :'queue_XML',
        :'report_definition_key' => :'reportDefinition_Key',
        :'report_queue_key' => :'reportQueue_Key',
        :'report_library' => :'report_Library',
        :'report_object' => :'report_Object',
        :'report_save_location' => :'report_Save_Location',
        :'report_save_type' => :'report_Save_Type',
        :'update_date' => :'update_Date',
        :'update_user' => :'update_User',
        :'vba_gateway_document_category' => :'vbaGateway_Document_Category',
        :'vba_gateway_document_field1' => :'vbaGateway_Document_Field1',
        :'vba_gateway_document_field2' => :'vbaGateway_Document_Field2',
        :'vba_gateway_document_field3' => :'vbaGateway_Document_Field3',
        :'vba_gateway_document_field4' => :'vbaGateway_Document_Field4',
        :'vba_gateway_document_field5' => :'vbaGateway_Document_Field5',
        :'vba_gateway_document_file' => :'vbaGateway_Document_File',
        :'vba_gateway_document_folder' => :'vbaGateway_Document_Folder',
        :'vba_gateway_document_id' => :'vbaGateway_Document_ID',
        :'vba_gateway_document_label' => :'vbaGateway_Document_Label',
        :'vba_gateway_document_type' => :'vbaGateway_Document_Type',
        :'vba_gateway_document_value1' => :'vbaGateway_Document_Value1',
        :'vba_gateway_document_value2' => :'vbaGateway_Document_Value2',
        :'vba_gateway_document_value3' => :'vbaGateway_Document_Value3',
        :'vba_gateway_document_value4' => :'vbaGateway_Document_Value4',
        :'vba_gateway_document_value5' => :'vbaGateway_Document_Value5',
        :'vba_gateway_user_id' => :'vbaGateway_UserID'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'report_queue_detail_key' => :'Integer',
        :'entry_date' => :'Time',
        :'entry_user' => :'String',
        :'queue_export_file_name' => :'String',
        :'queue_export_type' => :'String',
        :'queue_file' => :'String',
        :'queue_result' => :'String',
        :'queue_result_date' => :'Time',
        :'queue_xml' => :'String',
        :'report_definition_key' => :'Integer',
        :'report_queue_key' => :'Integer',
        :'report_library' => :'String',
        :'report_object' => :'String',
        :'report_save_location' => :'String',
        :'report_save_type' => :'String',
        :'update_date' => :'Time',
        :'update_user' => :'String',
        :'vba_gateway_document_category' => :'String',
        :'vba_gateway_document_field1' => :'String',
        :'vba_gateway_document_field2' => :'String',
        :'vba_gateway_document_field3' => :'String',
        :'vba_gateway_document_field4' => :'String',
        :'vba_gateway_document_field5' => :'String',
        :'vba_gateway_document_file' => :'String',
        :'vba_gateway_document_folder' => :'String',
        :'vba_gateway_document_id' => :'String',
        :'vba_gateway_document_label' => :'String',
        :'vba_gateway_document_type' => :'String',
        :'vba_gateway_document_value1' => :'String',
        :'vba_gateway_document_value2' => :'String',
        :'vba_gateway_document_value3' => :'String',
        :'vba_gateway_document_value4' => :'String',
        :'vba_gateway_document_value5' => :'String',
        :'vba_gateway_user_id' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'entry_user',
        :'queue_export_file_name',
        :'queue_export_type',
        :'queue_file',
        :'queue_result',
        :'queue_result_date',
        :'queue_xml',
        :'report_definition_key',
        :'report_library',
        :'report_object',
        :'report_save_location',
        :'report_save_type',
        :'update_user',
        :'vba_gateway_document_category',
        :'vba_gateway_document_field1',
        :'vba_gateway_document_field2',
        :'vba_gateway_document_field3',
        :'vba_gateway_document_field4',
        :'vba_gateway_document_field5',
        :'vba_gateway_document_file',
        :'vba_gateway_document_folder',
        :'vba_gateway_document_id',
        :'vba_gateway_document_label',
        :'vba_gateway_document_type',
        :'vba_gateway_document_value1',
        :'vba_gateway_document_value2',
        :'vba_gateway_document_value3',
        :'vba_gateway_document_value4',
        :'vba_gateway_document_value5',
        :'vba_gateway_user_id'
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `Vba::ReportQueueDetail` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `Vba::ReportQueueDetail`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'report_queue_detail_key')
        self.report_queue_detail_key = attributes[:'report_queue_detail_key']
      else
        self.report_queue_detail_key = nil
      end

      if attributes.key?(:'entry_date')
        self.entry_date = attributes[:'entry_date']
      end

      if attributes.key?(:'entry_user')
        self.entry_user = attributes[:'entry_user']
      end

      if attributes.key?(:'queue_export_file_name')
        self.queue_export_file_name = attributes[:'queue_export_file_name']
      end

      if attributes.key?(:'queue_export_type')
        self.queue_export_type = attributes[:'queue_export_type']
      end

      if attributes.key?(:'queue_file')
        self.queue_file = attributes[:'queue_file']
      end

      if attributes.key?(:'queue_result')
        self.queue_result = attributes[:'queue_result']
      end

      if attributes.key?(:'queue_result_date')
        self.queue_result_date = attributes[:'queue_result_date']
      end

      if attributes.key?(:'queue_xml')
        self.queue_xml = attributes[:'queue_xml']
      end

      if attributes.key?(:'report_definition_key')
        self.report_definition_key = attributes[:'report_definition_key']
      end

      if attributes.key?(:'report_queue_key')
        self.report_queue_key = attributes[:'report_queue_key']
      else
        self.report_queue_key = nil
      end

      if attributes.key?(:'report_library')
        self.report_library = attributes[:'report_library']
      end

      if attributes.key?(:'report_object')
        self.report_object = attributes[:'report_object']
      end

      if attributes.key?(:'report_save_location')
        self.report_save_location = attributes[:'report_save_location']
      end

      if attributes.key?(:'report_save_type')
        self.report_save_type = attributes[:'report_save_type']
      end

      if attributes.key?(:'update_date')
        self.update_date = attributes[:'update_date']
      end

      if attributes.key?(:'update_user')
        self.update_user = attributes[:'update_user']
      end

      if attributes.key?(:'vba_gateway_document_category')
        self.vba_gateway_document_category = attributes[:'vba_gateway_document_category']
      end

      if attributes.key?(:'vba_gateway_document_field1')
        self.vba_gateway_document_field1 = attributes[:'vba_gateway_document_field1']
      end

      if attributes.key?(:'vba_gateway_document_field2')
        self.vba_gateway_document_field2 = attributes[:'vba_gateway_document_field2']
      end

      if attributes.key?(:'vba_gateway_document_field3')
        self.vba_gateway_document_field3 = attributes[:'vba_gateway_document_field3']
      end

      if attributes.key?(:'vba_gateway_document_field4')
        self.vba_gateway_document_field4 = attributes[:'vba_gateway_document_field4']
      end

      if attributes.key?(:'vba_gateway_document_field5')
        self.vba_gateway_document_field5 = attributes[:'vba_gateway_document_field5']
      end

      if attributes.key?(:'vba_gateway_document_file')
        self.vba_gateway_document_file = attributes[:'vba_gateway_document_file']
      end

      if attributes.key?(:'vba_gateway_document_folder')
        self.vba_gateway_document_folder = attributes[:'vba_gateway_document_folder']
      end

      if attributes.key?(:'vba_gateway_document_id')
        self.vba_gateway_document_id = attributes[:'vba_gateway_document_id']
      end

      if attributes.key?(:'vba_gateway_document_label')
        self.vba_gateway_document_label = attributes[:'vba_gateway_document_label']
      end

      if attributes.key?(:'vba_gateway_document_type')
        self.vba_gateway_document_type = attributes[:'vba_gateway_document_type']
      end

      if attributes.key?(:'vba_gateway_document_value1')
        self.vba_gateway_document_value1 = attributes[:'vba_gateway_document_value1']
      end

      if attributes.key?(:'vba_gateway_document_value2')
        self.vba_gateway_document_value2 = attributes[:'vba_gateway_document_value2']
      end

      if attributes.key?(:'vba_gateway_document_value3')
        self.vba_gateway_document_value3 = attributes[:'vba_gateway_document_value3']
      end

      if attributes.key?(:'vba_gateway_document_value4')
        self.vba_gateway_document_value4 = attributes[:'vba_gateway_document_value4']
      end

      if attributes.key?(:'vba_gateway_document_value5')
        self.vba_gateway_document_value5 = attributes[:'vba_gateway_document_value5']
      end

      if attributes.key?(:'vba_gateway_user_id')
        self.vba_gateway_user_id = attributes[:'vba_gateway_user_id']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @report_queue_detail_key.nil?
        invalid_properties.push('invalid value for "report_queue_detail_key", report_queue_detail_key cannot be nil.')
      end

      if !@entry_user.nil? && @entry_user.to_s.length > 20
        invalid_properties.push('invalid value for "entry_user", the character length must be smaller than or equal to 20.')
      end

      if !@queue_export_file_name.nil? && @queue_export_file_name.to_s.length > 128
        invalid_properties.push('invalid value for "queue_export_file_name", the character length must be smaller than or equal to 128.')
      end

      if !@queue_export_type.nil? && @queue_export_type.to_s.length > 32
        invalid_properties.push('invalid value for "queue_export_type", the character length must be smaller than or equal to 32.')
      end

      if !@queue_result.nil? && @queue_result.to_s.length > 32
        invalid_properties.push('invalid value for "queue_result", the character length must be smaller than or equal to 32.')
      end

      if @report_queue_key.nil?
        invalid_properties.push('invalid value for "report_queue_key", report_queue_key cannot be nil.')
      end

      if !@report_library.nil? && @report_library.to_s.length > 128
        invalid_properties.push('invalid value for "report_library", the character length must be smaller than or equal to 128.')
      end

      if !@report_object.nil? && @report_object.to_s.length > 64
        invalid_properties.push('invalid value for "report_object", the character length must be smaller than or equal to 64.')
      end

      if !@report_save_location.nil? && @report_save_location.to_s.length > 256
        invalid_properties.push('invalid value for "report_save_location", the character length must be smaller than or equal to 256.')
      end

      if !@report_save_type.nil? && @report_save_type.to_s.length > 32
        invalid_properties.push('invalid value for "report_save_type", the character length must be smaller than or equal to 32.')
      end

      if !@update_user.nil? && @update_user.to_s.length > 20
        invalid_properties.push('invalid value for "update_user", the character length must be smaller than or equal to 20.')
      end

      if !@vba_gateway_document_category.nil? && @vba_gateway_document_category.to_s.length > 32
        invalid_properties.push('invalid value for "vba_gateway_document_category", the character length must be smaller than or equal to 32.')
      end

      if !@vba_gateway_document_field1.nil? && @vba_gateway_document_field1.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field1", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field2.nil? && @vba_gateway_document_field2.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field2", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field3.nil? && @vba_gateway_document_field3.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field3", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field4.nil? && @vba_gateway_document_field4.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field4", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field5.nil? && @vba_gateway_document_field5.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field5", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_file.nil? && @vba_gateway_document_file.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_file", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_folder.nil? && @vba_gateway_document_folder.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_folder", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_id.nil? && @vba_gateway_document_id.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_id", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_label.nil? && @vba_gateway_document_label.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_label", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_type.nil? && @vba_gateway_document_type.to_s.length > 32
        invalid_properties.push('invalid value for "vba_gateway_document_type", the character length must be smaller than or equal to 32.')
      end

      if !@vba_gateway_document_value1.nil? && @vba_gateway_document_value1.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value1", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value2.nil? && @vba_gateway_document_value2.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value2", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value3.nil? && @vba_gateway_document_value3.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value3", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value4.nil? && @vba_gateway_document_value4.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value4", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value5.nil? && @vba_gateway_document_value5.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value5", the character length must be smaller than or equal to 128.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @report_queue_detail_key.nil?
      return false if !@entry_user.nil? && @entry_user.to_s.length > 20
      return false if !@queue_export_file_name.nil? && @queue_export_file_name.to_s.length > 128
      return false if !@queue_export_type.nil? && @queue_export_type.to_s.length > 32
      return false if !@queue_result.nil? && @queue_result.to_s.length > 32
      return false if @report_queue_key.nil?
      return false if !@report_library.nil? && @report_library.to_s.length > 128
      return false if !@report_object.nil? && @report_object.to_s.length > 64
      return false if !@report_save_location.nil? && @report_save_location.to_s.length > 256
      return false if !@report_save_type.nil? && @report_save_type.to_s.length > 32
      return false if !@update_user.nil? && @update_user.to_s.length > 20
      return false if !@vba_gateway_document_category.nil? && @vba_gateway_document_category.to_s.length > 32
      return false if !@vba_gateway_document_field1.nil? && @vba_gateway_document_field1.to_s.length > 64
      return false if !@vba_gateway_document_field2.nil? && @vba_gateway_document_field2.to_s.length > 64
      return false if !@vba_gateway_document_field3.nil? && @vba_gateway_document_field3.to_s.length > 64
      return false if !@vba_gateway_document_field4.nil? && @vba_gateway_document_field4.to_s.length > 64
      return false if !@vba_gateway_document_field5.nil? && @vba_gateway_document_field5.to_s.length > 64
      return false if !@vba_gateway_document_file.nil? && @vba_gateway_document_file.to_s.length > 256
      return false if !@vba_gateway_document_folder.nil? && @vba_gateway_document_folder.to_s.length > 256
      return false if !@vba_gateway_document_id.nil? && @vba_gateway_document_id.to_s.length > 64
      return false if !@vba_gateway_document_label.nil? && @vba_gateway_document_label.to_s.length > 256
      return false if !@vba_gateway_document_type.nil? && @vba_gateway_document_type.to_s.length > 32
      return false if !@vba_gateway_document_value1.nil? && @vba_gateway_document_value1.to_s.length > 128
      return false if !@vba_gateway_document_value2.nil? && @vba_gateway_document_value2.to_s.length > 128
      return false if !@vba_gateway_document_value3.nil? && @vba_gateway_document_value3.to_s.length > 128
      return false if !@vba_gateway_document_value4.nil? && @vba_gateway_document_value4.to_s.length > 128
      return false if !@vba_gateway_document_value5.nil? && @vba_gateway_document_value5.to_s.length > 128
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] report_queue_detail_key Value to be assigned
    def report_queue_detail_key=(report_queue_detail_key)
      if report_queue_detail_key.nil?
        fail ArgumentError, 'report_queue_detail_key cannot be nil'
      end

      @report_queue_detail_key = report_queue_detail_key
    end

    # Custom attribute writer method with validation
    # @param [Object] entry_user Value to be assigned
    def entry_user=(entry_user)
      if !entry_user.nil? && entry_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "entry_user", the character length must be smaller than or equal to 20.'
      end

      @entry_user = entry_user
    end

    # Custom attribute writer method with validation
    # @param [Object] queue_export_file_name Value to be assigned
    def queue_export_file_name=(queue_export_file_name)
      if !queue_export_file_name.nil? && queue_export_file_name.to_s.length > 128
        fail ArgumentError, 'invalid value for "queue_export_file_name", the character length must be smaller than or equal to 128.'
      end

      @queue_export_file_name = queue_export_file_name
    end

    # Custom attribute writer method with validation
    # @param [Object] queue_export_type Value to be assigned
    def queue_export_type=(queue_export_type)
      if !queue_export_type.nil? && queue_export_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "queue_export_type", the character length must be smaller than or equal to 32.'
      end

      @queue_export_type = queue_export_type
    end

    # Custom attribute writer method with validation
    # @param [Object] queue_result Value to be assigned
    def queue_result=(queue_result)
      if !queue_result.nil? && queue_result.to_s.length > 32
        fail ArgumentError, 'invalid value for "queue_result", the character length must be smaller than or equal to 32.'
      end

      @queue_result = queue_result
    end

    # Custom attribute writer method with validation
    # @param [Object] report_queue_key Value to be assigned
    def report_queue_key=(report_queue_key)
      if report_queue_key.nil?
        fail ArgumentError, 'report_queue_key cannot be nil'
      end

      @report_queue_key = report_queue_key
    end

    # Custom attribute writer method with validation
    # @param [Object] report_library Value to be assigned
    def report_library=(report_library)
      if !report_library.nil? && report_library.to_s.length > 128
        fail ArgumentError, 'invalid value for "report_library", the character length must be smaller than or equal to 128.'
      end

      @report_library = report_library
    end

    # Custom attribute writer method with validation
    # @param [Object] report_object Value to be assigned
    def report_object=(report_object)
      if !report_object.nil? && report_object.to_s.length > 64
        fail ArgumentError, 'invalid value for "report_object", the character length must be smaller than or equal to 64.'
      end

      @report_object = report_object
    end

    # Custom attribute writer method with validation
    # @param [Object] report_save_location Value to be assigned
    def report_save_location=(report_save_location)
      if !report_save_location.nil? && report_save_location.to_s.length > 256
        fail ArgumentError, 'invalid value for "report_save_location", the character length must be smaller than or equal to 256.'
      end

      @report_save_location = report_save_location
    end

    # Custom attribute writer method with validation
    # @param [Object] report_save_type Value to be assigned
    def report_save_type=(report_save_type)
      if !report_save_type.nil? && report_save_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "report_save_type", the character length must be smaller than or equal to 32.'
      end

      @report_save_type = report_save_type
    end

    # Custom attribute writer method with validation
    # @param [Object] update_user Value to be assigned
    def update_user=(update_user)
      if !update_user.nil? && update_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "update_user", the character length must be smaller than or equal to 20.'
      end

      @update_user = update_user
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_category Value to be assigned
    def vba_gateway_document_category=(vba_gateway_document_category)
      if !vba_gateway_document_category.nil? && vba_gateway_document_category.to_s.length > 32
        fail ArgumentError, 'invalid value for "vba_gateway_document_category", the character length must be smaller than or equal to 32.'
      end

      @vba_gateway_document_category = vba_gateway_document_category
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field1 Value to be assigned
    def vba_gateway_document_field1=(vba_gateway_document_field1)
      if !vba_gateway_document_field1.nil? && vba_gateway_document_field1.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field1", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field1 = vba_gateway_document_field1
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field2 Value to be assigned
    def vba_gateway_document_field2=(vba_gateway_document_field2)
      if !vba_gateway_document_field2.nil? && vba_gateway_document_field2.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field2", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field2 = vba_gateway_document_field2
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field3 Value to be assigned
    def vba_gateway_document_field3=(vba_gateway_document_field3)
      if !vba_gateway_document_field3.nil? && vba_gateway_document_field3.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field3", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field3 = vba_gateway_document_field3
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field4 Value to be assigned
    def vba_gateway_document_field4=(vba_gateway_document_field4)
      if !vba_gateway_document_field4.nil? && vba_gateway_document_field4.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field4", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field4 = vba_gateway_document_field4
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field5 Value to be assigned
    def vba_gateway_document_field5=(vba_gateway_document_field5)
      if !vba_gateway_document_field5.nil? && vba_gateway_document_field5.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field5", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field5 = vba_gateway_document_field5
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_file Value to be assigned
    def vba_gateway_document_file=(vba_gateway_document_file)
      if !vba_gateway_document_file.nil? && vba_gateway_document_file.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_file", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_file = vba_gateway_document_file
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_folder Value to be assigned
    def vba_gateway_document_folder=(vba_gateway_document_folder)
      if !vba_gateway_document_folder.nil? && vba_gateway_document_folder.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_folder", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_folder = vba_gateway_document_folder
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_id Value to be assigned
    def vba_gateway_document_id=(vba_gateway_document_id)
      if !vba_gateway_document_id.nil? && vba_gateway_document_id.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_id", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_id = vba_gateway_document_id
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_label Value to be assigned
    def vba_gateway_document_label=(vba_gateway_document_label)
      if !vba_gateway_document_label.nil? && vba_gateway_document_label.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_label", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_label = vba_gateway_document_label
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_type Value to be assigned
    def vba_gateway_document_type=(vba_gateway_document_type)
      if !vba_gateway_document_type.nil? && vba_gateway_document_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "vba_gateway_document_type", the character length must be smaller than or equal to 32.'
      end

      @vba_gateway_document_type = vba_gateway_document_type
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value1 Value to be assigned
    def vba_gateway_document_value1=(vba_gateway_document_value1)
      if !vba_gateway_document_value1.nil? && vba_gateway_document_value1.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value1", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value1 = vba_gateway_document_value1
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value2 Value to be assigned
    def vba_gateway_document_value2=(vba_gateway_document_value2)
      if !vba_gateway_document_value2.nil? && vba_gateway_document_value2.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value2", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value2 = vba_gateway_document_value2
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value3 Value to be assigned
    def vba_gateway_document_value3=(vba_gateway_document_value3)
      if !vba_gateway_document_value3.nil? && vba_gateway_document_value3.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value3", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value3 = vba_gateway_document_value3
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value4 Value to be assigned
    def vba_gateway_document_value4=(vba_gateway_document_value4)
      if !vba_gateway_document_value4.nil? && vba_gateway_document_value4.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value4", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value4 = vba_gateway_document_value4
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value5 Value to be assigned
    def vba_gateway_document_value5=(vba_gateway_document_value5)
      if !vba_gateway_document_value5.nil? && vba_gateway_document_value5.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value5", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value5 = vba_gateway_document_value5
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          report_queue_detail_key == o.report_queue_detail_key &&
          entry_date == o.entry_date &&
          entry_user == o.entry_user &&
          queue_export_file_name == o.queue_export_file_name &&
          queue_export_type == o.queue_export_type &&
          queue_file == o.queue_file &&
          queue_result == o.queue_result &&
          queue_result_date == o.queue_result_date &&
          queue_xml == o.queue_xml &&
          report_definition_key == o.report_definition_key &&
          report_queue_key == o.report_queue_key &&
          report_library == o.report_library &&
          report_object == o.report_object &&
          report_save_location == o.report_save_location &&
          report_save_type == o.report_save_type &&
          update_date == o.update_date &&
          update_user == o.update_user &&
          vba_gateway_document_category == o.vba_gateway_document_category &&
          vba_gateway_document_field1 == o.vba_gateway_document_field1 &&
          vba_gateway_document_field2 == o.vba_gateway_document_field2 &&
          vba_gateway_document_field3 == o.vba_gateway_document_field3 &&
          vba_gateway_document_field4 == o.vba_gateway_document_field4 &&
          vba_gateway_document_field5 == o.vba_gateway_document_field5 &&
          vba_gateway_document_file == o.vba_gateway_document_file &&
          vba_gateway_document_folder == o.vba_gateway_document_folder &&
          vba_gateway_document_id == o.vba_gateway_document_id &&
          vba_gateway_document_label == o.vba_gateway_document_label &&
          vba_gateway_document_type == o.vba_gateway_document_type &&
          vba_gateway_document_value1 == o.vba_gateway_document_value1 &&
          vba_gateway_document_value2 == o.vba_gateway_document_value2 &&
          vba_gateway_document_value3 == o.vba_gateway_document_value3 &&
          vba_gateway_document_value4 == o.vba_gateway_document_value4 &&
          vba_gateway_document_value5 == o.vba_gateway_document_value5 &&
          vba_gateway_user_id == o.vba_gateway_user_id
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [report_queue_detail_key, entry_date, entry_user, queue_export_file_name, queue_export_type, queue_file, queue_result, queue_result_date, queue_xml, report_definition_key, report_queue_key, report_library, report_object, report_save_location, report_save_type, update_date, update_user, vba_gateway_document_category, vba_gateway_document_field1, vba_gateway_document_field2, vba_gateway_document_field3, vba_gateway_document_field4, vba_gateway_document_field5, vba_gateway_document_file, vba_gateway_document_folder, vba_gateway_document_id, vba_gateway_document_label, vba_gateway_document_type, vba_gateway_document_value1, vba_gateway_document_value2, vba_gateway_document_value3, vba_gateway_document_value4, vba_gateway_document_value5, vba_gateway_user_id].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = Vba.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
