=begin
#VBASoftware

#APIs for VBASoftware

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'date'
require 'time'

module Vba
  class ReportSeriesStep
    # ID of the report series step. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :report_series_step_key

    # Body text of the email.
    attr_accessor :e_mail_body

    # Identifies the sender email.
    attr_accessor :e_mail_from

    # Indicates the server over which the email will be sent.
    attr_accessor :e_mail_server

    # Subject line of the email.
    attr_accessor :e_mail_subject

    # Indentifies the receiver email.
    attr_accessor :e_mail_to

    # Indicates the date when the event will stop occurring.
    attr_accessor :end_date

    # Indicates how the event will end.
    attr_accessor :end_option

    # Indicates at what time the event will cease to occur on the defined date(s).
    attr_accessor :end_time

    # Date record was first added to the system
    attr_accessor :entry_date

    # User that first added the record to the system
    attr_accessor :entry_user

    # Indicates the priority of the event.
    attr_accessor :event_priority

    # PowerBuilder object used to process.
    attr_accessor :event_processor

    # Describes the subject of the event.
    attr_accessor :event_subject

    # Identifies the Group that will be notified by the event.
    attr_accessor :event_user_group_key

    # Identifies the User who will be notified by the event.
    attr_accessor :event_user_id

    # Month the event occurs.
    attr_accessor :frequency

    # Day the event occurs.
    attr_accessor :frequency_factor

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :friday

    # Interval Options are Days, Weekdays, Day in Month, Relative Day in Month, Date, or date in Month.
    attr_accessor :interval_option

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :monday

    # Identifies which category that the note belongs to.
    attr_accessor :note_category

    # Body text of the note.
    attr_accessor :note_data

    # Subject line of the note.
    attr_accessor :note_subject

    # Day of the week the event occurs.
    attr_accessor :relative_frequency

    # ID of the report definition utilized in this step.
    attr_accessor :report_definition_key

    # ID of the report series to which the step belongs. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :report_series_key

    # Object of the Report_Criteria.
    attr_accessor :report_criteria_object

    # Identifies which report library the User wishes to choose from.
    attr_accessor :report_library

    # Indicates which report will be used with the automation step.
    attr_accessor :report_object

    # Indicates which method will be used to print the selected report.
    attr_accessor :report_printer

    # Folder the report is saved to.
    attr_accessor :report_save_location

    # Retry of the Retry. Note: The database will apply a default value of `0` for this field if a value is not provided.
    attr_accessor :_retry

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :saturday

    # Indicates how often the event will occur. The interval will determine which options are available for the event schedule.
    attr_accessor :schedule_interval

    # Indicates the date when the event will begin occurring by the defined recurrence options.
    attr_accessor :start_date

    # Indicates at what time the event will occur on the defined date(s).
    attr_accessor :start_time

    # Date when the step will occur.
    attr_accessor :step_date

    # Identifies the number of the selected time period that the step will be delayed by.
    attr_accessor :step_delay

    # Identifies the time period that the step will be delayed by.
    attr_accessor :step_delay_type

    # Description of the report series step.
    attr_accessor :step_description

    # Field used to flag a record for processing by Process Automation.
    attr_accessor :step_key

    # Generic column to store meta data.
    attr_accessor :step_meta_data

    # Identifies the sequence number assigned to the step. This number dictates which order the report series steps will occur (ascending order). Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :step_seq

    # Identifies the type associated with this step.
    attr_accessor :step_type

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :sunday

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :thursday

    # Number of occurrences that will take place before the event ends.
    attr_accessor :total_occurrences

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :tuesday

    # Date the record was last updated in the system
    attr_accessor :update_date

    # User that last updated the record in the system
    attr_accessor :update_user

    # Identifies which category the document belongs to.
    attr_accessor :vba_gateway_document_category

    # Field1 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field1

    # Field2 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field2

    # Field3 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field3

    # Field4 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field4

    # Field5 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_field5

    # File of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_file

    # Folder of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_folder

    # Name of the document.
    attr_accessor :vba_gateway_document_id

    # Short description of the document.
    attr_accessor :vba_gateway_document_label

    # Identifies the type associated with the document.
    attr_accessor :vba_gateway_document_type

    # Value1 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value1

    # Value2 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value2

    # Value3 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value3

    # Value4 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value4

    # Value5 of the VBAGateway_Document.
    attr_accessor :vba_gateway_document_value5

    # ID of the Gateway User who will receive the chosen document.
    attr_accessor :vba_gateway_user_id

    # Indicates that the event should occur on this day of the week. Note: This field is marked as NOT NULL in the database and therefore required by the API.
    attr_accessor :wednesday

    # For FAX step type, this indicates the fax number to send the fax to.
    attr_accessor :fax_number

    # For TEXT step type, this indicates the phone number to send the text to.
    attr_accessor :text_number

    # For TEXT step type, this indicates the message to send in the text.
    attr_accessor :text_message

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'report_series_step_key' => :'reportSeriesStep_Key',
        :'e_mail_body' => :'eMail_Body',
        :'e_mail_from' => :'eMail_From',
        :'e_mail_server' => :'eMail_Server',
        :'e_mail_subject' => :'eMail_Subject',
        :'e_mail_to' => :'eMail_To',
        :'end_date' => :'end_Date',
        :'end_option' => :'end_Option',
        :'end_time' => :'end_Time',
        :'entry_date' => :'entry_Date',
        :'entry_user' => :'entry_User',
        :'event_priority' => :'event_Priority',
        :'event_processor' => :'event_Processor',
        :'event_subject' => :'event_Subject',
        :'event_user_group_key' => :'event_UserGroup_Key',
        :'event_user_id' => :'event_User_ID',
        :'frequency' => :'frequency',
        :'frequency_factor' => :'frequency_Factor',
        :'friday' => :'friday',
        :'interval_option' => :'interval_Option',
        :'monday' => :'monday',
        :'note_category' => :'note_Category',
        :'note_data' => :'note_Data',
        :'note_subject' => :'note_Subject',
        :'relative_frequency' => :'relative_Frequency',
        :'report_definition_key' => :'reportDefinition_Key',
        :'report_series_key' => :'reportSeries_Key',
        :'report_criteria_object' => :'report_Criteria_Object',
        :'report_library' => :'report_Library',
        :'report_object' => :'report_Object',
        :'report_printer' => :'report_Printer',
        :'report_save_location' => :'report_Save_Location',
        :'_retry' => :'retry',
        :'saturday' => :'saturday',
        :'schedule_interval' => :'schedule_Interval',
        :'start_date' => :'start_Date',
        :'start_time' => :'start_Time',
        :'step_date' => :'step_Date',
        :'step_delay' => :'step_Delay',
        :'step_delay_type' => :'step_Delay_Type',
        :'step_description' => :'step_Description',
        :'step_key' => :'step_Key',
        :'step_meta_data' => :'step_MetaData',
        :'step_seq' => :'step_Seq',
        :'step_type' => :'step_Type',
        :'sunday' => :'sunday',
        :'thursday' => :'thursday',
        :'total_occurrences' => :'total_Occurrences',
        :'tuesday' => :'tuesday',
        :'update_date' => :'update_Date',
        :'update_user' => :'update_User',
        :'vba_gateway_document_category' => :'vbaGateway_Document_Category',
        :'vba_gateway_document_field1' => :'vbaGateway_Document_Field1',
        :'vba_gateway_document_field2' => :'vbaGateway_Document_Field2',
        :'vba_gateway_document_field3' => :'vbaGateway_Document_Field3',
        :'vba_gateway_document_field4' => :'vbaGateway_Document_Field4',
        :'vba_gateway_document_field5' => :'vbaGateway_Document_Field5',
        :'vba_gateway_document_file' => :'vbaGateway_Document_File',
        :'vba_gateway_document_folder' => :'vbaGateway_Document_Folder',
        :'vba_gateway_document_id' => :'vbaGateway_Document_ID',
        :'vba_gateway_document_label' => :'vbaGateway_Document_Label',
        :'vba_gateway_document_type' => :'vbaGateway_Document_Type',
        :'vba_gateway_document_value1' => :'vbaGateway_Document_Value1',
        :'vba_gateway_document_value2' => :'vbaGateway_Document_Value2',
        :'vba_gateway_document_value3' => :'vbaGateway_Document_Value3',
        :'vba_gateway_document_value4' => :'vbaGateway_Document_Value4',
        :'vba_gateway_document_value5' => :'vbaGateway_Document_Value5',
        :'vba_gateway_user_id' => :'vbaGateway_UserID',
        :'wednesday' => :'wednesday',
        :'fax_number' => :'fax_Number',
        :'text_number' => :'text_Number',
        :'text_message' => :'text_Message'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'report_series_step_key' => :'Integer',
        :'e_mail_body' => :'String',
        :'e_mail_from' => :'String',
        :'e_mail_server' => :'String',
        :'e_mail_subject' => :'String',
        :'e_mail_to' => :'String',
        :'end_date' => :'Time',
        :'end_option' => :'Integer',
        :'end_time' => :'Time',
        :'entry_date' => :'Time',
        :'entry_user' => :'String',
        :'event_priority' => :'String',
        :'event_processor' => :'String',
        :'event_subject' => :'String',
        :'event_user_group_key' => :'Integer',
        :'event_user_id' => :'String',
        :'frequency' => :'Integer',
        :'frequency_factor' => :'Integer',
        :'friday' => :'Boolean',
        :'interval_option' => :'Integer',
        :'monday' => :'Boolean',
        :'note_category' => :'String',
        :'note_data' => :'String',
        :'note_subject' => :'String',
        :'relative_frequency' => :'Integer',
        :'report_definition_key' => :'Integer',
        :'report_series_key' => :'Integer',
        :'report_criteria_object' => :'String',
        :'report_library' => :'String',
        :'report_object' => :'String',
        :'report_printer' => :'String',
        :'report_save_location' => :'String',
        :'_retry' => :'Integer',
        :'saturday' => :'Boolean',
        :'schedule_interval' => :'Integer',
        :'start_date' => :'Time',
        :'start_time' => :'Time',
        :'step_date' => :'Time',
        :'step_delay' => :'Integer',
        :'step_delay_type' => :'String',
        :'step_description' => :'String',
        :'step_key' => :'Integer',
        :'step_meta_data' => :'String',
        :'step_seq' => :'Integer',
        :'step_type' => :'String',
        :'sunday' => :'Boolean',
        :'thursday' => :'Boolean',
        :'total_occurrences' => :'Integer',
        :'tuesday' => :'Boolean',
        :'update_date' => :'Time',
        :'update_user' => :'String',
        :'vba_gateway_document_category' => :'String',
        :'vba_gateway_document_field1' => :'String',
        :'vba_gateway_document_field2' => :'String',
        :'vba_gateway_document_field3' => :'String',
        :'vba_gateway_document_field4' => :'String',
        :'vba_gateway_document_field5' => :'String',
        :'vba_gateway_document_file' => :'String',
        :'vba_gateway_document_folder' => :'String',
        :'vba_gateway_document_id' => :'String',
        :'vba_gateway_document_label' => :'String',
        :'vba_gateway_document_type' => :'String',
        :'vba_gateway_document_value1' => :'String',
        :'vba_gateway_document_value2' => :'String',
        :'vba_gateway_document_value3' => :'String',
        :'vba_gateway_document_value4' => :'String',
        :'vba_gateway_document_value5' => :'String',
        :'vba_gateway_user_id' => :'String',
        :'wednesday' => :'Boolean',
        :'fax_number' => :'String',
        :'text_number' => :'String',
        :'text_message' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'e_mail_body',
        :'e_mail_from',
        :'e_mail_server',
        :'e_mail_subject',
        :'e_mail_to',
        :'end_date',
        :'end_option',
        :'end_time',
        :'entry_user',
        :'event_priority',
        :'event_processor',
        :'event_subject',
        :'event_user_group_key',
        :'event_user_id',
        :'frequency',
        :'frequency_factor',
        :'interval_option',
        :'note_category',
        :'note_data',
        :'note_subject',
        :'relative_frequency',
        :'report_definition_key',
        :'report_criteria_object',
        :'report_library',
        :'report_object',
        :'report_printer',
        :'report_save_location',
        :'_retry',
        :'schedule_interval',
        :'start_date',
        :'start_time',
        :'step_date',
        :'step_delay',
        :'step_delay_type',
        :'step_description',
        :'step_key',
        :'step_meta_data',
        :'step_type',
        :'total_occurrences',
        :'update_user',
        :'vba_gateway_document_category',
        :'vba_gateway_document_field1',
        :'vba_gateway_document_field2',
        :'vba_gateway_document_field3',
        :'vba_gateway_document_field4',
        :'vba_gateway_document_field5',
        :'vba_gateway_document_file',
        :'vba_gateway_document_folder',
        :'vba_gateway_document_id',
        :'vba_gateway_document_label',
        :'vba_gateway_document_type',
        :'vba_gateway_document_value1',
        :'vba_gateway_document_value2',
        :'vba_gateway_document_value3',
        :'vba_gateway_document_value4',
        :'vba_gateway_document_value5',
        :'vba_gateway_user_id',
        :'fax_number',
        :'text_number',
        :'text_message'
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `Vba::ReportSeriesStep` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `Vba::ReportSeriesStep`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'report_series_step_key')
        self.report_series_step_key = attributes[:'report_series_step_key']
      else
        self.report_series_step_key = nil
      end

      if attributes.key?(:'e_mail_body')
        self.e_mail_body = attributes[:'e_mail_body']
      end

      if attributes.key?(:'e_mail_from')
        self.e_mail_from = attributes[:'e_mail_from']
      end

      if attributes.key?(:'e_mail_server')
        self.e_mail_server = attributes[:'e_mail_server']
      end

      if attributes.key?(:'e_mail_subject')
        self.e_mail_subject = attributes[:'e_mail_subject']
      end

      if attributes.key?(:'e_mail_to')
        self.e_mail_to = attributes[:'e_mail_to']
      end

      if attributes.key?(:'end_date')
        self.end_date = attributes[:'end_date']
      end

      if attributes.key?(:'end_option')
        self.end_option = attributes[:'end_option']
      end

      if attributes.key?(:'end_time')
        self.end_time = attributes[:'end_time']
      end

      if attributes.key?(:'entry_date')
        self.entry_date = attributes[:'entry_date']
      end

      if attributes.key?(:'entry_user')
        self.entry_user = attributes[:'entry_user']
      end

      if attributes.key?(:'event_priority')
        self.event_priority = attributes[:'event_priority']
      end

      if attributes.key?(:'event_processor')
        self.event_processor = attributes[:'event_processor']
      end

      if attributes.key?(:'event_subject')
        self.event_subject = attributes[:'event_subject']
      end

      if attributes.key?(:'event_user_group_key')
        self.event_user_group_key = attributes[:'event_user_group_key']
      end

      if attributes.key?(:'event_user_id')
        self.event_user_id = attributes[:'event_user_id']
      end

      if attributes.key?(:'frequency')
        self.frequency = attributes[:'frequency']
      end

      if attributes.key?(:'frequency_factor')
        self.frequency_factor = attributes[:'frequency_factor']
      end

      if attributes.key?(:'friday')
        self.friday = attributes[:'friday']
      else
        self.friday = nil
      end

      if attributes.key?(:'interval_option')
        self.interval_option = attributes[:'interval_option']
      end

      if attributes.key?(:'monday')
        self.monday = attributes[:'monday']
      else
        self.monday = nil
      end

      if attributes.key?(:'note_category')
        self.note_category = attributes[:'note_category']
      end

      if attributes.key?(:'note_data')
        self.note_data = attributes[:'note_data']
      end

      if attributes.key?(:'note_subject')
        self.note_subject = attributes[:'note_subject']
      end

      if attributes.key?(:'relative_frequency')
        self.relative_frequency = attributes[:'relative_frequency']
      end

      if attributes.key?(:'report_definition_key')
        self.report_definition_key = attributes[:'report_definition_key']
      end

      if attributes.key?(:'report_series_key')
        self.report_series_key = attributes[:'report_series_key']
      else
        self.report_series_key = nil
      end

      if attributes.key?(:'report_criteria_object')
        self.report_criteria_object = attributes[:'report_criteria_object']
      end

      if attributes.key?(:'report_library')
        self.report_library = attributes[:'report_library']
      end

      if attributes.key?(:'report_object')
        self.report_object = attributes[:'report_object']
      end

      if attributes.key?(:'report_printer')
        self.report_printer = attributes[:'report_printer']
      end

      if attributes.key?(:'report_save_location')
        self.report_save_location = attributes[:'report_save_location']
      end

      if attributes.key?(:'_retry')
        self._retry = attributes[:'_retry']
      end

      if attributes.key?(:'saturday')
        self.saturday = attributes[:'saturday']
      else
        self.saturday = nil
      end

      if attributes.key?(:'schedule_interval')
        self.schedule_interval = attributes[:'schedule_interval']
      end

      if attributes.key?(:'start_date')
        self.start_date = attributes[:'start_date']
      end

      if attributes.key?(:'start_time')
        self.start_time = attributes[:'start_time']
      end

      if attributes.key?(:'step_date')
        self.step_date = attributes[:'step_date']
      end

      if attributes.key?(:'step_delay')
        self.step_delay = attributes[:'step_delay']
      end

      if attributes.key?(:'step_delay_type')
        self.step_delay_type = attributes[:'step_delay_type']
      end

      if attributes.key?(:'step_description')
        self.step_description = attributes[:'step_description']
      end

      if attributes.key?(:'step_key')
        self.step_key = attributes[:'step_key']
      end

      if attributes.key?(:'step_meta_data')
        self.step_meta_data = attributes[:'step_meta_data']
      end

      if attributes.key?(:'step_seq')
        self.step_seq = attributes[:'step_seq']
      else
        self.step_seq = nil
      end

      if attributes.key?(:'step_type')
        self.step_type = attributes[:'step_type']
      end

      if attributes.key?(:'sunday')
        self.sunday = attributes[:'sunday']
      else
        self.sunday = nil
      end

      if attributes.key?(:'thursday')
        self.thursday = attributes[:'thursday']
      else
        self.thursday = nil
      end

      if attributes.key?(:'total_occurrences')
        self.total_occurrences = attributes[:'total_occurrences']
      end

      if attributes.key?(:'tuesday')
        self.tuesday = attributes[:'tuesday']
      else
        self.tuesday = nil
      end

      if attributes.key?(:'update_date')
        self.update_date = attributes[:'update_date']
      end

      if attributes.key?(:'update_user')
        self.update_user = attributes[:'update_user']
      end

      if attributes.key?(:'vba_gateway_document_category')
        self.vba_gateway_document_category = attributes[:'vba_gateway_document_category']
      end

      if attributes.key?(:'vba_gateway_document_field1')
        self.vba_gateway_document_field1 = attributes[:'vba_gateway_document_field1']
      end

      if attributes.key?(:'vba_gateway_document_field2')
        self.vba_gateway_document_field2 = attributes[:'vba_gateway_document_field2']
      end

      if attributes.key?(:'vba_gateway_document_field3')
        self.vba_gateway_document_field3 = attributes[:'vba_gateway_document_field3']
      end

      if attributes.key?(:'vba_gateway_document_field4')
        self.vba_gateway_document_field4 = attributes[:'vba_gateway_document_field4']
      end

      if attributes.key?(:'vba_gateway_document_field5')
        self.vba_gateway_document_field5 = attributes[:'vba_gateway_document_field5']
      end

      if attributes.key?(:'vba_gateway_document_file')
        self.vba_gateway_document_file = attributes[:'vba_gateway_document_file']
      end

      if attributes.key?(:'vba_gateway_document_folder')
        self.vba_gateway_document_folder = attributes[:'vba_gateway_document_folder']
      end

      if attributes.key?(:'vba_gateway_document_id')
        self.vba_gateway_document_id = attributes[:'vba_gateway_document_id']
      end

      if attributes.key?(:'vba_gateway_document_label')
        self.vba_gateway_document_label = attributes[:'vba_gateway_document_label']
      end

      if attributes.key?(:'vba_gateway_document_type')
        self.vba_gateway_document_type = attributes[:'vba_gateway_document_type']
      end

      if attributes.key?(:'vba_gateway_document_value1')
        self.vba_gateway_document_value1 = attributes[:'vba_gateway_document_value1']
      end

      if attributes.key?(:'vba_gateway_document_value2')
        self.vba_gateway_document_value2 = attributes[:'vba_gateway_document_value2']
      end

      if attributes.key?(:'vba_gateway_document_value3')
        self.vba_gateway_document_value3 = attributes[:'vba_gateway_document_value3']
      end

      if attributes.key?(:'vba_gateway_document_value4')
        self.vba_gateway_document_value4 = attributes[:'vba_gateway_document_value4']
      end

      if attributes.key?(:'vba_gateway_document_value5')
        self.vba_gateway_document_value5 = attributes[:'vba_gateway_document_value5']
      end

      if attributes.key?(:'vba_gateway_user_id')
        self.vba_gateway_user_id = attributes[:'vba_gateway_user_id']
      end

      if attributes.key?(:'wednesday')
        self.wednesday = attributes[:'wednesday']
      else
        self.wednesday = nil
      end

      if attributes.key?(:'fax_number')
        self.fax_number = attributes[:'fax_number']
      end

      if attributes.key?(:'text_number')
        self.text_number = attributes[:'text_number']
      end

      if attributes.key?(:'text_message')
        self.text_message = attributes[:'text_message']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @report_series_step_key.nil?
        invalid_properties.push('invalid value for "report_series_step_key", report_series_step_key cannot be nil.')
      end

      if !@e_mail_body.nil? && @e_mail_body.to_s.length > 4000
        invalid_properties.push('invalid value for "e_mail_body", the character length must be smaller than or equal to 4000.')
      end

      if !@e_mail_from.nil? && @e_mail_from.to_s.length > 128
        invalid_properties.push('invalid value for "e_mail_from", the character length must be smaller than or equal to 128.')
      end

      if !@e_mail_server.nil? && @e_mail_server.to_s.length > 128
        invalid_properties.push('invalid value for "e_mail_server", the character length must be smaller than or equal to 128.')
      end

      if !@e_mail_subject.nil? && @e_mail_subject.to_s.length > 256
        invalid_properties.push('invalid value for "e_mail_subject", the character length must be smaller than or equal to 256.')
      end

      if !@e_mail_to.nil? && @e_mail_to.to_s.length > 128
        invalid_properties.push('invalid value for "e_mail_to", the character length must be smaller than or equal to 128.')
      end

      if !@entry_user.nil? && @entry_user.to_s.length > 20
        invalid_properties.push('invalid value for "entry_user", the character length must be smaller than or equal to 20.')
      end

      if !@event_priority.nil? && @event_priority.to_s.length > 32
        invalid_properties.push('invalid value for "event_priority", the character length must be smaller than or equal to 32.')
      end

      if !@event_processor.nil? && @event_processor.to_s.length > 64
        invalid_properties.push('invalid value for "event_processor", the character length must be smaller than or equal to 64.')
      end

      if !@event_subject.nil? && @event_subject.to_s.length > 256
        invalid_properties.push('invalid value for "event_subject", the character length must be smaller than or equal to 256.')
      end

      if !@event_user_id.nil? && @event_user_id.to_s.length > 16
        invalid_properties.push('invalid value for "event_user_id", the character length must be smaller than or equal to 16.')
      end

      if @friday.nil?
        invalid_properties.push('invalid value for "friday", friday cannot be nil.')
      end

      if @monday.nil?
        invalid_properties.push('invalid value for "monday", monday cannot be nil.')
      end

      if !@note_category.nil? && @note_category.to_s.length > 8
        invalid_properties.push('invalid value for "note_category", the character length must be smaller than or equal to 8.')
      end

      if !@note_data.nil? && @note_data.to_s.length > 4000
        invalid_properties.push('invalid value for "note_data", the character length must be smaller than or equal to 4000.')
      end

      if !@note_subject.nil? && @note_subject.to_s.length > 64
        invalid_properties.push('invalid value for "note_subject", the character length must be smaller than or equal to 64.')
      end

      if @report_series_key.nil?
        invalid_properties.push('invalid value for "report_series_key", report_series_key cannot be nil.')
      end

      if !@report_criteria_object.nil? && @report_criteria_object.to_s.length > 64
        invalid_properties.push('invalid value for "report_criteria_object", the character length must be smaller than or equal to 64.')
      end

      if !@report_library.nil? && @report_library.to_s.length > 128
        invalid_properties.push('invalid value for "report_library", the character length must be smaller than or equal to 128.')
      end

      if !@report_object.nil? && @report_object.to_s.length > 64
        invalid_properties.push('invalid value for "report_object", the character length must be smaller than or equal to 64.')
      end

      if !@report_printer.nil? && @report_printer.to_s.length > 128
        invalid_properties.push('invalid value for "report_printer", the character length must be smaller than or equal to 128.')
      end

      if !@report_save_location.nil? && @report_save_location.to_s.length > 256
        invalid_properties.push('invalid value for "report_save_location", the character length must be smaller than or equal to 256.')
      end

      if @saturday.nil?
        invalid_properties.push('invalid value for "saturday", saturday cannot be nil.')
      end

      if !@step_delay_type.nil? && @step_delay_type.to_s.length > 32
        invalid_properties.push('invalid value for "step_delay_type", the character length must be smaller than or equal to 32.')
      end

      if !@step_description.nil? && @step_description.to_s.length > 512
        invalid_properties.push('invalid value for "step_description", the character length must be smaller than or equal to 512.')
      end

      if !@step_meta_data.nil? && @step_meta_data.to_s.length > 512
        invalid_properties.push('invalid value for "step_meta_data", the character length must be smaller than or equal to 512.')
      end

      if @step_seq.nil?
        invalid_properties.push('invalid value for "step_seq", step_seq cannot be nil.')
      end

      if !@step_type.nil? && @step_type.to_s.length > 32
        invalid_properties.push('invalid value for "step_type", the character length must be smaller than or equal to 32.')
      end

      if @sunday.nil?
        invalid_properties.push('invalid value for "sunday", sunday cannot be nil.')
      end

      if @thursday.nil?
        invalid_properties.push('invalid value for "thursday", thursday cannot be nil.')
      end

      if @tuesday.nil?
        invalid_properties.push('invalid value for "tuesday", tuesday cannot be nil.')
      end

      if !@update_user.nil? && @update_user.to_s.length > 20
        invalid_properties.push('invalid value for "update_user", the character length must be smaller than or equal to 20.')
      end

      if !@vba_gateway_document_category.nil? && @vba_gateway_document_category.to_s.length > 32
        invalid_properties.push('invalid value for "vba_gateway_document_category", the character length must be smaller than or equal to 32.')
      end

      if !@vba_gateway_document_field1.nil? && @vba_gateway_document_field1.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field1", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field2.nil? && @vba_gateway_document_field2.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field2", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field3.nil? && @vba_gateway_document_field3.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field3", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field4.nil? && @vba_gateway_document_field4.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field4", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_field5.nil? && @vba_gateway_document_field5.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_field5", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_file.nil? && @vba_gateway_document_file.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_file", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_folder.nil? && @vba_gateway_document_folder.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_folder", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_id.nil? && @vba_gateway_document_id.to_s.length > 64
        invalid_properties.push('invalid value for "vba_gateway_document_id", the character length must be smaller than or equal to 64.')
      end

      if !@vba_gateway_document_label.nil? && @vba_gateway_document_label.to_s.length > 256
        invalid_properties.push('invalid value for "vba_gateway_document_label", the character length must be smaller than or equal to 256.')
      end

      if !@vba_gateway_document_type.nil? && @vba_gateway_document_type.to_s.length > 32
        invalid_properties.push('invalid value for "vba_gateway_document_type", the character length must be smaller than or equal to 32.')
      end

      if !@vba_gateway_document_value1.nil? && @vba_gateway_document_value1.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value1", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value2.nil? && @vba_gateway_document_value2.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value2", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value3.nil? && @vba_gateway_document_value3.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value3", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value4.nil? && @vba_gateway_document_value4.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value4", the character length must be smaller than or equal to 128.')
      end

      if !@vba_gateway_document_value5.nil? && @vba_gateway_document_value5.to_s.length > 128
        invalid_properties.push('invalid value for "vba_gateway_document_value5", the character length must be smaller than or equal to 128.')
      end

      if @wednesday.nil?
        invalid_properties.push('invalid value for "wednesday", wednesday cannot be nil.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @report_series_step_key.nil?
      return false if !@e_mail_body.nil? && @e_mail_body.to_s.length > 4000
      return false if !@e_mail_from.nil? && @e_mail_from.to_s.length > 128
      return false if !@e_mail_server.nil? && @e_mail_server.to_s.length > 128
      return false if !@e_mail_subject.nil? && @e_mail_subject.to_s.length > 256
      return false if !@e_mail_to.nil? && @e_mail_to.to_s.length > 128
      return false if !@entry_user.nil? && @entry_user.to_s.length > 20
      return false if !@event_priority.nil? && @event_priority.to_s.length > 32
      return false if !@event_processor.nil? && @event_processor.to_s.length > 64
      return false if !@event_subject.nil? && @event_subject.to_s.length > 256
      return false if !@event_user_id.nil? && @event_user_id.to_s.length > 16
      return false if @friday.nil?
      return false if @monday.nil?
      return false if !@note_category.nil? && @note_category.to_s.length > 8
      return false if !@note_data.nil? && @note_data.to_s.length > 4000
      return false if !@note_subject.nil? && @note_subject.to_s.length > 64
      return false if @report_series_key.nil?
      return false if !@report_criteria_object.nil? && @report_criteria_object.to_s.length > 64
      return false if !@report_library.nil? && @report_library.to_s.length > 128
      return false if !@report_object.nil? && @report_object.to_s.length > 64
      return false if !@report_printer.nil? && @report_printer.to_s.length > 128
      return false if !@report_save_location.nil? && @report_save_location.to_s.length > 256
      return false if @saturday.nil?
      return false if !@step_delay_type.nil? && @step_delay_type.to_s.length > 32
      return false if !@step_description.nil? && @step_description.to_s.length > 512
      return false if !@step_meta_data.nil? && @step_meta_data.to_s.length > 512
      return false if @step_seq.nil?
      return false if !@step_type.nil? && @step_type.to_s.length > 32
      return false if @sunday.nil?
      return false if @thursday.nil?
      return false if @tuesday.nil?
      return false if !@update_user.nil? && @update_user.to_s.length > 20
      return false if !@vba_gateway_document_category.nil? && @vba_gateway_document_category.to_s.length > 32
      return false if !@vba_gateway_document_field1.nil? && @vba_gateway_document_field1.to_s.length > 64
      return false if !@vba_gateway_document_field2.nil? && @vba_gateway_document_field2.to_s.length > 64
      return false if !@vba_gateway_document_field3.nil? && @vba_gateway_document_field3.to_s.length > 64
      return false if !@vba_gateway_document_field4.nil? && @vba_gateway_document_field4.to_s.length > 64
      return false if !@vba_gateway_document_field5.nil? && @vba_gateway_document_field5.to_s.length > 64
      return false if !@vba_gateway_document_file.nil? && @vba_gateway_document_file.to_s.length > 256
      return false if !@vba_gateway_document_folder.nil? && @vba_gateway_document_folder.to_s.length > 256
      return false if !@vba_gateway_document_id.nil? && @vba_gateway_document_id.to_s.length > 64
      return false if !@vba_gateway_document_label.nil? && @vba_gateway_document_label.to_s.length > 256
      return false if !@vba_gateway_document_type.nil? && @vba_gateway_document_type.to_s.length > 32
      return false if !@vba_gateway_document_value1.nil? && @vba_gateway_document_value1.to_s.length > 128
      return false if !@vba_gateway_document_value2.nil? && @vba_gateway_document_value2.to_s.length > 128
      return false if !@vba_gateway_document_value3.nil? && @vba_gateway_document_value3.to_s.length > 128
      return false if !@vba_gateway_document_value4.nil? && @vba_gateway_document_value4.to_s.length > 128
      return false if !@vba_gateway_document_value5.nil? && @vba_gateway_document_value5.to_s.length > 128
      return false if @wednesday.nil?
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] report_series_step_key Value to be assigned
    def report_series_step_key=(report_series_step_key)
      if report_series_step_key.nil?
        fail ArgumentError, 'report_series_step_key cannot be nil'
      end

      @report_series_step_key = report_series_step_key
    end

    # Custom attribute writer method with validation
    # @param [Object] e_mail_body Value to be assigned
    def e_mail_body=(e_mail_body)
      if !e_mail_body.nil? && e_mail_body.to_s.length > 4000
        fail ArgumentError, 'invalid value for "e_mail_body", the character length must be smaller than or equal to 4000.'
      end

      @e_mail_body = e_mail_body
    end

    # Custom attribute writer method with validation
    # @param [Object] e_mail_from Value to be assigned
    def e_mail_from=(e_mail_from)
      if !e_mail_from.nil? && e_mail_from.to_s.length > 128
        fail ArgumentError, 'invalid value for "e_mail_from", the character length must be smaller than or equal to 128.'
      end

      @e_mail_from = e_mail_from
    end

    # Custom attribute writer method with validation
    # @param [Object] e_mail_server Value to be assigned
    def e_mail_server=(e_mail_server)
      if !e_mail_server.nil? && e_mail_server.to_s.length > 128
        fail ArgumentError, 'invalid value for "e_mail_server", the character length must be smaller than or equal to 128.'
      end

      @e_mail_server = e_mail_server
    end

    # Custom attribute writer method with validation
    # @param [Object] e_mail_subject Value to be assigned
    def e_mail_subject=(e_mail_subject)
      if !e_mail_subject.nil? && e_mail_subject.to_s.length > 256
        fail ArgumentError, 'invalid value for "e_mail_subject", the character length must be smaller than or equal to 256.'
      end

      @e_mail_subject = e_mail_subject
    end

    # Custom attribute writer method with validation
    # @param [Object] e_mail_to Value to be assigned
    def e_mail_to=(e_mail_to)
      if !e_mail_to.nil? && e_mail_to.to_s.length > 128
        fail ArgumentError, 'invalid value for "e_mail_to", the character length must be smaller than or equal to 128.'
      end

      @e_mail_to = e_mail_to
    end

    # Custom attribute writer method with validation
    # @param [Object] entry_user Value to be assigned
    def entry_user=(entry_user)
      if !entry_user.nil? && entry_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "entry_user", the character length must be smaller than or equal to 20.'
      end

      @entry_user = entry_user
    end

    # Custom attribute writer method with validation
    # @param [Object] event_priority Value to be assigned
    def event_priority=(event_priority)
      if !event_priority.nil? && event_priority.to_s.length > 32
        fail ArgumentError, 'invalid value for "event_priority", the character length must be smaller than or equal to 32.'
      end

      @event_priority = event_priority
    end

    # Custom attribute writer method with validation
    # @param [Object] event_processor Value to be assigned
    def event_processor=(event_processor)
      if !event_processor.nil? && event_processor.to_s.length > 64
        fail ArgumentError, 'invalid value for "event_processor", the character length must be smaller than or equal to 64.'
      end

      @event_processor = event_processor
    end

    # Custom attribute writer method with validation
    # @param [Object] event_subject Value to be assigned
    def event_subject=(event_subject)
      if !event_subject.nil? && event_subject.to_s.length > 256
        fail ArgumentError, 'invalid value for "event_subject", the character length must be smaller than or equal to 256.'
      end

      @event_subject = event_subject
    end

    # Custom attribute writer method with validation
    # @param [Object] event_user_id Value to be assigned
    def event_user_id=(event_user_id)
      if !event_user_id.nil? && event_user_id.to_s.length > 16
        fail ArgumentError, 'invalid value for "event_user_id", the character length must be smaller than or equal to 16.'
      end

      @event_user_id = event_user_id
    end

    # Custom attribute writer method with validation
    # @param [Object] friday Value to be assigned
    def friday=(friday)
      if friday.nil?
        fail ArgumentError, 'friday cannot be nil'
      end

      @friday = friday
    end

    # Custom attribute writer method with validation
    # @param [Object] monday Value to be assigned
    def monday=(monday)
      if monday.nil?
        fail ArgumentError, 'monday cannot be nil'
      end

      @monday = monday
    end

    # Custom attribute writer method with validation
    # @param [Object] note_category Value to be assigned
    def note_category=(note_category)
      if !note_category.nil? && note_category.to_s.length > 8
        fail ArgumentError, 'invalid value for "note_category", the character length must be smaller than or equal to 8.'
      end

      @note_category = note_category
    end

    # Custom attribute writer method with validation
    # @param [Object] note_data Value to be assigned
    def note_data=(note_data)
      if !note_data.nil? && note_data.to_s.length > 4000
        fail ArgumentError, 'invalid value for "note_data", the character length must be smaller than or equal to 4000.'
      end

      @note_data = note_data
    end

    # Custom attribute writer method with validation
    # @param [Object] note_subject Value to be assigned
    def note_subject=(note_subject)
      if !note_subject.nil? && note_subject.to_s.length > 64
        fail ArgumentError, 'invalid value for "note_subject", the character length must be smaller than or equal to 64.'
      end

      @note_subject = note_subject
    end

    # Custom attribute writer method with validation
    # @param [Object] report_series_key Value to be assigned
    def report_series_key=(report_series_key)
      if report_series_key.nil?
        fail ArgumentError, 'report_series_key cannot be nil'
      end

      @report_series_key = report_series_key
    end

    # Custom attribute writer method with validation
    # @param [Object] report_criteria_object Value to be assigned
    def report_criteria_object=(report_criteria_object)
      if !report_criteria_object.nil? && report_criteria_object.to_s.length > 64
        fail ArgumentError, 'invalid value for "report_criteria_object", the character length must be smaller than or equal to 64.'
      end

      @report_criteria_object = report_criteria_object
    end

    # Custom attribute writer method with validation
    # @param [Object] report_library Value to be assigned
    def report_library=(report_library)
      if !report_library.nil? && report_library.to_s.length > 128
        fail ArgumentError, 'invalid value for "report_library", the character length must be smaller than or equal to 128.'
      end

      @report_library = report_library
    end

    # Custom attribute writer method with validation
    # @param [Object] report_object Value to be assigned
    def report_object=(report_object)
      if !report_object.nil? && report_object.to_s.length > 64
        fail ArgumentError, 'invalid value for "report_object", the character length must be smaller than or equal to 64.'
      end

      @report_object = report_object
    end

    # Custom attribute writer method with validation
    # @param [Object] report_printer Value to be assigned
    def report_printer=(report_printer)
      if !report_printer.nil? && report_printer.to_s.length > 128
        fail ArgumentError, 'invalid value for "report_printer", the character length must be smaller than or equal to 128.'
      end

      @report_printer = report_printer
    end

    # Custom attribute writer method with validation
    # @param [Object] report_save_location Value to be assigned
    def report_save_location=(report_save_location)
      if !report_save_location.nil? && report_save_location.to_s.length > 256
        fail ArgumentError, 'invalid value for "report_save_location", the character length must be smaller than or equal to 256.'
      end

      @report_save_location = report_save_location
    end

    # Custom attribute writer method with validation
    # @param [Object] saturday Value to be assigned
    def saturday=(saturday)
      if saturday.nil?
        fail ArgumentError, 'saturday cannot be nil'
      end

      @saturday = saturday
    end

    # Custom attribute writer method with validation
    # @param [Object] step_delay_type Value to be assigned
    def step_delay_type=(step_delay_type)
      if !step_delay_type.nil? && step_delay_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "step_delay_type", the character length must be smaller than or equal to 32.'
      end

      @step_delay_type = step_delay_type
    end

    # Custom attribute writer method with validation
    # @param [Object] step_description Value to be assigned
    def step_description=(step_description)
      if !step_description.nil? && step_description.to_s.length > 512
        fail ArgumentError, 'invalid value for "step_description", the character length must be smaller than or equal to 512.'
      end

      @step_description = step_description
    end

    # Custom attribute writer method with validation
    # @param [Object] step_meta_data Value to be assigned
    def step_meta_data=(step_meta_data)
      if !step_meta_data.nil? && step_meta_data.to_s.length > 512
        fail ArgumentError, 'invalid value for "step_meta_data", the character length must be smaller than or equal to 512.'
      end

      @step_meta_data = step_meta_data
    end

    # Custom attribute writer method with validation
    # @param [Object] step_seq Value to be assigned
    def step_seq=(step_seq)
      if step_seq.nil?
        fail ArgumentError, 'step_seq cannot be nil'
      end

      @step_seq = step_seq
    end

    # Custom attribute writer method with validation
    # @param [Object] step_type Value to be assigned
    def step_type=(step_type)
      if !step_type.nil? && step_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "step_type", the character length must be smaller than or equal to 32.'
      end

      @step_type = step_type
    end

    # Custom attribute writer method with validation
    # @param [Object] sunday Value to be assigned
    def sunday=(sunday)
      if sunday.nil?
        fail ArgumentError, 'sunday cannot be nil'
      end

      @sunday = sunday
    end

    # Custom attribute writer method with validation
    # @param [Object] thursday Value to be assigned
    def thursday=(thursday)
      if thursday.nil?
        fail ArgumentError, 'thursday cannot be nil'
      end

      @thursday = thursday
    end

    # Custom attribute writer method with validation
    # @param [Object] tuesday Value to be assigned
    def tuesday=(tuesday)
      if tuesday.nil?
        fail ArgumentError, 'tuesday cannot be nil'
      end

      @tuesday = tuesday
    end

    # Custom attribute writer method with validation
    # @param [Object] update_user Value to be assigned
    def update_user=(update_user)
      if !update_user.nil? && update_user.to_s.length > 20
        fail ArgumentError, 'invalid value for "update_user", the character length must be smaller than or equal to 20.'
      end

      @update_user = update_user
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_category Value to be assigned
    def vba_gateway_document_category=(vba_gateway_document_category)
      if !vba_gateway_document_category.nil? && vba_gateway_document_category.to_s.length > 32
        fail ArgumentError, 'invalid value for "vba_gateway_document_category", the character length must be smaller than or equal to 32.'
      end

      @vba_gateway_document_category = vba_gateway_document_category
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field1 Value to be assigned
    def vba_gateway_document_field1=(vba_gateway_document_field1)
      if !vba_gateway_document_field1.nil? && vba_gateway_document_field1.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field1", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field1 = vba_gateway_document_field1
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field2 Value to be assigned
    def vba_gateway_document_field2=(vba_gateway_document_field2)
      if !vba_gateway_document_field2.nil? && vba_gateway_document_field2.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field2", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field2 = vba_gateway_document_field2
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field3 Value to be assigned
    def vba_gateway_document_field3=(vba_gateway_document_field3)
      if !vba_gateway_document_field3.nil? && vba_gateway_document_field3.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field3", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field3 = vba_gateway_document_field3
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field4 Value to be assigned
    def vba_gateway_document_field4=(vba_gateway_document_field4)
      if !vba_gateway_document_field4.nil? && vba_gateway_document_field4.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field4", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field4 = vba_gateway_document_field4
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_field5 Value to be assigned
    def vba_gateway_document_field5=(vba_gateway_document_field5)
      if !vba_gateway_document_field5.nil? && vba_gateway_document_field5.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_field5", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_field5 = vba_gateway_document_field5
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_file Value to be assigned
    def vba_gateway_document_file=(vba_gateway_document_file)
      if !vba_gateway_document_file.nil? && vba_gateway_document_file.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_file", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_file = vba_gateway_document_file
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_folder Value to be assigned
    def vba_gateway_document_folder=(vba_gateway_document_folder)
      if !vba_gateway_document_folder.nil? && vba_gateway_document_folder.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_folder", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_folder = vba_gateway_document_folder
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_id Value to be assigned
    def vba_gateway_document_id=(vba_gateway_document_id)
      if !vba_gateway_document_id.nil? && vba_gateway_document_id.to_s.length > 64
        fail ArgumentError, 'invalid value for "vba_gateway_document_id", the character length must be smaller than or equal to 64.'
      end

      @vba_gateway_document_id = vba_gateway_document_id
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_label Value to be assigned
    def vba_gateway_document_label=(vba_gateway_document_label)
      if !vba_gateway_document_label.nil? && vba_gateway_document_label.to_s.length > 256
        fail ArgumentError, 'invalid value for "vba_gateway_document_label", the character length must be smaller than or equal to 256.'
      end

      @vba_gateway_document_label = vba_gateway_document_label
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_type Value to be assigned
    def vba_gateway_document_type=(vba_gateway_document_type)
      if !vba_gateway_document_type.nil? && vba_gateway_document_type.to_s.length > 32
        fail ArgumentError, 'invalid value for "vba_gateway_document_type", the character length must be smaller than or equal to 32.'
      end

      @vba_gateway_document_type = vba_gateway_document_type
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value1 Value to be assigned
    def vba_gateway_document_value1=(vba_gateway_document_value1)
      if !vba_gateway_document_value1.nil? && vba_gateway_document_value1.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value1", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value1 = vba_gateway_document_value1
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value2 Value to be assigned
    def vba_gateway_document_value2=(vba_gateway_document_value2)
      if !vba_gateway_document_value2.nil? && vba_gateway_document_value2.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value2", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value2 = vba_gateway_document_value2
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value3 Value to be assigned
    def vba_gateway_document_value3=(vba_gateway_document_value3)
      if !vba_gateway_document_value3.nil? && vba_gateway_document_value3.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value3", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value3 = vba_gateway_document_value3
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value4 Value to be assigned
    def vba_gateway_document_value4=(vba_gateway_document_value4)
      if !vba_gateway_document_value4.nil? && vba_gateway_document_value4.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value4", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value4 = vba_gateway_document_value4
    end

    # Custom attribute writer method with validation
    # @param [Object] vba_gateway_document_value5 Value to be assigned
    def vba_gateway_document_value5=(vba_gateway_document_value5)
      if !vba_gateway_document_value5.nil? && vba_gateway_document_value5.to_s.length > 128
        fail ArgumentError, 'invalid value for "vba_gateway_document_value5", the character length must be smaller than or equal to 128.'
      end

      @vba_gateway_document_value5 = vba_gateway_document_value5
    end

    # Custom attribute writer method with validation
    # @param [Object] wednesday Value to be assigned
    def wednesday=(wednesday)
      if wednesday.nil?
        fail ArgumentError, 'wednesday cannot be nil'
      end

      @wednesday = wednesday
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          report_series_step_key == o.report_series_step_key &&
          e_mail_body == o.e_mail_body &&
          e_mail_from == o.e_mail_from &&
          e_mail_server == o.e_mail_server &&
          e_mail_subject == o.e_mail_subject &&
          e_mail_to == o.e_mail_to &&
          end_date == o.end_date &&
          end_option == o.end_option &&
          end_time == o.end_time &&
          entry_date == o.entry_date &&
          entry_user == o.entry_user &&
          event_priority == o.event_priority &&
          event_processor == o.event_processor &&
          event_subject == o.event_subject &&
          event_user_group_key == o.event_user_group_key &&
          event_user_id == o.event_user_id &&
          frequency == o.frequency &&
          frequency_factor == o.frequency_factor &&
          friday == o.friday &&
          interval_option == o.interval_option &&
          monday == o.monday &&
          note_category == o.note_category &&
          note_data == o.note_data &&
          note_subject == o.note_subject &&
          relative_frequency == o.relative_frequency &&
          report_definition_key == o.report_definition_key &&
          report_series_key == o.report_series_key &&
          report_criteria_object == o.report_criteria_object &&
          report_library == o.report_library &&
          report_object == o.report_object &&
          report_printer == o.report_printer &&
          report_save_location == o.report_save_location &&
          _retry == o._retry &&
          saturday == o.saturday &&
          schedule_interval == o.schedule_interval &&
          start_date == o.start_date &&
          start_time == o.start_time &&
          step_date == o.step_date &&
          step_delay == o.step_delay &&
          step_delay_type == o.step_delay_type &&
          step_description == o.step_description &&
          step_key == o.step_key &&
          step_meta_data == o.step_meta_data &&
          step_seq == o.step_seq &&
          step_type == o.step_type &&
          sunday == o.sunday &&
          thursday == o.thursday &&
          total_occurrences == o.total_occurrences &&
          tuesday == o.tuesday &&
          update_date == o.update_date &&
          update_user == o.update_user &&
          vba_gateway_document_category == o.vba_gateway_document_category &&
          vba_gateway_document_field1 == o.vba_gateway_document_field1 &&
          vba_gateway_document_field2 == o.vba_gateway_document_field2 &&
          vba_gateway_document_field3 == o.vba_gateway_document_field3 &&
          vba_gateway_document_field4 == o.vba_gateway_document_field4 &&
          vba_gateway_document_field5 == o.vba_gateway_document_field5 &&
          vba_gateway_document_file == o.vba_gateway_document_file &&
          vba_gateway_document_folder == o.vba_gateway_document_folder &&
          vba_gateway_document_id == o.vba_gateway_document_id &&
          vba_gateway_document_label == o.vba_gateway_document_label &&
          vba_gateway_document_type == o.vba_gateway_document_type &&
          vba_gateway_document_value1 == o.vba_gateway_document_value1 &&
          vba_gateway_document_value2 == o.vba_gateway_document_value2 &&
          vba_gateway_document_value3 == o.vba_gateway_document_value3 &&
          vba_gateway_document_value4 == o.vba_gateway_document_value4 &&
          vba_gateway_document_value5 == o.vba_gateway_document_value5 &&
          vba_gateway_user_id == o.vba_gateway_user_id &&
          wednesday == o.wednesday &&
          fax_number == o.fax_number &&
          text_number == o.text_number &&
          text_message == o.text_message
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [report_series_step_key, e_mail_body, e_mail_from, e_mail_server, e_mail_subject, e_mail_to, end_date, end_option, end_time, entry_date, entry_user, event_priority, event_processor, event_subject, event_user_group_key, event_user_id, frequency, frequency_factor, friday, interval_option, monday, note_category, note_data, note_subject, relative_frequency, report_definition_key, report_series_key, report_criteria_object, report_library, report_object, report_printer, report_save_location, _retry, saturday, schedule_interval, start_date, start_time, step_date, step_delay, step_delay_type, step_description, step_key, step_meta_data, step_seq, step_type, sunday, thursday, total_occurrences, tuesday, update_date, update_user, vba_gateway_document_category, vba_gateway_document_field1, vba_gateway_document_field2, vba_gateway_document_field3, vba_gateway_document_field4, vba_gateway_document_field5, vba_gateway_document_file, vba_gateway_document_folder, vba_gateway_document_id, vba_gateway_document_label, vba_gateway_document_type, vba_gateway_document_value1, vba_gateway_document_value2, vba_gateway_document_value3, vba_gateway_document_value4, vba_gateway_document_value5, vba_gateway_user_id, wednesday, fax_number, text_number, text_message].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = Vba.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
